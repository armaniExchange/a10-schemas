{
    "obj-name": "template",
    "obj-help": "Define an SLB template",
    "obj-lineage": "cmroot.slb",
    "obj-occurences": "intermediate",
    "obj-indexing": "none",
    "obj-lineage-full": "slb.template",
    "axapi": "/axapi/v3/slb/template",
    "properties": {
        "http-list": {
            "obj-name": "http",
            "obj-help": "HTTP",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "http",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-disp-after": "slb.template.logging",
            "obj-lineage-full": "slb.template.http",
            "axapi": "/axapi/v3/slb/template/http/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "snmp-alias": "slbTemplateHttpName",
                    "description": "HTTP Template Name",
                    "src-name": "name"
                },
                "compression": {
                    "type": "dummy",
                    "description": "Compression configuration",
                    "format": "dummy",
                    "src-name": "compression"
                },
                "compression-auto-disable-on-high-cpu": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "100",
                    "condition": "compression",
                    "alias": "compression-auto-disable-on-high-cpu",
                    "description": "Auto-disable software compression on high cpu usage (Disable compression if cpu usage is above threshold. Default is off.)",
                    "format": "number",
                    "src-name": "auto-disable-on-high-cpu"
                },
                "compression-content-type": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "content-type": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "31",
                                "condition": "compression",
                                "maxItems": "10",
                                "description": "Compression content-type (Compression content-type)",
                                "src-name": "content-type"
                            }
                        }
                    ],
                    "src-name": "compression-content-type"
                },
                "compression-enable": {
                    "type": "number",
                    "format": "flag",
                    "condition": "compression",
                    "alias": "compression-enable",
                    "default": "0",
                    "description": "Enable Compression",
                    "src-name": "enable"
                },
                "compression-exclude-content-type": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "exclude-content-type": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "31",
                                "condition": "compression",
                                "maxItems": "10",
                                "description": "Compression exclude content-type (Compression exclude content type)",
                                "src-name": "exclude-content-type"
                            }
                        }
                    ],
                    "src-name": "compression-exclude-content-type"
                },
                "compression-exclude-uri": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "exclude-uri": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "31",
                                "multi-field-key": true,
                                "condition": "compression",
                                "maxItems": "10",
                                "description": "Compression exclude uri (Compression exclude uri)",
                                "src-name": "exclude-uri"
                            }
                        }
                    ],
                    "src-name": "compression-exclude-uri"
                },
                "compression-keep-accept-encoding": {
                    "type": "number",
                    "format": "flag",
                    "condition": "compression",
                    "alias": "compression-keep-accept-encoding",
                    "description": "Keep accept encoding",
                    "src-name": "keep-accept-encoding"
                },
                "compression-keep-accept-encoding-enable": {
                    "type": "number",
                    "format": "flag",
                    "condition": "compression-keep-accept-encoding",
                    "alias": "compression-keep-accept-encoding-enable",
                    "description": "Enable Server Accept Encoding",
                    "src-name": "enable"
                },
                "compression-level": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "9",
                    "condition": "compression",
                    "alias": "compression-level",
                    "description": "compression level, default 1 (compression level value, default is 1)",
                    "default": "1",
                    "format": "number",
                    "src-name": "level"
                },
                "compression-minimum-content-length": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2147483647",
                    "condition": "compression",
                    "alias": "compression-minimum-content-length",
                    "description": "Minimum Content Length (Minimum content length for compression in bytes. Default is 120.)",
                    "default": "120",
                    "format": "number",
                    "src-name": "minimum-content-length"
                },
                "failover-url": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "255",
                    "description": "Failover to this URL (Failover URL Name)",
                    "src-name": "failover-url"
                },
                "host-switching": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Host Name Switching",
                    "properties": [
                        {
                            "host-switching-type": {
                                "type": "string",
                                "format": "enum",
                                "condition": "host-switching",
                                "multi-field-key": true,
                                "maxItems": "1024",
                                "enum": [
                                    "contains",
                                    "ends-with",
                                    "equals",
                                    "starts-with",
                                    "regex-match",
                                    "host-hits-enable"
                                ],
                                "enumMap": [
                                    {
                                        "contains": "\"Select service group if hostname contains another string"
                                    },
                                    {
                                        "ends-with": "\"Select service group if hostname ends with another string"
                                    },
                                    {
                                        "equals": "\"Select service group if hostname equals another string"
                                    },
                                    {
                                        "starts-with": "\"Select service group if hostname starts with another string"
                                    },
                                    {
                                        "regex-match": "\"Select service group if URL string matches with regular expression"
                                    },
                                    {
                                        "host-hits-enable": "\"Enables Host Hits counters"
                                    }
                                ],
                                "description": "'contains': \"Select service group if hostname contains another string;'ends-with': \"Select service group if hostname ends with another string;'equals': \"Select service group if hostname equals another string;'starts-with': \"Select service group if hostname starts with another string;'regex-match': \"Select service group if URL string matches with regular expression;'host-hits-enable': \"Enables Host Hits counters;",
                                "src-name": "host-switching-type"
                            }
                        },
                        {
                            "host-match-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "host-switching-type",
                                "maxItems": "1024",
                                "disabled": "host-hits-enable",
                                "description": "Hostname String",
                                "src-name": "host-match-string"
                            }
                        },
                        {
                            "host-service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "condition": "host-match-string",
                                "description": "Create a Service Group comprising Servers (Service Group Name)",
                                "alias": "host-service-group",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "host-switching"
                },
                "insert-client-ip": {
                    "type": "number",
                    "format": "flag",
                    "description": "Insert Client IP address into HTTP header",
                    "src-name": "insert-client-ip"
                },
                "insert-client-ip-header-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "insert-client-ip",
                    "alias": "insert-client-ip-header-name",
                    "description": "HTTP Header Name for inserting Client IP",
                    "link-next-fwd": "client-ip-hdr-replace",
                    "format": "string",
                    "src-name": "client-ip"
                },
                "client-ip-hdr-replace": {
                    "type": "number",
                    "format": "flag",
                    "condition": "insert-client-ip",
                    "alias": "client-ip-hdr-replace",
                    "description": "Replace the existing header",
                    "src-name": "replace"
                },
                "insert-client-port": {
                    "type": "number",
                    "format": "flag",
                    "description": "Insert Client Port address into HTTP header",
                    "src-name": "insert-client-port"
                },
                "insert-client-port-header-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "insert-client-port",
                    "alias": "insert-client-port-header-name",
                    "description": "HTTP Header Name for inserting Client Port",
                    "link-next-fwd": "client-port-hdr-replace",
                    "format": "string",
                    "src-name": "client-port"
                },
                "client-port-hdr-replace": {
                    "type": "number",
                    "format": "flag",
                    "condition": "insert-client-port",
                    "alias": "client-port-hdr-replace",
                    "description": "Replace the existing header",
                    "src-name": "replace"
                },
                "log-retry": {
                    "type": "number",
                    "format": "flag",
                    "description": "log when HTTP request retry",
                    "src-name": "log-retry"
                },
                "non-http-bypass": {
                    "type": "number",
                    "format": "flag",
                    "description": "Bypass non-http traffic instead of dropping",
                    "src-name": "non-http-bypass"
                },
                "bypass-sg": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "non-http-bypass",
                    "alias": "bypass-sg",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Select service group for non-http traffic (Service Group Name)",
                    "src-name": "service-group"
                },
                "redirect": {
                    "type": "number",
                    "format": "flag",
                    "description": "Automatically send a redirect response",
                    "src-name": "redirect"
                },
                "rd-simple-loc": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "condition": "redirect",
                    "alias": "rd-simple-loc",
                    "link-next-fwd": "rd-resp-code",
                    "minLength": "1",
                    "maxLength": "255",
                    "not-allowed-in-no": true,
                    "description": "Redirect location tag absolute URI string (Redirect location tag absolute URI string)",
                    "src-name": "location"
                },
                "rd-secure": {
                    "type": "number",
                    "format": "flag",
                    "condition": "redirect",
                    "alias": "rd-secure",
                    "link-next-fwd": "rd-port",
                    "m-exclusion": "rd-simple-loc",
                    "not-allowed-in-no": true,
                    "description": "Use HTTPS",
                    "src-name": "secure"
                },
                "rd-port": {
                    "type": "number",
                    "condition": "redirect",
                    "alias": "rd-port",
                    "link-next-fwd": "rd-resp-code",
                    "m-exclusion": "rd-simple-loc",
                    "minimum": "1",
                    "maximum": "65535",
                    "not-allowed-in-no": true,
                    "description": "Port (Port Number)",
                    "format": "number",
                    "src-name": "port"
                },
                "redirect-rewrite": {
                    "type": "object",
                    "array-start": true,
                    "description": "Rewrite the redirect URL",
                    "properties": {
                        "match-list": {
                            "type": "array",
                            "array-start": true,
                            "array-multi": true,
                            "properties": [
                                {
                                    "redirect-match": {
                                        "type": "string",
                                        "format": "string-rlx",
                                        "minLength": "1",
                                        "maxLength": "63",
                                        "multi-field-key": true,
                                        "condition": "redirect-rewrite",
                                        "alias": "redirect-match",
                                        "maxItems": "8",
                                        "description": "URL Matching (Pattern URL String)",
                                        "src-name": "match"
                                    }
                                },
                                {
                                    "rewrite-to": {
                                        "type": "string",
                                        "format": "string-rlx",
                                        "minLength": "1",
                                        "maxLength": "63",
                                        "condition": "redirect-match",
                                        "description": "Rewrite to Destination URL String (Destination URL String)",
                                        "src-name": "rewrite-to"
                                    }
                                }
                            ],
                            "src-name": "match-list"
                        },
                        "redirect-secure": {
                            "type": "number",
                            "format": "flag",
                            "condition": "redirect-rewrite",
                            "alias": "redirect-secure",
                            "description": "Use HTTPS",
                            "src-name": "secure"
                        },
                        "redirect-secure-port": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "65535",
                            "condition": "redirect-secure",
                            "alias": "redirect-secure-port",
                            "description": "Port (Port Number)",
                            "default": "443",
                            "format": "number",
                            "src-name": "port"
                        }
                    },
                    "src-name": "redirect-rewrite"
                },
                "request-header-erase-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "request-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "maxItems": "8",
                                "description": "Erase a header from HTTP request (Header Name)",
                                "src-name": "request-header-erase"
                            }
                        }
                    ],
                    "src-name": "request-header-erase-list"
                },
                "request-header-insert-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "request-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "127",
                                "maxItems": "8",
                                "description": "Insert a header into HTTP request (Header Content (Format: \"[name]: [value]\"))",
                                "src-name": "request-header-insert"
                            }
                        },
                        {
                            "request-header-insert-type": {
                                "type": "string",
                                "format": "enum",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "request-header-insert",
                                "alias": "request-header-insert-type",
                                "src-name": "insert-type"
                            }
                        }
                    ],
                    "src-name": "request-header-insert-list"
                },
                "response-content-replace-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "response-content-replace": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "maxItems": "8",
                                "description": "replace the data from HTTP response content String in the http content need to be replaced (String in the http content need to be replaced)",
                                "src-name": "response-content-replace"
                            }
                        },
                        {
                            "response-new-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "response-content-replace",
                                "alias": "response-new-string",
                                "description": "String will be in the http content",
                                "src-name": "new-string"
                            }
                        }
                    ],
                    "src-name": "response-content-replace-list"
                },
                "response-header-erase-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "response-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "maxItems": "8",
                                "description": "Erase a header from HTTP response (Header Name)",
                                "src-name": "response-header-erase"
                            }
                        }
                    ],
                    "src-name": "response-header-erase-list"
                },
                "response-header-insert-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "response-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "127",
                                "maxItems": "8",
                                "description": "Insert a header into HTTP response (Header Content (Format: \"[name]: [value]\"))",
                                "src-name": "response-header-insert"
                            }
                        },
                        {
                            "response-header-insert-type": {
                                "type": "string",
                                "format": "enum",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "response-header-insert",
                                "alias": "response-header-insert-type",
                                "src-name": "insert-type"
                            }
                        }
                    ],
                    "src-name": "response-header-insert-list"
                },
                "retry-on-5xx": {
                    "type": "number",
                    "format": "flag",
                    "description": "Retry http request on HTTP 5xx code",
                    "src-name": "retry-on-5xx"
                },
                "retry-on-5xx-val": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "3",
                    "condition": "retry-on-5xx",
                    "description": "Number of times to retry (default is 3)",
                    "default": "3",
                    "format": "number",
                    "src-name": "retry-on-5xx-val"
                },
                "retry-on-5xx-per-req": {
                    "type": "number",
                    "format": "flag",
                    "m-exclusion": "retry-on-5xx",
                    "description": "Retry http request on HTTP 5xx code for each request",
                    "src-name": "retry-on-5xx-per-req"
                },
                "retry-on-5xx-per-req-val": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "3",
                    "condition": "retry-on-5xx-per-req",
                    "description": "Number of times to retry (default is 3)",
                    "default": "3",
                    "format": "number",
                    "src-name": "retry-on-5xx-per-req-val"
                },
                "strict-transaction-switch": {
                    "type": "number",
                    "format": "flag",
                    "description": "Force server selection on every HTTP request",
                    "src-name": "strict-transaction-switch"
                },
                "template": {
                    "type": "object",
                    "array-start": true,
                    "description": "Applying Template to the HTTP template",
                    "properties": {
                        "logging": {
                            "type": "string",
                            "minLength": "1",
                            "maxLength": "127",
                            "condition": "template",
                            "description": "Logging template (Logging Config name)",
                            "obj-lineage-full": "slb.template.logging",
                            "$ref": "/axapi/v3/slb/template/logging",
                            "format": "string",
                            "src-name": "logging"
                        }
                    },
                    "src-name": "template"
                },
                "term-11client-hdr-conn-close": {
                    "type": "number",
                    "format": "flag",
                    "description": "Terminate HTTP 1.1 client when req has Connection: close",
                    "src-name": "term-11client-hdr-conn-close"
                },
                "100-cont-wait-for-req-complete": {
                    "type": "number",
                    "format": "flag",
                    "description": "When REQ has Expect 100 and response is not 100, then wait for whole request to be sent",
                    "src-name": "100-cont-wait-for-req-complete"
                },
                "url-hash-persist": {
                    "type": "number",
                    "format": "flag",
                    "description": "Use URL's hash value to select server",
                    "src-name": "url-hash-persist"
                },
                "url-hash-offset": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "255",
                    "condition": "url-hash-persist",
                    "link-next-fwd": "url-hash-first",
                    "alias": "url-hash-offset",
                    "description": "Skip part of URL to calculate hash value (Offset of the URL string)",
                    "format": "number",
                    "src-name": "offset"
                },
                "url-hash-first": {
                    "type": "number",
                    "minimum": "4",
                    "maximum": "128",
                    "condition": "url-hash-persist",
                    "link-next-fwd": "use-server-status",
                    "alias": "url-hash-first",
                    "description": "Use the begining part of URL to calculate hash value (URL string length to calculate hash value)",
                    "format": "number",
                    "src-name": "first"
                },
                "url-hash-last": {
                    "type": "number",
                    "minimum": "4",
                    "maximum": "128",
                    "condition": "url-hash-persist",
                    "m-exclusion": "url-hash-first",
                    "link-next-fwd": "use-server-status",
                    "alias": "url-hash-last",
                    "description": "Use the end part of URL to calculate hash value (URL string length to calculate hash value)",
                    "format": "number",
                    "src-name": "last"
                },
                "use-server-status": {
                    "type": "number",
                    "format": "flag",
                    "condition": "url-hash-first",
                    "description": "Use Server-Status header to do URL hashing",
                    "src-name": "use-server-status"
                },
                "url-switching": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "URL switching",
                    "properties": [
                        {
                            "url-switching-type": {
                                "type": "string",
                                "format": "enum",
                                "condition": "url-switching",
                                "multi-field-key": true,
                                "maxItems": "1024",
                                "enum": [
                                    "contains",
                                    "ends-with",
                                    "equals",
                                    "starts-with",
                                    "regex-match",
                                    "url-case-insensitive",
                                    "url-hits-enable"
                                ],
                                "enumMap": [
                                    {
                                        "contains": "\"Select service group if URL string contains another string"
                                    },
                                    {
                                        "ends-with": "\"Select service group if URL string ends with another string"
                                    },
                                    {
                                        "equals": "\"Select service group if URL string equals another string"
                                    },
                                    {
                                        "starts-with": "\"Select service group if URL string starts with another string"
                                    },
                                    {
                                        "regex-match": "\"Select service group if URL string matches with regular expression"
                                    },
                                    {
                                        "url-case-insensitive": "\"Case insensitive URL switching"
                                    },
                                    {
                                        "url-hits-enable": "\"Enables URL Hits"
                                    }
                                ],
                                "description": "'contains': \"Select service group if URL string contains another string;'ends-with': \"Select service group if URL string ends with another string;'equals': \"Select service group if URL string equals another string;'starts-with': \"Select service group if URL string starts with another string;'regex-match': \"Select service group if URL string matches with regular expression;'url-case-insensitive': \"Case insensitive URL switching;'url-hits-enable': \"Enables URL Hits;",
                                "src-name": "url-switching-type"
                            }
                        },
                        {
                            "url-match-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "url-switching-type",
                                "maxItems": "1024",
                                "description": "URL String",
                                "disabled": "url-case-insensitive/url-hits-enable",
                                "src-name": "url-match-string"
                            }
                        },
                        {
                            "url-service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "condition": "url-match-string",
                                "description": "Create a Service Group comprising Servers (Service Group Name)",
                                "alias": "url-service-group",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "url-switching"
                },
                "req-hdr-wait-time": {
                    "type": "number",
                    "format": "flag",
                    "description": "HTTP request header wait time before abort connection",
                    "src-name": "req-hdr-wait-time"
                },
                "req-hdr-wait-time-val": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "default": "7",
                    "condition": "req-hdr-wait-time",
                    "description": "Number of seconds wait for client request header (default is 7)",
                    "format": "number",
                    "src-name": "req-hdr-wait-time-val"
                },
                "request-line-case-insensitive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Parse http request line as case insensitive",
                    "src-name": "request-line-case-insensitive"
                },
                "keep-client-alive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Keep client alive",
                    "src-name": "keep-client-alive"
                },
                "cookie-format": {
                    "type": "string",
                    "enum": [
                        "rfc6265"
                    ],
                    "enumMap": [
                        {
                            "rfc6265": "\"Follow rfc6265"
                        }
                    ],
                    "description": "Parse RFC Cookie standard 'rfc6265': \"Follow rfc6265;",
                    "format": "enum",
                    "src-name": "cookie-format"
                }
            },
            "type": "object"
        },
        "cache-list": {
            "obj-name": "cache",
            "obj-help": "RAM caching template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "ram caching",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-stats-oid": "2004",
            "obj-disp-after": "slb.template.logging",
            "obj-lineage-full": "slb.template.cache",
            "axapi": "/axapi/v3/slb/template/cache/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "snmp-alias": "slbTemplateCache",
                    "description": "Specify cache template name",
                    "src-name": "name"
                },
                "accept-reload-req": {
                    "type": "number",
                    "format": "flag",
                    "description": "Accept reload requests via cache-control directives in HTTP headers",
                    "src-name": "accept-reload-req"
                },
                "age": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "999999",
                    "description": "Specify duration in seconds cached content valid, default is 3600 seconds (seconds that the cached content is valid (default 3600 seconds))",
                    "default": "3600",
                    "format": "number",
                    "src-name": "age"
                },
                "default-policy-nocache": {
                    "type": "number",
                    "format": "flag",
                    "description": "Specify default policy to be to not cache",
                    "src-name": "default-policy-nocache"
                },
                "disable-insert-age": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable insertion of age header in response served from RAM cache",
                    "src-name": "disable-insert-age"
                },
                "disable-insert-via": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable insertion of via header in response served from RAM cache",
                    "src-name": "disable-insert-via"
                },
                "max-cache-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4096",
                    "description": "Specify maximum cache size in megabytes, default is 80MB (RAM cache size in megabytes (default 80MB))",
                    "default": "80",
                    "format": "number",
                    "src-name": "max-cache-size"
                },
                "min-content-size": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "268435455",
                    "description": "Minimum size (bytes) of response that can be cached - default 512 (Minimum size (bytes) of response that can be cached - default 512)",
                    "default": "512",
                    "format": "number",
                    "src-name": "min-content-size"
                },
                "max-content-size": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "268435455",
                    "description": "Maximum size (bytes) of response that can be cached - default 81920 (80KB) (Maximum size (bytes) of response that can be cached - default 81920 (80KB))",
                    "default": "81920",
                    "format": "number",
                    "src-name": "max-content-size"
                },
                "policy": {
                    "type": "dummy",
                    "description": "Specify list of policies to cache/notcache/invalidate",
                    "format": "dummy",
                    "src-name": "policy"
                },
                "local-uri-policy": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "local-uri": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "maxItems": "16",
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "policy",
                                "description": "Specify Local URI for caching (Specify URI pattern that the policy should be applied to, maximum 63 charaters)",
                                "src-name": "local-uri"
                            }
                        }
                    ],
                    "src-name": "local-uri-policy"
                },
                "uri-policy": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "uri": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "maxItems": "16",
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "policy",
                                "description": "Specify URI for cache policy (Specify URI pattern that the policy should be applied to, maximum 63 charaters)",
                                "src-name": "uri"
                            }
                        },
                        {
                            "cache-action": {
                                "type": "string",
                                "condition": "uri",
                                "enum": [
                                    "cache",
                                    "nocache"
                                ],
                                "enumMap": [
                                    {
                                        "cache": "\"Specify if certain URIs should be cached"
                                    },
                                    {
                                        "nocache": "\"Specify if certain URIs should not be cached"
                                    }
                                ],
                                "description": "'cache': \"Specify if certain URIs should be cached;'nocache': \"Specify if certain URIs should not be cached;",
                                "format": "enum",
                                "src-name": "cache-action"
                            }
                        },
                        {
                            "cache-value": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "999999",
                                "condition": "cache-action",
                                "disabled": "nocache",
                                "description": "Specify seconds that content should be cached, default is age specified in cache template",
                                "format": "number",
                                "src-name": "cache-value"
                            }
                        },
                        {
                            "invalidate": {
                                "type": "string",
                                "format": "string-rlx",
                                "condition": "uri",
                                "description": "Specify if URI should invalidate cache entries matching pattern (pattern that would match entries to be invalidated (64 chars max))",
                                "src-name": "invalidate"
                            }
                        }
                    ],
                    "src-name": "uri-policy"
                },
                "remove-cookies": {
                    "type": "number",
                    "format": "flag",
                    "description": "Remove cookies in response and cache",
                    "src-name": "remove-cookies"
                },
                "replacement-policy": {
                    "type": "string",
                    "enum": [
                        "LFU"
                    ],
                    "enumMap": [
                        {
                            "LFU": "\"LFU"
                        }
                    ],
                    "description": "Set cache replacement policy, default is LFU 'LFU': \"LFU;",
                    "default": "LFU",
                    "format": "enum",
                    "src-name": "replacement-policy"
                },
                "template": {
                    "type": "dummy",
                    "description": "Applying template to the cache template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "logging": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "Specify logging template (Specify logging config name) (Logging Config name)",
                    "obj-lineage-full": "slb.template.logging",
                    "$ref": "/axapi/v3/slb/template/logging",
                    "format": "string",
                    "src-name": "logging"
                },
                "verify-host": {
                    "type": "number",
                    "format": "flag",
                    "description": "Verify request using host before sending response from RAM cache",
                    "src-name": "verify-host"
                }
            },
            "type": "object"
        },
        "cipher-list": {
            "obj-name": "cipher",
            "obj-help": "SSL Cipher Template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "cipher",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.cipher",
            "axapi": "/axapi/v3/slb/template/cipher/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "name",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Cipher Template Name",
                    "src-name": "name"
                },
                "cipher-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "cipher-suite": {
                                "type": "string",
                                "multi-field-key": true,
                                "maxItems": "32",
                                "enum": [
                                    "SSL3_RSA_DES_192_CBC3_SHA",
                                    "SSL3_RSA_DES_40_CBC_SHA",
                                    "SSL3_RSA_DES_64_CBC_SHA",
                                    "SSL3_RSA_RC4_128_MD5",
                                    "SSL3_RSA_RC4_128_SHA",
                                    "SSL3_RSA_RC4_40_MD5",
                                    "TLS1_RSA_AES_128_SHA",
                                    "TLS1_RSA_AES_256_SHA",
                                    "TLS1_RSA_EXPORT1024_RC4_56_MD5",
                                    "TLS1_RSA_EXPORT1024_RC4_56_SHA",
                                    "TLS1_RSA_AES_128_SHA256",
                                    "TLS1_RSA_AES_256_SHA256",
                                    "TLS1_DHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_DHE_RSA_AES_128_SHA",
                                    "TLS1_DHE_RSA_AES_128_SHA256",
                                    "TLS1_DHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_DHE_RSA_AES_256_SHA",
                                    "TLS1_DHE_RSA_AES_256_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_RSA_AES_128_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_SHA256",
                                    "TLS1_ECDHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA",
                                    "TLS1_RSA_AES_128_GCM_SHA256",
                                    "TLS1_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                ],
                                "enumMap": [
                                    {
                                        "SSL3_RSA_DES_192_CBC3_SHA": "\"SSL3_RSA_DES_192_CBC3_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_40_CBC_SHA": "\"SSL3_RSA_DES_40_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_64_CBC_SHA": "\"SSL3_RSA_DES_64_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_MD5": "\"SSL3_RSA_RC4_128_MD5"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_SHA": "\"SSL3_RSA_RC4_128_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_40_MD5": "\"SSL3_RSA_RC4_40_MD5"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA": "\"TLS1_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA": "\"TLS1_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_MD5": "\"TLS1_RSA_EXPORT1024_RC4_56_MD5"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_SHA": "\"TLS1_RSA_EXPORT1024_RC4_56_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA256": "\"TLS1_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA256": "\"TLS1_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_GCM_SHA256": "\"TLS1_DHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA": "\"TLS1_DHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA256": "\"TLS1_DHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_GCM_SHA384": "\"TLS1_DHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA": "\"TLS1_DHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA256": "\"TLS1_DHE_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA": "\"TLS1_ECDHE_ECDSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA": "\"TLS1_ECDHE_ECDSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA": "\"TLS1_ECDHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA256": "\"TLS1_ECDHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA": "\"TLS1_ECDHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_GCM_SHA256": "\"TLS1_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_GCM_SHA384": "\"TLS1_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA384": "\"TLS1_ECDHE_RSA_AES_256_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                    }
                                ],
                                "description": "'SSL3_RSA_DES_192_CBC3_SHA': \"SSL3_RSA_DES_192_CBC3_SHA;'SSL3_RSA_DES_40_CBC_SHA': \"SSL3_RSA_DES_40_CBC_SHA;'SSL3_RSA_DES_64_CBC_SHA': \"SSL3_RSA_DES_64_CBC_SHA;'SSL3_RSA_RC4_128_MD5': \"SSL3_RSA_RC4_128_MD5;'SSL3_RSA_RC4_128_SHA': \"SSL3_RSA_RC4_128_SHA;'SSL3_RSA_RC4_40_MD5': \"SSL3_RSA_RC4_40_MD5;'TLS1_RSA_AES_128_SHA': \"TLS1_RSA_AES_128_SHA;'TLS1_RSA_AES_256_SHA': \"TLS1_RSA_AES_256_SHA;'TLS1_RSA_EXPORT1024_RC4_56_MD5': \"TLS1_RSA_EXPORT1024_RC4_56_MD5;'TLS1_RSA_EXPORT1024_RC4_56_SHA': \"TLS1_RSA_EXPORT1024_RC4_56_SHA;'TLS1_RSA_AES_128_SHA256': \"TLS1_RSA_AES_128_SHA256;'TLS1_RSA_AES_256_SHA256': \"TLS1_RSA_AES_256_SHA256;'TLS1_DHE_RSA_AES_128_GCM_SHA256': \"TLS1_DHE_RSA_AES_128_GCM_SHA256;'TLS1_DHE_RSA_AES_128_SHA': \"TLS1_DHE_RSA_AES_128_SHA;'TLS1_DHE_RSA_AES_128_SHA256': \"TLS1_DHE_RSA_AES_128_SHA256;'TLS1_DHE_RSA_AES_256_GCM_SHA384': \"TLS1_DHE_RSA_AES_256_GCM_SHA384;'TLS1_DHE_RSA_AES_256_SHA': \"TLS1_DHE_RSA_AES_256_SHA;'TLS1_DHE_RSA_AES_256_SHA256': \"TLS1_DHE_RSA_AES_256_SHA256;'TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256;'TLS1_ECDHE_ECDSA_AES_128_SHA': \"TLS1_ECDHE_ECDSA_AES_128_SHA;'TLS1_ECDHE_ECDSA_AES_128_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_SHA256;'TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA': \"TLS1_ECDHE_ECDSA_AES_256_SHA;'TLS1_ECDHE_RSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_RSA_AES_128_GCM_SHA256;'TLS1_ECDHE_RSA_AES_128_SHA': \"TLS1_ECDHE_RSA_AES_128_SHA;'TLS1_ECDHE_RSA_AES_128_SHA256': \"TLS1_ECDHE_RSA_AES_128_SHA256;'TLS1_ECDHE_RSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA': \"TLS1_ECDHE_RSA_AES_256_SHA;'TLS1_RSA_AES_128_GCM_SHA256': \"TLS1_RSA_AES_128_GCM_SHA256;'TLS1_RSA_AES_256_GCM_SHA384': \"TLS1_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA384': \"TLS1_ECDHE_RSA_AES_256_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_SHA384;",
                                "format": "enum",
                                "src-name": "cipher-suite"
                            }
                        },
                        {
                            "priority": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "100",
                                "default": "1",
                                "condition": "cipher-suite",
                                "description": "Cipher priority (Cipher priority (default 1))",
                                "format": "number",
                                "src-name": "priority"
                            }
                        }
                    ],
                    "src-name": "cipher-cfg"
                }
            },
            "type": "object"
        },
        "client-ssl-list": {
            "obj-name": "client-ssl",
            "obj-help": "Client SSL Template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-stats-oid": "2043",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "client ssl",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-disp-after": "slb.service-group",
            "obj-lineage-full": "slb.template.client-ssl",
            "axapi": "/axapi/v3/slb/template/client-ssl/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "snmp-alias": "slbTemplateClientSslName",
                    "description": "Client SSL Template Name",
                    "src-name": "name"
                },
                "template": {
                    "type": "dummy",
                    "description": "Template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "template-cipher": {
                    "type": "string",
                    "format": "name",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "alias": "template-cipher",
                    "obj-lineage-full": "slb.template.cipher",
                    "$ref": "/axapi/v3/slb/template/cipher",
                    "description": "Cipher Template (Cipher Config Name)",
                    "src-name": "cipher"
                },
                "template-hsm": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "alias": "template-hsm",
                    "description": "HSM Template (HSM Template Name)",
                    "format": "string",
                    "src-name": "hsm"
                },
                "hsm-param": {
                    "type": "dummy",
                    "description": "Specify HSM Parameter",
                    "format": "dummy",
                    "src-name": "hsm-param"
                },
                "hsm-type": {
                    "type": "enum",
                    "condition": "hsm-param",
                    "enum": [
                        "thales-embed",
                        "thales-hwcrhk"
                    ],
                    "enumMap": [
                        {
                            "thales-embed": "\"Thales embed key"
                        },
                        {
                            "thales-hwcrhk": "\"Thales hwcrhk Key"
                        }
                    ],
                    "description": "'thales-embed': \"Thales embed key;'thales-hwcrhk': \"Thales hwcrhk Key;",
                    "format": "enum",
                    "src-name": "hsm-type"
                },
                "auth-username": {
                    "type": "string",
                    "format": "string-follow",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Specify the Username Field in the Client Certificate(If multi-fields are specificed, prior one has higher priority)",
                    "src-name": "auth-username"
                },
                "common-name": {
                    "type": "number",
                    "format": "flag",
                    "ignore-in-json": true,
                    "description": "Certificate subject common came",
                    "src-name": "common-name"
                },
                "subject-alt-name-othername": {
                    "type": "number",
                    "format": "flag",
                    "ignore-in-json": true,
                    "description": "Subject Alternative Name - other name",
                    "src-name": "subject-alt-name-othername"
                },
                "subject-alt-name-email": {
                    "type": "number",
                    "format": "flag",
                    "ignore-in-json": true,
                    "description": "Subject Alternative Name - extension email",
                    "src-name": "subject-alt-name-email"
                },
                "ca-certs": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "ca-cert": {
                                "type": "string",
                                "multi-field-key": true,
                                "description": "CA Certificate (CA Certificate Name)",
                                "minLength": "1",
                                "maxLength": "245",
                                "maxItems": "128",
                                "format": "string",
                                "src-name": "ca-cert"
                            }
                        },
                        {
                            "client-ocsp": {
                                "type": "number",
                                "format": "flag",
                                "condition": "ca-cert",
                                "alias": "client-ocsp",
                                "description": "Specify ocsp authentication server(s) for client certificate verification",
                                "src-name": "ocsp"
                            }
                        },
                        {
                            "client-ocsp-srvr": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "client-ocsp",
                                "alias": "client-ocsp-srvr",
                                "obj-lineage-full": "aam.authentication.server.ocsp",
                                "$ref": "/axapi/v3/aam/authentication/server/ocsp",
                                "description": "Specify authentication server",
                                "src-name": "server"
                            }
                        },
                        {
                            "client-ocsp-sg": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "client-ocsp",
                                "alias": "client-ocsp-sg",
                                "obj-lineage-full": "aam.authentication.service-group",
                                "$ref": "/axapi/v3/aam/authentication/service-group",
                                "description": "Specify service-group (Service group name)",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "ca-certs"
                },
                "chain-cert": {
                    "type": "string",
                    "description": "Chain Certificate (Chain Certificate Name)",
                    "minLength": "1",
                    "maxLength": "245",
                    "format": "string",
                    "src-name": "chain-cert"
                },
                "cert": {
                    "type": "string",
                    "description": "Server Certificate (Certificate Name)",
                    "minLength": "1",
                    "maxLength": "245",
                    "format": "string",
                    "src-name": "cert"
                },
                "cipher": {
                    "type": "dummy",
                    "description": "SSL cipher suites and all by default",
                    "format": "dummy",
                    "src-name": "cipher"
                },
                "cipher-without-prio-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "cipher-wo-prio": {
                                "type": "enum",
                                "m-exclusion": "template-cipher",
                                "multi-field-key": true,
                                "condition": "cipher",
                                "enum": [
                                    "SSL3_RSA_DES_192_CBC3_SHA",
                                    "SSL3_RSA_DES_40_CBC_SHA",
                                    "SSL3_RSA_DES_64_CBC_SHA",
                                    "SSL3_RSA_RC4_128_MD5",
                                    "SSL3_RSA_RC4_128_SHA",
                                    "SSL3_RSA_RC4_40_MD5",
                                    "TLS1_RSA_AES_128_SHA",
                                    "TLS1_RSA_AES_256_SHA",
                                    "TLS1_RSA_EXPORT1024_RC4_56_MD5",
                                    "TLS1_RSA_EXPORT1024_RC4_56_SHA",
                                    "TLS1_RSA_AES_128_SHA256",
                                    "TLS1_RSA_AES_256_SHA256",
                                    "TLS1_DHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_DHE_RSA_AES_128_SHA",
                                    "TLS1_DHE_RSA_AES_128_SHA256",
                                    "TLS1_DHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_DHE_RSA_AES_256_SHA",
                                    "TLS1_DHE_RSA_AES_256_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_RSA_AES_128_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_SHA256",
                                    "TLS1_ECDHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA",
                                    "TLS1_RSA_AES_128_GCM_SHA256",
                                    "TLS1_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                ],
                                "enumMap": [
                                    {
                                        "SSL3_RSA_DES_192_CBC3_SHA": "\"SSL3_RSA_DES_192_CBC3_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_40_CBC_SHA": "\"SSL3_RSA_DES_40_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_64_CBC_SHA": "\"SSL3_RSA_DES_64_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_MD5": "\"SSL3_RSA_RC4_128_MD5"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_SHA": "\"SSL3_RSA_RC4_128_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_40_MD5": "\"SSL3_RSA_RC4_40_MD5"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA": "\"TLS1_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA": "\"TLS1_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_MD5": "\"TLS1_RSA_EXPORT1024_RC4_56_MD5"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_SHA": "\"TLS1_RSA_EXPORT1024_RC4_56_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA256": "\"TLS1_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA256": "\"TLS1_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_GCM_SHA256": "\"TLS1_DHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA": "\"TLS1_DHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA256": "\"TLS1_DHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_GCM_SHA384": "\"TLS1_DHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA": "\"TLS1_DHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA256": "\"TLS1_DHE_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA": "\"TLS1_ECDHE_ECDSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA": "\"TLS1_ECDHE_ECDSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA": "\"TLS1_ECDHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA256": "\"TLS1_ECDHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA": "\"TLS1_ECDHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_GCM_SHA256": "\"TLS1_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_GCM_SHA384": "\"TLS1_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA384": "\"TLS1_ECDHE_RSA_AES_256_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                    }
                                ],
                                "description": "'SSL3_RSA_DES_192_CBC3_SHA': \"SSL3_RSA_DES_192_CBC3_SHA;'SSL3_RSA_DES_40_CBC_SHA': \"SSL3_RSA_DES_40_CBC_SHA;'SSL3_RSA_DES_64_CBC_SHA': \"SSL3_RSA_DES_64_CBC_SHA;'SSL3_RSA_RC4_128_MD5': \"SSL3_RSA_RC4_128_MD5;'SSL3_RSA_RC4_128_SHA': \"SSL3_RSA_RC4_128_SHA;'SSL3_RSA_RC4_40_MD5': \"SSL3_RSA_RC4_40_MD5;'TLS1_RSA_AES_128_SHA': \"TLS1_RSA_AES_128_SHA;'TLS1_RSA_AES_256_SHA': \"TLS1_RSA_AES_256_SHA;'TLS1_RSA_EXPORT1024_RC4_56_MD5': \"TLS1_RSA_EXPORT1024_RC4_56_MD5;'TLS1_RSA_EXPORT1024_RC4_56_SHA': \"TLS1_RSA_EXPORT1024_RC4_56_SHA;'TLS1_RSA_AES_128_SHA256': \"TLS1_RSA_AES_128_SHA256;'TLS1_RSA_AES_256_SHA256': \"TLS1_RSA_AES_256_SHA256;'TLS1_DHE_RSA_AES_128_GCM_SHA256': \"TLS1_DHE_RSA_AES_128_GCM_SHA256;'TLS1_DHE_RSA_AES_128_SHA': \"TLS1_DHE_RSA_AES_128_SHA;'TLS1_DHE_RSA_AES_128_SHA256': \"TLS1_DHE_RSA_AES_128_SHA256;'TLS1_DHE_RSA_AES_256_GCM_SHA384': \"TLS1_DHE_RSA_AES_256_GCM_SHA384;'TLS1_DHE_RSA_AES_256_SHA': \"TLS1_DHE_RSA_AES_256_SHA;'TLS1_DHE_RSA_AES_256_SHA256': \"TLS1_DHE_RSA_AES_256_SHA256;'TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256;'TLS1_ECDHE_ECDSA_AES_128_SHA': \"TLS1_ECDHE_ECDSA_AES_128_SHA;'TLS1_ECDHE_ECDSA_AES_128_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_SHA256;'TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA': \"TLS1_ECDHE_ECDSA_AES_256_SHA;'TLS1_ECDHE_RSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_RSA_AES_128_GCM_SHA256;'TLS1_ECDHE_RSA_AES_128_SHA': \"TLS1_ECDHE_RSA_AES_128_SHA;'TLS1_ECDHE_RSA_AES_128_SHA256': \"TLS1_ECDHE_RSA_AES_128_SHA256;'TLS1_ECDHE_RSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA': \"TLS1_ECDHE_RSA_AES_256_SHA;'TLS1_RSA_AES_128_GCM_SHA256': \"TLS1_RSA_AES_128_GCM_SHA256;'TLS1_RSA_AES_256_GCM_SHA384': \"TLS1_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA384': \"TLS1_ECDHE_RSA_AES_256_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_SHA384;",
                                "maxItems": "32",
                                "format": "enum",
                                "src-name": "cipher-wo-prio"
                            }
                        }
                    ],
                    "src-name": "cipher-without-prio-list"
                },
                "dh-param": {
                    "type": "dummy",
                    "description": "Specify Diffie Hellman Parameter",
                    "format": "dummy",
                    "src-name": "dh-param"
                },
                "dh-type": {
                    "type": "enum",
                    "condition": "dh-param",
                    "enum": [
                        "1024",
                        "1024-dsa",
                        "2048"
                    ],
                    "enumMap": [
                        {
                            "1024": "\"1024"
                        },
                        {
                            "1024-dsa": "\"1024-dsa"
                        },
                        {
                            "2048": "\"2048"
                        }
                    ],
                    "description": "'1024': \"1024;'1024-dsa': \"1024-dsa;'2048': \"2048;",
                    "format": "enum",
                    "src-name": "dh-type"
                },
                "ec-name": {
                    "type": "dummy",
                    "description": "Specify Elliptic Curve Name",
                    "format": "dummy",
                    "src-name": "ec-name"
                },
                "ec-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "ec": {
                                "type": "enum",
                                "multi-field-key": true,
                                "condition": "ec-name",
                                "enum": [
                                    "secp256r1",
                                    "secp384r1"
                                ],
                                "enumMap": [
                                    {
                                        "secp256r1": "\"X9_62_prime256v1"
                                    },
                                    {
                                        "secp384r1": "\"secp384r1"
                                    }
                                ],
                                "description": "'secp256r1': \"X9_62_prime256v1;'secp384r1': \"secp384r1;",
                                "maxItems": "2",
                                "format": "enum",
                                "src-name": "ec"
                            }
                        }
                    ],
                    "src-name": "ec-list"
                },
                "ocsp-stapling": {
                    "type": "number",
                    "format": "flag",
                    "description": "Config OCSP stapling support",
                    "src-name": "ocsp-stapling"
                },
                "ocspst-ca-cert": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "condition": "ocsp-stapling",
                    "alias": "ocspst-ca-cert",
                    "description": "CA certificate",
                    "format": "string",
                    "src-name": "ca-cert"
                },
                "ocspst-ocsp": {
                    "type": "number",
                    "format": "flag",
                    "condition": "ocspst-ca-cert",
                    "alias": "ocspst-ocsp",
                    "description": "Specify OCSP Authentication",
                    "src-name": "ocsp"
                },
                "ocspst-srvr": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "ocspst-ocsp",
                    "alias": "ocspst-srvr",
                    "obj-lineage-full": "aam.authentication.server.ocsp",
                    "$ref": "/axapi/v3/aam/authentication/server/ocsp",
                    "description": "Specify OCSP authentication server",
                    "src-name": "server"
                },
                "ocspst-srvr-period": {
                    "type": "dummy",
                    "condition": "ocspst-srvr",
                    "alias": "ocspst-srvr-period",
                    "description": "Specify certificate status update period (Default is 1 hour)",
                    "format": "dummy",
                    "src-name": "period"
                },
                "ocspst-srvr-days": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "condition": "ocspst-srvr-period",
                    "alias": "ocspst-srvr-days",
                    "link-next-fwd": "ocspst-srvr-timeout",
                    "description": "Specify update period, in days",
                    "format": "number",
                    "src-name": "days"
                },
                "ocspst-srvr-hours": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "23",
                    "condition": "ocspst-srvr-period",
                    "alias": "ocspst-srvr-hours",
                    "link-next-fwd": "ocspst-srvr-timeout",
                    "description": "Specify update period, in hours",
                    "default": "1",
                    "m-exclusion": "ocspst-srvr-days",
                    "format": "number",
                    "src-name": "hours"
                },
                "ocspst-srvr-minutes": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "59",
                    "condition": "ocspst-srvr-period",
                    "alias": "ocspst-srvr-minutes",
                    "link-next-fwd": "ocspst-srvr-timeout",
                    "description": "Specify update period, in minutes",
                    "m-exclusion": "ocspst-srvr-hours, ocspst-srvr-days",
                    "format": "number",
                    "src-name": "minutes"
                },
                "ocspst-srvr-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "44640",
                    "condition": "ocspst-srvr",
                    "alias": "ocspst-srvr-timeout",
                    "link-next-rev": "ocspst-srvr-period",
                    "description": "Specify retry timeout (Default is 30 mins)",
                    "default": "30",
                    "format": "number",
                    "src-name": "timeout"
                },
                "ocspst-sg": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "ocspst-ocsp",
                    "alias": "ocspst-sg",
                    "obj-lineage-full": "aam.authentication.service-group",
                    "$ref": "/axapi/v3/aam/authentication/service-group",
                    "m-exclusion": "ocspst-srvr",
                    "description": "Specify authentication service group",
                    "src-name": "service-group"
                },
                "ocspst-sg-period": {
                    "type": "dummy",
                    "condition": "ocspst-sg",
                    "alias": "ocspst-sg-period",
                    "description": "Specify certificate status update period (Default is 1 hour)",
                    "format": "dummy",
                    "src-name": "period"
                },
                "ocspst-sg-days": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "condition": "ocspst-sg-period",
                    "alias": "ocspst-sg-days",
                    "link-next-fwd": "ocspst-sg-timeout",
                    "description": "Specify update period, in days",
                    "format": "number",
                    "src-name": "days"
                },
                "ocspst-sg-hours": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "23",
                    "condition": "ocspst-sg-period",
                    "alias": "ocspst-sg-hours",
                    "link-next-fwd": "ocspst-sg-timeout",
                    "description": "Specify update period, in hours",
                    "default": "1",
                    "m-exclusion": "ocspst-sg-days",
                    "format": "number",
                    "src-name": "hours"
                },
                "ocspst-sg-minutes": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "59",
                    "condition": "ocspst-sg-period",
                    "alias": "ocspst-sg-minutes",
                    "link-next-fwd": "ocspst-sg-timeout",
                    "description": "Specify update period, in minutes",
                    "m-exclusion": "ocspst-sg-hours, ocspst-sg-days",
                    "format": "number",
                    "src-name": "minutes"
                },
                "ocspst-sg-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "44640",
                    "condition": "ocspst-sg",
                    "alias": "ocspst-sg-timeout",
                    "link-next-rev": "ocspst-sg-period",
                    "description": "Specify retry timeout (Default is 30 mins)",
                    "default": "30",
                    "format": "number",
                    "src-name": "timeout"
                },
                "client-certificate": {
                    "type": "string",
                    "description": "'Ignore': \"Don't request client certificate;'Require': \"Require client certificate;'Request': \"Request client certificate;",
                    "enum": [
                        "Ignore",
                        "Require",
                        "Request"
                    ],
                    "enumMap": [
                        {
                            "Ignore": "\"Don't request client certificate"
                        },
                        {
                            "Require": "\"Require client certificate"
                        },
                        {
                            "Request": "\"Request client certificate"
                        }
                    ],
                    "default": "Ignore",
                    "format": "enum",
                    "src-name": "client-certificate"
                },
                "req-ca-lists": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "client-certificate-Request-CA": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "245",
                                "maxItems": "10",
                                "description": "Send CA lists in certificate request (CA Certificate Name)",
                                "format": "string",
                                "src-name": "client-certificate-Request-CA"
                            }
                        }
                    ],
                    "src-name": "req-ca-lists"
                },
                "close-notify": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send close notification when terminate connection",
                    "src-name": "close-notify"
                },
                "crl-certs": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "crl": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "255",
                                "maxItems": "128",
                                "description": "Certificate Revocation Lists (Certificate Revocation Lists file name)",
                                "format": "string",
                                "src-name": "crl"
                            }
                        }
                    ],
                    "src-name": "crl-certs"
                },
                "forward-proxy-ca-cert": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "description": "CA Certificate for forward proxy (SSL forward proxy CA Certificate Name)",
                    "feat-license": "ssli",
                    "format": "string",
                    "src-name": "forward-proxy-ca-cert"
                },
                "forward-proxy-ca-key": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "description": "CA Private Key for forward proxy (SSL forward proxy CA Key Name)",
                    "feat-license": "ssli",
                    "format": "string",
                    "src-name": "forward-proxy-ca-key"
                },
                "forward-pass-phrase": {
                    "type": "dummy",
                    "condition": "forward-proxy-ca-key",
                    "alias": "forward-pass-phrase",
                    "description": "Password Phrase",
                    "format": "dummy",
                    "src-name": "pass-phrase"
                },
                "forward-passphrase": {
                    "type": "string",
                    "format": "password",
                    "condition": "forward-pass-phrase",
                    "alias": "forward-passphrase",
                    "description": "Password Phrase",
                    "src-name": "passphrase"
                },
                "forward-encrypted": {
                    "type": "encrypted",
                    "format": "encrypted",
                    "condition": "forward-pass-phrase",
                    "alias": "forward-encrypted",
                    "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                    "src-name": "encrypted"
                },
                "forward-proxy-alt-sign": {
                    "type": "number",
                    "format": "flag",
                    "description": "Forward proxy alternate signing cert and key",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-alt-sign"
                },
                "fp-alt-cert": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "condition": "forward-proxy-alt-sign",
                    "alias": "fp-alt-cert",
                    "description": "CA Certificate for forward proxy alternate signing (Certificate name)",
                    "format": "string",
                    "src-name": "cert"
                },
                "fp-alt-key": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "condition": "fp-alt-cert",
                    "alias": "fp-alt-key",
                    "description": "CA Private Key for forward proxy alternate signing (Key name)",
                    "format": "string",
                    "src-name": "key"
                },
                "fp-alt-pass-phrase": {
                    "type": "dummy",
                    "condition": "fp-alt-key",
                    "alias": "fp-alt-pass-phrase",
                    "description": "Password Phrase",
                    "format": "dummy",
                    "src-name": "pass-phrase"
                },
                "fp-alt-passphrase": {
                    "type": "string",
                    "format": "password",
                    "condition": "fp-alt-pass-phrase",
                    "alias": "fp-alt-passphrase",
                    "description": "Password Phrase",
                    "src-name": "passphrase"
                },
                "fp-alt-encrypted": {
                    "type": "encrypted",
                    "format": "encrypted",
                    "condition": "fp-alt-pass-phrase",
                    "alias": "fp-alt-encrypted",
                    "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                    "src-name": "encrypted"
                },
                "forward-proxy-trusted-ca-lists": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Forward proxy trusted CA list files",
                    "properties": [
                        {
                            "forward-proxy-trusted-ca": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "255",
                                "description": "Forward proxy trusted CA file (CA file name)",
                                "maxItems": "128",
                                "feat-license": "ssli",
                                "format": "string",
                                "src-name": "forward-proxy-trusted-ca"
                            }
                        }
                    ],
                    "src-name": "forward-proxy-trusted-ca-lists"
                },
                "enable-tls-alert-logging": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable TLS alert logging",
                    "src-name": "enable-tls-alert-logging"
                },
                "alert-type": {
                    "type": "string",
                    "enum": [
                        "fatal"
                    ],
                    "enumMap": [
                        {
                            "fatal": "\"Log fatal alerts"
                        }
                    ],
                    "description": "'fatal': \"Log fatal alerts;",
                    "condition": "enable-tls-alert-logging",
                    "format": "enum",
                    "src-name": "alert-type"
                },
                "forward-proxy-verify-cert-fail-action": {
                    "type": "number",
                    "format": "flag",
                    "description": "Action taken if certificate verification fails, close the connection by default",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-verify-cert-fail-action"
                },
                "verify-cert-fail-action": {
                    "type": "string",
                    "condition": "forward-proxy-verify-cert-fail-action",
                    "enum": [
                        "bypass",
                        "continue",
                        "drop"
                    ],
                    "enumMap": [
                        {
                            "bypass": "\"bypass SSLi processing"
                        },
                        {
                            "continue": "\"continue the connection"
                        },
                        {
                            "drop": "\"close the connection"
                        }
                    ],
                    "description": "'bypass': \"bypass SSLi processing;'continue': \"continue the connection;'drop': \"close the connection;",
                    "default": "drop",
                    "alias": "verify-cert-fail-action",
                    "format": "enum",
                    "src-name": "action-value"
                },
                "forward-proxy-cert-revoke-action": {
                    "type": "number",
                    "format": "flag",
                    "description": "Action taken if a certificate is irreversibly revoked, bypass SSLi processing by default",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-cert-revoke-action"
                },
                "cert-revoke-action": {
                    "type": "string",
                    "condition": "forward-proxy-cert-revoke-action",
                    "enum": [
                        "bypass",
                        "continue",
                        "drop"
                    ],
                    "enumMap": [
                        {
                            "bypass": "\"bypass SSLi processing"
                        },
                        {
                            "continue": "\"continue the connection"
                        },
                        {
                            "drop": "\"close the connection"
                        }
                    ],
                    "description": "'bypass': \"bypass SSLi processing;'continue': \"continue the connection;'drop': \"close the connection;",
                    "default": "bypass",
                    "alias": "cert-revoke-action",
                    "format": "enum",
                    "src-name": "action-value"
                },
                "forward-proxy-cert-unknown-action": {
                    "type": "number",
                    "format": "flag",
                    "description": "Action taken if a certificate revocation status is unknown, bypass SSLi processing by default",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-cert-unknown-action"
                },
                "cert-unknown-action": {
                    "type": "string",
                    "condition": "forward-proxy-cert-unknown-action",
                    "enum": [
                        "bypass",
                        "continue",
                        "drop"
                    ],
                    "enumMap": [
                        {
                            "bypass": "\"bypass SSLi processing"
                        },
                        {
                            "continue": "\"continue the connection"
                        },
                        {
                            "drop": "\"close the connection"
                        }
                    ],
                    "description": "'bypass': \"bypass SSLi processing;'continue': \"continue the connection;'drop': \"close the connection;",
                    "default": "bypass",
                    "alias": "cert-unknown-action",
                    "format": "enum",
                    "src-name": "action-value"
                },
                "forward-proxy-cache-persistence": {
                    "type": "dummy",
                    "description": "Configure class-list for SSLi cache persistence",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-cache-persistence"
                },
                "cache-persistence-list": {
                    "type": "dummy",
                    "description": "Do persistence hash on certificates that match this class-list",
                    "condition": "forward-proxy-cache-persistence",
                    "alias": "cache-persistence-list",
                    "format": "dummy",
                    "src-name": "class-list"
                },
                "cache-persistence-list-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Class List Name",
                    "condition": "cache-persistence-list",
                    "format": "string",
                    "src-name": "cache-persistence-list-name"
                },
                "forward-proxy-cert-ext": {
                    "type": "dummy",
                    "description": "Extensions to add to forward proxy certificates",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-cert-ext"
                },
                "fp-cert-ext-crldp": {
                    "type": "string",
                    "condition": "forward-proxy-cert-ext",
                    "description": "CRL Distribution Point",
                    "alias": "fp-cert-ext-crldp",
                    "format": "string",
                    "src-name": "crldp"
                },
                "aia": {
                    "type": "dummy",
                    "condition": "forward-proxy-cert-ext",
                    "description": "Authority Information Access",
                    "format": "dummy",
                    "src-name": "aia"
                },
                "fp-cert-ext-aia-ocsp": {
                    "type": "string",
                    "condition": "aia",
                    "description": "OCSP",
                    "alias": "fp-cert-ext-aia-ocsp",
                    "format": "string",
                    "src-name": "ocsp"
                },
                "fp-cert-ext-aia-ca-issuers": {
                    "type": "string",
                    "m-exclusion": "fp-cert-ext-aia-ocsp",
                    "condition": "aia",
                    "description": "CA Issuers",
                    "alias": "fp-cert-ext-aia-ca-issuers",
                    "format": "string",
                    "src-name": "ca-issuers"
                },
                "forward-proxy-cert-validity": {
                    "type": "dummy",
                    "description": "Set the validity period for forward proxy certificates",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-cert-validity"
                },
                "notbefore": {
                    "type": "number",
                    "format": "flag",
                    "condition": "forward-proxy-cert-validity",
                    "description": "notBefore date",
                    "src-name": "notbefore"
                },
                "notbeforeday": {
                    "type": "number",
                    "condition": "notbefore",
                    "minimum": "1",
                    "maximum": "31",
                    "description": "Day",
                    "alias": "notbeforeday",
                    "format": "number",
                    "src-name": "day"
                },
                "notbeforemonth": {
                    "type": "number",
                    "condition": "notbeforeday",
                    "minimum": "1",
                    "maximum": "12",
                    "description": "Month",
                    "alias": "notbeforemonth",
                    "format": "number",
                    "src-name": "month"
                },
                "notbeforeyear": {
                    "type": "number",
                    "condition": "notbeforemonth",
                    "minimum": "2005",
                    "maximum": "2035",
                    "description": "Year",
                    "alias": "notbeforeyear",
                    "format": "number",
                    "src-name": "year"
                },
                "notafter": {
                    "type": "number",
                    "format": "flag",
                    "condition": "forward-proxy-cert-validity",
                    "description": "notAfter date",
                    "src-name": "notafter"
                },
                "notafterday": {
                    "type": "number",
                    "condition": "notafter",
                    "minimum": "1",
                    "maximum": "31",
                    "description": "Day",
                    "alias": "notafterday",
                    "format": "number",
                    "src-name": "day"
                },
                "notaftermonth": {
                    "type": "number",
                    "condition": "notafterday",
                    "minimum": "1",
                    "maximum": "12",
                    "description": "Month",
                    "alias": "notaftermonth",
                    "format": "number",
                    "src-name": "month"
                },
                "notafteryear": {
                    "type": "number",
                    "condition": "notaftermonth",
                    "minimum": "2005",
                    "maximum": "2035",
                    "description": "Year",
                    "alias": "notafteryear",
                    "format": "number",
                    "src-name": "year"
                },
                "forward-proxy-hash-persistence-interval": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "720",
                    "default": "30",
                    "hide-help": true,
                    "description": "Set the time interval to save the hash persistence certs (Interval value, in minutes)",
                    "format": "number",
                    "src-name": "forward-proxy-hash-persistence-interval"
                },
                "forward-proxy-ssl-version": {
                    "type": "number",
                    "minimum": "31",
                    "maximum": "33",
                    "default": "33",
                    "description": "TLS/SSL version, default is TLS1.2 (TLS/SSL version: 31-TLSv1.0, 32-TLSv1.1 and 33-TLSv1.2)",
                    "feat-license": "ssli",
                    "format": "number",
                    "src-name": "forward-proxy-ssl-version"
                },
                "forward-proxy-ocsp-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable ocsp-stapling for forward proxy",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-ocsp-disable"
                },
                "forward-proxy-crl-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable Certificate Revocation List checking for forward proxy",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-crl-disable"
                },
                "forward-proxy-cert-cache": {
                    "type": "dummy",
                    "description": "Forward proxy certificate cache options",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-cert-cache"
                },
                "forward-proxy-cert-cache-timeout": {
                    "type": "number",
                    "condition": "forward-proxy-cert-cache",
                    "alias": "forward-proxy-cert-cache-timeout",
                    "default": "3600",
                    "description": "Certificate cache timeout, default is 1 hour (seconds, set to 0 for never timeout)",
                    "format": "number",
                    "src-name": "timeout"
                },
                "forward-proxy-cert-cache-limit": {
                    "type": "number",
                    "condition": "forward-proxy-cert-cache",
                    "alias": "forward-proxy-cert-cache-limit",
                    "default": "524288",
                    "description": "Certificate cache size limit, default is 524288 (set to 0 for unlimited size)",
                    "format": "number",
                    "src-name": "limit"
                },
                "forward-proxy-cert-expiry": {
                    "type": "number",
                    "format": "flag",
                    "description": "Adjust certificate expiry relative to the time when it is created on the device",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-cert-expiry"
                },
                "expire-hours": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "168",
                    "condition": "forward-proxy-cert-expiry",
                    "alias": "expire-hours",
                    "description": "Certificate lifetime in hours (hours)",
                    "format": "number",
                    "src-name": "hours"
                },
                "forward-proxy-enable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable SSL forward proxy",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-enable"
                },
                "forward-proxy-selfsign-redir": {
                    "type": "number",
                    "format": "flag",
                    "description": "Redirect connections to pages with self signed certs to a warning page",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-selfsign-redir"
                },
                "forward-proxy-failsafe-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable Failsafe for SSL forward proxy",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-failsafe-disable"
                },
                "forward-proxy-log-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable SSL forward proxy logging",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-log-disable"
                },
                "forward-proxy-source-nat": {
                    "type": "dummy",
                    "description": "Source NAT to fetch server certificate",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-source-nat"
                },
                "fp-cert-fetch-natpool-name": {
                    "type": "string",
                    "format": "string-rlx",
                    "alias": "fp-cert-fetch-natpool-name",
                    "condition": "forward-proxy-source-nat",
                    "obj-lineage-full": "ip.nat.pool, ipv6.nat.pool, ip.nat.pool-group, ipv6.nat.pool-group",
                    "$ref": "/axapi/v3/ip/nat/pool, ipv6/nat/pool, ip/nat/pool-group, ipv6/nat/pool-group",
                    "description": "Specify NAT pool or pool group (NAT Pool or Pool Group)",
                    "example-default": "ip.nat.pool",
                    "src-name": "pool"
                },
                "fp-cert-fetch-autonat": {
                    "type": "string",
                    "alias": "fp-cert-fetch-autonat",
                    "condition": "forward-proxy-source-nat",
                    "m-exclusion": "fp-cert-fetch-natpool-name",
                    "enum": [
                        "auto"
                    ],
                    "enumMap": [
                        {
                            "auto": "\"Configure auto NAT for server certificate fetching"
                        }
                    ],
                    "description": "'auto': \"Configure auto NAT for server certificate fetching;",
                    "format": "enum",
                    "src-name": "auto"
                },
                "forward-proxy-bypass": {
                    "type": "dummy",
                    "description": "Bypass SSL forward proxy",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-bypass"
                },
                "case-insensitive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Case insensitive forward proxy bypass",
                    "condition": "forward-proxy-bypass",
                    "src-name": "case-insensitive"
                },
                "class-list": {
                    "type": "dummy",
                    "description": "Forward proxy bypass if SNI string matches class-list",
                    "condition": "forward-proxy-bypass",
                    "format": "dummy",
                    "src-name": "class-list"
                },
                "class-list-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Class List Name",
                    "condition": "class-list",
                    "format": "string",
                    "src-name": "class-list-name"
                },
                "multi-class-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "If binding multiple class-lists",
                    "condition": "class-list",
                    "properties": [
                        {
                            "multi-clist-name": {
                                "type": "string",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "maxItems": "16",
                                "m-exclusion": "class-list-name",
                                "description": "Class List Name",
                                "condition": "multi-class-list",
                                "format": "string",
                                "src-name": "multi-clist-name"
                            }
                        }
                    ],
                    "src-name": "multi-class-list"
                },
                "forward-proxy-inspect": {
                    "type": "dummy",
                    "description": "SSL forward proxy Inspect Class-list",
                    "feat-license": "ssli",
                    "format": "dummy",
                    "src-name": "forward-proxy-inspect"
                },
                "inspect-list": {
                    "type": "dummy",
                    "description": "Forward proxy Inspect if SNI string matches class-list",
                    "condition": "forward-proxy-inspect",
                    "alias": "inspect-list",
                    "format": "dummy",
                    "src-name": "class-list"
                },
                "inspect-list-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Class List Name",
                    "condition": "inspect-list",
                    "format": "string",
                    "src-name": "inspect-list-name"
                },
                "client-auth": {
                    "type": "dummy",
                    "condition": "forward-proxy-bypass",
                    "description": "Bypass SSL forward proxy client authentication",
                    "format": "dummy",
                    "src-name": "client-auth"
                },
                "contains-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "contains": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string contains another string (SNI String)",
                                "condition": "forward-proxy-bypass",
                                "maxItems": "64",
                                "src-name": "contains"
                            }
                        }
                    ],
                    "src-name": "contains-list"
                },
                "ends-with-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "ends-with": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string ends with another string (SNI String)",
                                "condition": "forward-proxy-bypass",
                                "maxItems": "64",
                                "src-name": "ends-with"
                            }
                        }
                    ],
                    "src-name": "ends-with-list"
                },
                "equals-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "equals": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string equals another string (SNI String)",
                                "condition": "forward-proxy-bypass",
                                "maxItems": "64",
                                "src-name": "equals"
                            }
                        }
                    ],
                    "src-name": "equals-list"
                },
                "starts-with-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "starts-with": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string starts with another string (SNI String)",
                                "condition": "forward-proxy-bypass",
                                "maxItems": "64",
                                "src-name": "starts-with"
                            }
                        }
                    ],
                    "src-name": "starts-with-list"
                },
                "client-auth-case-insensitive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Case insensitive forward proxy client auth bypass",
                    "condition": "client-auth",
                    "alias": "client-auth-case-insensitive",
                    "src-name": "case-insensitive"
                },
                "client-auth-class-list": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "client-auth",
                    "alias": "client-auth-class-list",
                    "description": "Forward proxy client auth bypass if SNI string matches class-list (Class List Name)",
                    "format": "string",
                    "src-name": "class-list"
                },
                "client-auth-contains-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "client-auth-contains": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string contains another string (SNI String)",
                                "condition": "client-auth",
                                "alias": "client-auth-contains",
                                "maxItems": "64",
                                "src-name": "contains"
                            }
                        }
                    ],
                    "src-name": "client-auth-contains-list"
                },
                "client-auth-ends-with-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "client-auth-ends-with": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string ends with another string (SNI String)",
                                "condition": "client-auth",
                                "alias": "client-auth-ends-with",
                                "maxItems": "64",
                                "src-name": "ends-with"
                            }
                        }
                    ],
                    "src-name": "client-auth-ends-with-list"
                },
                "client-auth-equals-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "client-auth-equals": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string equals another string (SNI String)",
                                "condition": "client-auth",
                                "alias": "client-auth-equals",
                                "maxItems": "64",
                                "src-name": "equals"
                            }
                        }
                    ],
                    "src-name": "client-auth-equals-list"
                },
                "client-auth-starts-with-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "client-auth-starts-with": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Forward proxy bypass if SNI string starts with another string (SNI String)",
                                "condition": "client-auth",
                                "alias": "client-auth-starts-with",
                                "maxItems": "64",
                                "src-name": "starts-with"
                            }
                        }
                    ],
                    "src-name": "client-auth-starts-with-list"
                },
                "forward-proxy-cert-not-ready-action": {
                    "type": "string",
                    "description": "'bypass': \"bypass the connection;'reset': \"reset the connection;",
                    "enum": [
                        "bypass",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "bypass": "\"bypass the connection"
                        },
                        {
                            "reset": "\"reset the connection"
                        }
                    ],
                    "default": "bypass",
                    "feat-license": "ssli",
                    "format": "enum",
                    "src-name": "forward-proxy-cert-not-ready-action"
                },
                "web-category": {
                    "type": "object",
                    "array-start": true,
                    "condition": "forward-proxy-bypass",
                    "description": "Web URL Category",
                    "feat-license": "=web-category",
                    "properties": {
                        "uncategorized": {
                            "type": "number",
                            "format": "flag",
                            "description": "Uncategorized URLs",
                            "condition": "web-category",
                            "src-name": "uncategorized"
                        },
                        "real-estate": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Real Estate",
                            "condition": "web-category",
                            "src-name": "real-estate"
                        },
                        "computer-and-internet-security": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Computer and Internet Security",
                            "condition": "web-category",
                            "src-name": "computer-and-internet-security"
                        },
                        "financial-services": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Financial Services",
                            "condition": "web-category",
                            "src-name": "financial-services"
                        },
                        "business-and-economy": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Business and Economy",
                            "condition": "web-category",
                            "src-name": "business-and-economy"
                        },
                        "computer-and-internet-info": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Computer and Internet Info",
                            "condition": "web-category",
                            "src-name": "computer-and-internet-info"
                        },
                        "auctions": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Auctions",
                            "condition": "web-category",
                            "src-name": "auctions"
                        },
                        "shopping": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Shopping",
                            "condition": "web-category",
                            "src-name": "shopping"
                        },
                        "cult-and-occult": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Cult and Occult",
                            "condition": "web-category",
                            "src-name": "cult-and-occult"
                        },
                        "travel": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Travel",
                            "condition": "web-category",
                            "src-name": "travel"
                        },
                        "drugs": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Abused Drugs",
                            "condition": "web-category",
                            "src-name": "drugs"
                        },
                        "adult-and-pornography": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Adult and Pornography",
                            "condition": "web-category",
                            "src-name": "adult-and-pornography"
                        },
                        "home-and-garden": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Home and Garden",
                            "condition": "web-category",
                            "src-name": "home-and-garden"
                        },
                        "military": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Military",
                            "condition": "web-category",
                            "src-name": "military"
                        },
                        "social-network": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Social Network",
                            "condition": "web-category",
                            "src-name": "social-network"
                        },
                        "dead-sites": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Dead Sites (db Ops only)",
                            "condition": "web-category",
                            "src-name": "dead-sites"
                        },
                        "stock-advice-and-tools": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Stock Advice and Tools",
                            "condition": "web-category",
                            "src-name": "stock-advice-and-tools"
                        },
                        "training-and-tools": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Training and Tools",
                            "condition": "web-category",
                            "src-name": "training-and-tools"
                        },
                        "dating": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Dating",
                            "condition": "web-category",
                            "src-name": "dating"
                        },
                        "sex-education": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Sex Education",
                            "condition": "web-category",
                            "src-name": "sex-education"
                        },
                        "religion": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Religion",
                            "condition": "web-category",
                            "src-name": "religion"
                        },
                        "entertainment-and-arts": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Entertainment and Arts",
                            "condition": "web-category",
                            "src-name": "entertainment-and-arts"
                        },
                        "personal-sites-and-blogs": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Personal sites and Blogs",
                            "condition": "web-category",
                            "src-name": "personal-sites-and-blogs"
                        },
                        "legal": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Legal",
                            "condition": "web-category",
                            "src-name": "legal"
                        },
                        "local-information": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Local Information",
                            "condition": "web-category",
                            "src-name": "local-information"
                        },
                        "streaming-media": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Streaming Media",
                            "condition": "web-category",
                            "src-name": "streaming-media"
                        },
                        "job-search": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Job Search",
                            "condition": "web-category",
                            "src-name": "job-search"
                        },
                        "gambling": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Gambling",
                            "condition": "web-category",
                            "src-name": "gambling"
                        },
                        "translation": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Translation",
                            "condition": "web-category",
                            "src-name": "translation"
                        },
                        "reference-and-research": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Reference and Research",
                            "condition": "web-category",
                            "src-name": "reference-and-research"
                        },
                        "shareware-and-freeware": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Shareware and Freeware",
                            "condition": "web-category",
                            "src-name": "shareware-and-freeware"
                        },
                        "peer-to-peer": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Peer to Peer",
                            "condition": "web-category",
                            "src-name": "peer-to-peer"
                        },
                        "marijuana": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Marijuana",
                            "condition": "web-category",
                            "src-name": "marijuana"
                        },
                        "hacking": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Hacking",
                            "condition": "web-category",
                            "src-name": "hacking"
                        },
                        "games": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Games",
                            "condition": "web-category",
                            "src-name": "games"
                        },
                        "philosophy-and-politics": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Philosophy and Political Advocacy",
                            "condition": "web-category",
                            "src-name": "philosophy-and-politics"
                        },
                        "weapons": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Weapons",
                            "condition": "web-category",
                            "src-name": "weapons"
                        },
                        "pay-to-surf": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Pay to Surf",
                            "condition": "web-category",
                            "src-name": "pay-to-surf"
                        },
                        "hunting-and-fishing": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Hunting and Fishing",
                            "condition": "web-category",
                            "src-name": "hunting-and-fishing"
                        },
                        "society": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Society",
                            "condition": "web-category",
                            "src-name": "society"
                        },
                        "educational-institutions": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Educational Institutions",
                            "condition": "web-category",
                            "src-name": "educational-institutions"
                        },
                        "online-greeting-cards": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Online Greeting cards",
                            "condition": "web-category",
                            "src-name": "online-greeting-cards"
                        },
                        "sports": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Sports",
                            "condition": "web-category",
                            "src-name": "sports"
                        },
                        "swimsuits-and-intimate-apparel": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Swimsuits and Intimate Apparel",
                            "condition": "web-category",
                            "src-name": "swimsuits-and-intimate-apparel"
                        },
                        "questionable": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Questionable",
                            "condition": "web-category",
                            "src-name": "questionable"
                        },
                        "kids": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Kids",
                            "condition": "web-category>,ion web-category",
                            "src-name": "kids"
                        },
                        "hate-and-racism": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Hate and Racism",
                            "condition": "web-category",
                            "src-name": "hate-and-racism"
                        },
                        "personal-storage": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Personal Storage",
                            "condition": "web-category",
                            "src-name": "personal-storage"
                        },
                        "violence": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Violence",
                            "condition": "web-category",
                            "src-name": "violence"
                        },
                        "keyloggers-and-monitoring": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Keyloggers and Monitoring",
                            "condition": "web-category",
                            "src-name": "keyloggers-and-monitoring"
                        },
                        "search-engines": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Search Engines",
                            "condition": "web-category",
                            "src-name": "search-engines"
                        },
                        "internet-portals": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Internet Portals",
                            "condition": "web-category",
                            "src-name": "internet-portals"
                        },
                        "web-advertisements": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Web Advertisements",
                            "condition": "web-category",
                            "src-name": "web-advertisements"
                        },
                        "cheating": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Cheating",
                            "condition": "web-category",
                            "src-name": "cheating"
                        },
                        "gross": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Gross",
                            "condition": "web-category",
                            "src-name": "gross"
                        },
                        "web-based-email": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Web based email",
                            "condition": "web-category",
                            "src-name": "web-based-email"
                        },
                        "malware-sites": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Malware Sites",
                            "condition": "web-category",
                            "src-name": "malware-sites"
                        },
                        "phishing-and-other-fraud": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Phishing and Other Frauds",
                            "condition": "web-category",
                            "src-name": "phishing-and-other-fraud"
                        },
                        "proxy-avoid-and-anonymizers": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Proxy Avoid and Anonymizers",
                            "condition": "web-category",
                            "src-name": "proxy-avoid-and-anonymizers"
                        },
                        "spyware-and-adware": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Spyware and Adware",
                            "condition": "web-category",
                            "src-name": "spyware-and-adware"
                        },
                        "music": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Music",
                            "condition": "web-category",
                            "src-name": "music"
                        },
                        "government": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Government",
                            "condition": "web-category",
                            "src-name": "government"
                        },
                        "nudity": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Nudity",
                            "condition": "web-category",
                            "src-name": "nudity"
                        },
                        "news-and-media": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category News and Media",
                            "condition": "web-category",
                            "src-name": "news-and-media"
                        },
                        "illegal": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Illegal",
                            "condition": "web-category",
                            "src-name": "illegal"
                        },
                        "cdns": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category CDNs",
                            "condition": "web-category",
                            "src-name": "cdns"
                        },
                        "internet-communications": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Internet Communications",
                            "condition": "web-category",
                            "src-name": "internet-communications"
                        },
                        "bot-nets": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Bot Nets",
                            "condition": "web-category",
                            "src-name": "bot-nets"
                        },
                        "abortion": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Abortion",
                            "condition": "web-category",
                            "src-name": "abortion"
                        },
                        "health-and-medicine": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Health and Medicine",
                            "condition": "web-category",
                            "src-name": "health-and-medicine"
                        },
                        "confirmed-spam-sources": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Confirmed SPAM Sources",
                            "condition": "web-category",
                            "src-name": "confirmed-spam-sources"
                        },
                        "spam-urls": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category SPAM URLs",
                            "condition": "web-category",
                            "src-name": "spam-urls"
                        },
                        "unconfirmed-spam-sources": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Unconfirmed SPAM Sources",
                            "condition": "web-category",
                            "src-name": "unconfirmed-spam-sources"
                        },
                        "open-http-proxies": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Open HTTP Proxies",
                            "condition": "web-category",
                            "src-name": "open-http-proxies"
                        },
                        "dynamic-comment": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Dynamic Comment",
                            "condition": "web-category",
                            "src-name": "dynamic-comment"
                        },
                        "parked-domains": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Parked Domains",
                            "condition": "web-category",
                            "src-name": "parked-domains"
                        },
                        "alcohol-and-tobacco": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Alcohol and Tobacco",
                            "condition": "web-category",
                            "src-name": "alcohol-and-tobacco"
                        },
                        "private-ip-addresses": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Private IP Addresses",
                            "condition": "web-category",
                            "src-name": "private-ip-addresses"
                        },
                        "image-and-video-search": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Image and Video Search",
                            "condition": "web-category",
                            "src-name": "image-and-video-search"
                        },
                        "fashion-and-beauty": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Fashion and Beauty",
                            "condition": "web-category",
                            "src-name": "fashion-and-beauty"
                        },
                        "recreation-and-hobbies": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Recreation and Hobbies",
                            "condition": "web-category",
                            "src-name": "recreation-and-hobbies"
                        },
                        "motor-vehicles": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Motor Vehicles",
                            "condition": "web-category",
                            "src-name": "motor-vehicles"
                        },
                        "web-hosting-sites": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Web Hosting Sites",
                            "condition": "web-category",
                            "src-name": "web-hosting-sites"
                        },
                        "food-and-dining": {
                            "type": "number",
                            "format": "flag",
                            "description": "Category Food and Dining",
                            "condition": "web-category",
                            "src-name": "food-and-dining"
                        }
                    },
                    "src-name": "web-category"
                },
                "key": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "description": "Server Private Key (Key Name)",
                    "format": "string",
                    "src-name": "key"
                },
                "key-pass-phrase": {
                    "type": "dummy",
                    "condition": "key",
                    "alias": "key-pass-phrase",
                    "description": "Password Phrase",
                    "format": "dummy",
                    "src-name": "pass-phrase"
                },
                "key-passphrase": {
                    "type": "string",
                    "format": "password",
                    "condition": "key-pass-phrase",
                    "alias": "key-passphrase",
                    "description": "Password Phrase",
                    "src-name": "passphrase"
                },
                "key-encrypted": {
                    "type": "encrypted",
                    "format": "encrypted",
                    "condition": "key-pass-phrase",
                    "alias": "key-encrypted",
                    "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                    "src-name": "encrypted"
                },
                "server-name-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "server-name": {
                                "type": "string",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Server name indication in Client hello extension (Server name String)",
                                "maxItems": "8192",
                                "format": "string",
                                "src-name": "server-name"
                            }
                        },
                        {
                            "server-cert": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "245",
                                "condition": "server-name",
                                "alias": "server-cert",
                                "description": "Server Certificate associated to SNI (Server Certificate Name)",
                                "format": "string",
                                "src-name": "cert"
                            }
                        },
                        {
                            "server-key": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "245",
                                "condition": "server-cert",
                                "alias": "server-key",
                                "description": "Server Private Key associated to SNI (Server Private Key Name)",
                                "format": "string",
                                "src-name": "key"
                            }
                        },
                        {
                            "server-pass-phrase": {
                                "type": "dummy",
                                "condition": "server-key",
                                "alias": "server-pass-phrase",
                                "description": "help Password Phrase",
                                "format": "dummy",
                                "src-name": "pass-phrase"
                            }
                        },
                        {
                            "server-passphrase": {
                                "type": "string",
                                "format": "password",
                                "condition": "server-pass-phrase",
                                "alias": "server-passphrase",
                                "description": "help Password Phrase",
                                "src-name": "passphrase"
                            }
                        },
                        {
                            "server-encrypted": {
                                "type": "encrypted",
                                "format": "encrypted",
                                "condition": "server-pass-phrase",
                                "alias": "server-encrypted",
                                "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                                "src-name": "encrypted"
                            }
                        },
                        {
                            "server-name-regex": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "Server name indication in Client hello extension with regular expression (Server name String with regex)",
                                "maxItems": "1024",
                                "src-name": "server-name-regex"
                            }
                        },
                        {
                            "server-cert-regex": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "245",
                                "condition": "server-name-regex",
                                "alias": "server-cert-regex",
                                "description": "Server Certificate associated to SNI regex (Server Certificate Name)",
                                "format": "string",
                                "src-name": "cert"
                            }
                        },
                        {
                            "server-key-regex": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "245",
                                "condition": "server-cert-regex",
                                "alias": "server-key-regex",
                                "description": "Server Private Key associated to SNI regex (Server Private Key Name)",
                                "format": "string",
                                "src-name": "key"
                            }
                        },
                        {
                            "server-pass-phrase-regex": {
                                "type": "dummy",
                                "condition": "server-key-regex",
                                "alias": "server-pass-phrase-regex",
                                "description": "help Password Phrase",
                                "format": "dummy",
                                "src-name": "pass-phrase"
                            }
                        },
                        {
                            "server-passphrase-regex": {
                                "type": "string",
                                "format": "password",
                                "condition": "server-pass-phrase-regex",
                                "alias": "server-passphrase-regex",
                                "description": "help Password Phrase",
                                "src-name": "passphrase"
                            }
                        },
                        {
                            "server-encrypted-regex": {
                                "type": "encrypted",
                                "format": "encrypted",
                                "condition": "server-pass-phrase-regex",
                                "alias": "server-encrypted-regex",
                                "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                                "src-name": "encrypted"
                            }
                        }
                    ],
                    "src-name": "server-name-list"
                },
                "session-cache-size": {
                    "type": "number",
                    "description": "Session Cache Size (Specify 0 to disable Session ID reuse.)",
                    "minimum": "0",
                    "maximum": "^session_cache_size_max",
                    "format": "number",
                    "src-name": "session-cache-size"
                },
                "session-cache-timeout": {
                    "type": "number",
                    "description": "Session Cache Timeout (Timeout value, in seconds)",
                    "minimum": "0",
                    "maximum": "604800",
                    "format": "number",
                    "src-name": "session-cache-timeout"
                },
                "session-ticket-lifetime": {
                    "type": "number",
                    "description": "Session ticket lieftime in seconds from stateless session resumption (Lifetime value in seconds)",
                    "format": "number",
                    "src-name": "session-ticket-lifetime"
                },
                "ssl-false-start-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "disable SSL False Start",
                    "src-name": "ssl-false-start-disable"
                },
                "disable-sslv3": {
                    "type": "number",
                    "format": "flag",
                    "description": "Reject Client requests for SSL version 3",
                    "src-name": "disable-sslv3"
                },
                "renegotiation-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable SSL renegotiation",
                    "src-name": "renegotiation-disable"
                },
                "sslv2-bypass": {
                    "type": "dummy",
                    "description": "Bypass SSL version 2",
                    "format": "dummy",
                    "src-name": "sslv2-bypass"
                },
                "sslv2-bypass-service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Service Group for Bypass SSLV2 (Service Group Name)",
                    "condition": "sslv2-bypass",
                    "alias": "sslv2-bypass-service-group",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "src-name": "service-group"
                },
                "authorization": {
                    "type": "number",
                    "format": "flag",
                    "description": "Specify LDAP server for client SSL authorizaiton",
                    "src-name": "authorization"
                },
                "authen-name": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "authorization",
                    "obj-lineage-full": "aam.authentication.server.ldap",
                    "$ref": "/axapi/v3/aam/authentication/server/ldap",
                    "description": "Specify authorization LDAP server name",
                    "src-name": "authen-name"
                },
                "ldap-base-dn-from-cert": {
                    "type": "number",
                    "format": "flag",
                    "condition": "authen-name",
                    "link-next-fwd": "ldap-search-filter",
                    "description": "Use Subject DN as LDAP search base DN",
                    "src-name": "ldap-base-dn-from-cert"
                },
                "ldap-search-filter": {
                    "type": "string",
                    "format": "line",
                    "minLength": "1",
                    "maxLength": "255",
                    "condition": "authen-name",
                    "description": "Specify LDAP search filter",
                    "src-name": "ldap-search-filter"
                },
                "auth-sg": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "authorization",
                    "obj-lineage-full": "aam.authentication.service-group",
                    "$ref": "/axapi/v3/aam/authentication/service-group",
                    "alias": "auth-sg",
                    "m-exclusion": "authen-name",
                    "description": "Specify authorization LDAP service group",
                    "src-name": "service-group"
                },
                "auth-sg-dn": {
                    "type": "number",
                    "format": "flag",
                    "condition": "auth-sg",
                    "alias": "auth-sg-dn",
                    "link-next-fwd": "auth-sg-filter",
                    "description": "Use Subject DN as LDAP search base DN",
                    "src-name": "ldap-base-dn-from-cert"
                },
                "auth-sg-filter": {
                    "type": "string",
                    "format": "line",
                    "minLength": "1",
                    "maxLength": "255",
                    "condition": "auth-sg",
                    "alias": "auth-sg-filter",
                    "description": "Specify LDAP search filter",
                    "src-name": "ldap-search-filter"
                },
                "auth-username-attribute": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "31",
                    "case-insensitive": true,
                    "description": "Specify attribute name of username for client SSL authorization (Specify attribute name)",
                    "src-name": "auth-username-attribute"
                },
                "non-ssl-bypass": {
                    "type": "dummy",
                    "description": "Bypass non-ssl traffic",
                    "format": "dummy",
                    "src-name": "non-ssl-bypass"
                },
                "non-ssl-bypass-service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Service Group for Bypass non-ssl traffic (Service Group Name)",
                    "condition": "non-ssl-bypass",
                    "alias": "non-ssl-bypass-service-group",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "src-name": "service-group"
                }
            },
            "type": "object"
        },
        "connection-reuse-list": {
            "obj-name": "connection-reuse",
            "obj-help": "Connection Reuse",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "conn reuse",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.connection-reuse",
            "axapi": "/axapi/v3/slb/template/connection-reuse/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Connection Reuse Template Name",
                    "src-name": "name"
                },
                "limit-per-server": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "65535",
                    "default": "1000",
                    "description": "Max Server Connections allowed (Connections per Server Port (default 1000))",
                    "format": "number",
                    "src-name": "limit-per-server"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "60",
                    "maximum": "3600",
                    "default": "2400",
                    "description": "Timeout in seconds. Multiple of 60 (def 2400) (Timeout in seconds. Multiple of 60 (def 2400))",
                    "format": "number",
                    "src-name": "timeout"
                },
                "keep-alive-conn": {
                    "type": "number",
                    "format": "flag",
                    "description": "Keep a number of server connections open",
                    "src-name": "keep-alive-conn"
                },
                "preopen": {
                    "type": "number",
                    "format": "flag",
                    "condition": "keep-alive-conn",
                    "link-next-fwd": "num-conn-per-port",
                    "description": "Preopen server connection",
                    "src-name": "preopen"
                },
                "num-conn-per-port": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1024",
                    "condition": "keep-alive-conn",
                    "description": "Connections per Server Port (default 100)",
                    "default": "100",
                    "format": "number",
                    "src-name": "num-conn-per-port"
                }
            },
            "type": "object"
        },
        "diameter-list": {
            "obj-name": "diameter",
            "obj-help": "diameter template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "diameter template",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.diameter",
            "axapi": "/axapi/v3/slb/template/diameter/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "diameter template Name",
                    "src-name": "name"
                },
                "customize-cea": {
                    "type": "number",
                    "format": "flag",
                    "description": "customizing cea response",
                    "src-name": "customize-cea"
                },
                "duplicate": {
                    "type": "dummy",
                    "description": "copy a message to a different server",
                    "format": "dummy",
                    "src-name": "duplicate"
                },
                "avp-code": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2147483647",
                    "condition": "duplicate",
                    "description": "avp code",
                    "format": "number",
                    "src-name": "avp-code"
                },
                "avp-string": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "128",
                    "condition": "avp-code",
                    "description": "pattern to be matched in the avp string name, max length 127 bytes",
                    "format": "string",
                    "src-name": "avp-string"
                },
                "service-group-name": {
                    "type": "string",
                    "format": "long-string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "avp-string",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "service group name, this is the service group that the message needs to be copied to",
                    "src-name": "service-group-name"
                },
                "dwr-time": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "2147483647",
                    "default": "100",
                    "description": "dwr health-check timer interval (in 100 milli second unit, default is 100, 0 means unset this option)",
                    "format": "number",
                    "src-name": "dwr-time"
                },
                "idle-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "default": "5",
                    "description": "user sesison idle timeout (in minutes, default is 5)",
                    "format": "number",
                    "src-name": "idle-timeout"
                },
                "multiple-origin-host": {
                    "type": "number",
                    "format": "flag",
                    "description": "allowing multiple origin-host to a single server",
                    "src-name": "multiple-origin-host"
                },
                "origin-host": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "31",
                    "description": "origin-host name avp (name)",
                    "format": "string",
                    "src-name": "origin-host"
                },
                "origin-realm": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "31",
                    "description": "origin-realm name avp (name)",
                    "format": "string",
                    "src-name": "origin-realm"
                },
                "product-name": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "31",
                    "description": "product name avp (name)",
                    "format": "string",
                    "src-name": "product-name"
                },
                "vendor-id": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "2147483647",
                    "default": "0",
                    "description": "vendor-id avp (Vendon Id)",
                    "format": "number",
                    "src-name": "vendor-id"
                },
                "session-age": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "default": "10",
                    "description": "user session age allowed (default 10), this is not idle-time (in minutes)",
                    "format": "number",
                    "src-name": "session-age"
                },
                "dwr-up-retry": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "7",
                    "default": "3",
                    "description": "number of successful dwr health-check before declaring target up",
                    "format": "number",
                    "src-name": "dwr-up-retry"
                },
                "terminate-on-cca-t": {
                    "type": "number",
                    "format": "flag",
                    "description": "remove diameter session when receiving CCA-T message",
                    "src-name": "terminate-on-cca-t"
                },
                "message-code-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "message-code": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "2147483647",
                                "multi-field-key": true,
                                "maxItems": "10, help specify diameter message code to be load balanced",
                                "description": "(message code number)",
                                "format": "number",
                                "src-name": "message-code"
                            }
                        }
                    ],
                    "src-name": "message-code-list"
                },
                "avp-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "avp": {
                                "type": "number",
                                "multi-field-key": true,
                                "maxItems": "6",
                                "description": "customize avps for cer to the server (avp number)",
                                "format": "number",
                                "src-name": "avp"
                            }
                        },
                        {
                            "int32": {
                                "type": "number",
                                "description": "32 bits integer",
                                "format": "number",
                                "src-name": "int32"
                            }
                        },
                        {
                            "int64": {
                                "type": "number",
                                "m-exclusion": "int32",
                                "description": "64 bits integer",
                                "format": "number",
                                "src-name": "int64"
                            }
                        },
                        {
                            "string": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "128",
                                "m-exclusion": "int64",
                                "description": "String (string name, max length 127 bytes)",
                                "format": "string",
                                "src-name": "string"
                            }
                        },
                        {
                            "mandatory": {
                                "type": "number",
                                "format": "flag",
                                "description": "mandatory avp",
                                "src-name": "mandatory"
                            }
                        }
                    ],
                    "src-name": "avp-list"
                }
            },
            "type": "object"
        },
        "dns-list": {
            "obj-name": "dns",
            "obj-help": "DNS template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "dns",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.dns",
            "axapi": "/axapi/v3/slb/template/dns/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "DNS Template Name",
                    "src-name": "name"
                },
                "default-policy": {
                    "type": "string",
                    "enum": [
                        "nocache",
                        "cache"
                    ],
                    "enumMap": [
                        {
                            "nocache": "\"Cache disable"
                        },
                        {
                            "cache": "\"Cache enable"
                        }
                    ],
                    "description": "Define default DNS cache policy 'nocache': \"Cache disable;'cache': \"Cache enable;",
                    "default": "nocache",
                    "format": "enum",
                    "src-name": "default-policy"
                },
                "disable-dns-template": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable DNS template",
                    "src-name": "disable-dns-template"
                },
                "dns-log-enable": {
                    "type": "dummy",
                    "description": "Enable DNS cache per entry log",
                    "format": "dummy",
                    "src-name": "dns-log-enable"
                },
                "period": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "10000",
                    "condition": "dns-log-enable",
                    "description": "Period in minutes (Period in minutes)",
                    "format": "number",
                    "src-name": "period"
                },
                "malformed-query": {
                    "type": "dummy",
                    "description": "Define the policy for malformed query",
                    "format": "dummy",
                    "src-name": "malformed-query"
                },
                "drop": {
                    "type": "number",
                    "format": "flag",
                    "condition": "malformed-query",
                    "description": "Drop the malformed query",
                    "src-name": "drop"
                },
                "forward": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "malformed-query",
                    "m-exclusion": "drop",
                    "description": "Forward to service group (Service group name)",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "src-name": "forward"
                },
                "max-query-length": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4095",
                    "description": "Define Maximum DNS Query Length, default is unlimited (Specify Maximum Length)",
                    "format": "number",
                    "src-name": "max-query-length"
                },
                "max-cache-entry-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4096",
                    "description": "Define maximum cache entry size (Maximum cache entry size per VIP)",
                    "format": "number",
                    "src-name": "max-cache-entry-size"
                },
                "max-cache-size": {
                    "type": "number",
                    "minimum": "^dnscachemin",
                    "maximum": "^dnscachemax",
                    "description": "Define maximum cache size (Maximum cache entry per VIP)",
                    "format": "number",
                    "src-name": "max-cache-size"
                },
                "enable-cache-sharing": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable DNS cache sharing",
                    "src-name": "enable-cache-sharing"
                },
                "redirect-to-tcp-port": {
                    "type": "number",
                    "format": "flag",
                    "description": "Direct the client to retry with TCP for DNS UDP request",
                    "src-name": "redirect-to-tcp-port"
                },
                "query-id-switch": {
                    "type": "number",
                    "format": "flag",
                    "description": "Use DNS query ID to create sesion",
                    "src-name": "query-id-switch"
                },
                "dnssec-service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Use different service group if DNSSEC DO bit set (Service Group Name)",
                    "src-name": "dnssec-service-group"
                },
                "class-list": {
                    "obj-name": "class-list",
                    "obj-help": "Classification list",
                    "obj-lineage": "cmroot.slb.template.dns",
                    "obj-occurences": "single",
                    "obj-indexing": "none",
                    "obj-lineage-full": "slb.template.dns.class-list",
                    "axapi": "/axapi/v3/slb/template/dns/{name}/class-list/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "63",
                            "description": "Specify a class list name",
                            "format": "string",
                            "src-name": "name"
                        },
                        "lid-list": {
                            "obj-name": "lid",
                            "obj-help": "Limit ID",
                            "obj-lineage": "cmroot.slb.template.dns.class-list",
                            "obj-occurences": "multi",
                            "obj-json-suffix": "-list",
                            "obj-indexing": "number",
                            "obj-lineage-full": "slb.template.dns.class-list.lid",
                            "axapi": "/axapi/v3/slb/template/dns/{name}/class-list/{name}/lid/{lidnum}",
                            "properties": {
                                "lidnum": {
                                    "type": "number",
                                    "object-key": true,
                                    "minimum": "1",
                                    "maximum": "31",
                                    "alias": "lidnum",
                                    "description": "Specify a limit ID",
                                    "format": "number",
                                    "src-name": "lid"
                                },
                                "conn-rate-limit": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "2147483647",
                                    "description": "Connection rate limit (Connection rate limit)",
                                    "format": "number",
                                    "src-name": "conn-rate-limit"
                                },
                                "per": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "65535",
                                    "condition": "conn-rate-limit",
                                    "description": "Per (Number of 100ms)",
                                    "format": "number",
                                    "src-name": "per"
                                },
                                "over-limit-action": {
                                    "type": "number",
                                    "format": "flag",
                                    "description": "Action when exceeds limit",
                                    "src-name": "over-limit-action"
                                },
                                "action-value": {
                                    "type": "string",
                                    "condition": "over-limit-action",
                                    "enum": [
                                        "dns-cache-disable",
                                        "dns-cache-enable",
                                        "forward"
                                    ],
                                    "enumMap": [
                                        {
                                            "dns-cache-disable": "\"Disable DNS cache when it exceeds limit"
                                        },
                                        {
                                            "dns-cache-enable": "\"Enable DNS cache when it exceeds limit"
                                        },
                                        {
                                            "forward": "\"Forward the traffic even it exceeds limit"
                                        }
                                    ],
                                    "description": "'dns-cache-disable': \"Disable DNS cache when it exceeds limit;'dns-cache-enable': \"Enable DNS cache when it exceeds limit;'forward': \"Forward the traffic even it exceeds limit;",
                                    "link-next-fwd": "lockout",
                                    "format": "enum",
                                    "src-name": "action-value"
                                },
                                "lockout": {
                                    "type": "number",
                                    "condition": "over-limit-action",
                                    "minimum": "1",
                                    "maximum": "1023",
                                    "disabled": "forward",
                                    "link-next-fwd": "log",
                                    "description": "Don't accept any new connection for certain time (Lockout duration in minutes)",
                                    "format": "number",
                                    "src-name": "lockout"
                                },
                                "log": {
                                    "type": "number",
                                    "format": "flag",
                                    "condition": "over-limit-action",
                                    "description": "Log a message",
                                    "src-name": "log"
                                },
                                "log-interval": {
                                    "type": "number",
                                    "condition": "log",
                                    "minimum": "1",
                                    "maximum": "255",
                                    "description": "Log interval (minute, by default system will log every over limit instance)",
                                    "format": "number",
                                    "src-name": "log-interval"
                                },
                                "dns": {
                                    "type": "object",
                                    "description": "DNS cache option",
                                    "array-start": true,
                                    "properties": {
                                        "cache-action": {
                                            "type": "string",
                                            "enum": [
                                                "cache-disable",
                                                "cache-enable"
                                            ],
                                            "enumMap": [
                                                {
                                                    "cache-disable": "\"Disable dns cache"
                                                },
                                                {
                                                    "cache-enable": "\"Enable dns cache"
                                                }
                                            ],
                                            "description": "'cache-disable': \"Disable dns cache;'cache-enable': \"Enable dns cache;",
                                            "condition": "dns",
                                            "default": "cache-disable",
                                            "format": "enum",
                                            "src-name": "cache-action"
                                        },
                                        "ttl": {
                                            "type": "number",
                                            "minimum": "1",
                                            "maximum": "65535",
                                            "condition": "dns",
                                            "description": "TTL for cache entry (TTL in seconds)",
                                            "format": "number",
                                            "src-name": "ttl"
                                        },
                                        "weight": {
                                            "type": "number",
                                            "minimum": "1",
                                            "maximum": "7",
                                            "condition": "dns",
                                            "description": "Weight for cache entry (Weight)",
                                            "format": "number",
                                            "src-name": "weight"
                                        },
                                        "honor-server-response-ttl": {
                                            "type": "number",
                                            "format": "flag",
                                            "condition": "dns",
                                            "description": "Honor the server reponse TTL",
                                            "src-name": "honor-server-response-ttl"
                                        }
                                    },
                                    "src-name": "dns"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ftp-list": {
            "obj-name": "ftp",
            "obj-help": "FTP template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "ftp template",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.ftp",
            "axapi": "/axapi/v3/slb/template/ftp/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "FTP template name",
                    "src-name": "name"
                },
                "active-mode-port": {
                    "type": "number",
                    "format": "flag",
                    "description": "Non-Standard FTP Active mode port",
                    "src-name": "active-mode-port"
                },
                "active-mode-port-val": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65534",
                    "condition": "active-mode-port",
                    "description": "Non-Standard FTP Active mode port",
                    "format": "number",
                    "src-name": "active-mode-port-val"
                },
                "to": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65534",
                    "condition": "active-mode-port-val",
                    "description": "End range of FTP Active mode port (End range of FTP Active mode port)",
                    "format": "number",
                    "src-name": "to"
                },
                "any": {
                    "type": "number",
                    "format": "flag",
                    "m-exclusion": "active-mode-port-val",
                    "condition": "active-mode-port",
                    "description": "Allow any FTP Active mode port",
                    "src-name": "any"
                }
            },
            "type": "object"
        },
        "imap-pop3-list": {
            "obj-name": "imap-pop3",
            "obj-help": "IMAP",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "imap-pop3",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.imap-pop3",
            "axapi": "/axapi/v3/slb/template/imap-pop3/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "IMAP-POP3 Template Name",
                    "src-name": "name"
                },
                "starttls": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "optional",
                        "enforced"
                    ],
                    "enumMap": [
                        {
                            "disabled": "\"Disable STARTTLS"
                        },
                        {
                            "optional": "\"STARTTLS is optional requirement"
                        },
                        {
                            "enforced": "\"Must issue STARTTLS command before imap transaction"
                        }
                    ],
                    "description": "STARTTLS requirement 'disabled': \"Disable STARTTLS;'optional': \"STARTTLS is optional requirement;'enforced': \"Must issue STARTTLS command before imap transaction;",
                    "default": "disabled",
                    "not-allowed-in-no": true,
                    "format": "enum",
                    "src-name": "starttls"
                },
                "logindisabled": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable Login before STARTTLS.Works only for imap",
                    "src-name": "logindisabled"
                }
            },
            "type": "object"
        },
        "logging-list": {
            "obj-name": "logging",
            "obj-help": "Logging template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "logging",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.logging",
            "axapi": "/axapi/v3/slb/template/logging/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Logging Template Name",
                    "src-name": "name"
                },
                "format": {
                    "type": "string",
                    "format": "line",
                    "minLength": "1",
                    "maxLength": "250",
                    "description": "Specfiy a format string for web logging (format string(less than 250 characters) for web logging)",
                    "src-name": "format"
                },
                "local-logging": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "1",
                    "description": "1 to enable local logging (1 to enable local logging, default 0)",
                    "default": "0",
                    "format": "number",
                    "src-name": "local-logging"
                },
                "service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Bind a Service Group to the logging template (Service Group Name)",
                    "src-name": "service-group"
                },
                "pcre-mask": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "value-not-allowed-in-no": true,
                    "description": "Mask matched PCRE pattern in the log (PCRE pattern)",
                    "src-name": "pcre-mask"
                },
                "mask": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "1",
                    "condition": "pcre-mask",
                    "link-next-fwd": "keep-end",
                    "not-allowed-in-no": true,
                    "description": "Character to mask the matched pattern (default: X) (Character to mask the matched pattern)",
                    "default": "X",
                    "format": "string",
                    "src-name": "mask"
                },
                "keep-end": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "65535",
                    "condition": "pcre-mask",
                    "link-next-rev": "mask",
                    "not-allowed-in-no": true,
                    "description": "Number of unmasked characters at the end (default: 0) (Number of unmasked characters)",
                    "default": "0",
                    "format": "number",
                    "src-name": "keep-end"
                },
                "keep-start": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "65535",
                    "condition": "pcre-mask",
                    "link-next-rev": "mask",
                    "description": "Number of unmasked characters at the beginning (default: 0) (Number of unmasked characters)",
                    "default": "0",
                    "format": "number",
                    "src-name": "keep-start"
                },
                "template": {
                    "type": "dummy",
                    "description": "Applying template to the logging template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "tcp-proxy": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "TCP proxy template (TCP Proxy Config name)",
                    "default": "default",
                    "format": "string",
                    "src-name": "tcp-proxy"
                },
                "source-nat": {
                    "type": "dummy",
                    "description": "Source NAT",
                    "example-default": "0",
                    "format": "dummy",
                    "src-name": "source-nat"
                },
                "pool": {
                    "type": "string",
                    "format": "string-rlx",
                    "condition": "source-nat",
                    "obj-lineage-full": "ip.nat.pool, ipv6.nat.pool, ip.nat.pool-group, ipv6.nat.pool-group",
                    "$ref": "/axapi/v3/ip/nat/pool, ipv6/nat/pool, ip/nat/pool-group, ipv6/nat/pool-group",
                    "description": "Specify NAT pool or pool group (NAT Pool or Pool Group)",
                    "example-default": "ip.nat.pool",
                    "src-name": "pool"
                },
                "auto": {
                    "type": "string",
                    "default": "auto",
                    "condition": "source-nat",
                    "m-exclusion": "pool",
                    "enum": [
                        "auto"
                    ],
                    "enumMap": [
                        {
                            "auto": "\"Configure auto NAT for logging, default is auto enabled"
                        }
                    ],
                    "description": "'auto': \"Configure auto NAT for logging, default is auto enabled;",
                    "not-allowed-in-no": true,
                    "format": "enum",
                    "src-name": "auto"
                }
            },
            "type": "object"
        },
        "persist": {
            "obj-name": "persist",
            "obj-help": "Persistence",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "intermediate",
            "obj-indexing": "none",
            "obj-lineage-full": "slb.template.persist",
            "axapi": "/axapi/v3/slb/template/persist",
            "properties": {
                "cookie-list": {
                    "obj-name": "cookie",
                    "obj-help": "Cookie persistence",
                    "obj-lineage": "cmroot.slb.template.persist",
                    "obj-occurences": "multi",
                    "obj-json-suffix": "-list",
                    "obj-indexing": "none",
                    "obj-module-prompt": "cookie persist",
                    "obj-module-dont-display-value-in-prompt": true,
                    "obj-lineage-full": "slb.template.persist.cookie",
                    "axapi": "/axapi/v3/slb/template/persist/cookie/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "format": "string-rlx",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "127",
                            "description": "Cookie persistence (Cookie persistence template name)",
                            "src-name": "name"
                        },
                        "domain": {
                            "type": "string",
                            "minLength": "1",
                            "maxLength": "31",
                            "description": "Set cookie domain (Cookie domain)",
                            "format": "string",
                            "src-name": "domain"
                        },
                        "dont-honor-conn-rules": {
                            "type": "number",
                            "format": "flag",
                            "description": "Do not observe connection rate rules",
                            "src-name": "dont-honor-conn-rules"
                        },
                        "expire": {
                            "type": "number",
                            "minimum": "0",
                            "maximum": "31536000",
                            "default": "315360000",
                            "description": "Set cookie expiration time (Expiration in seconds)",
                            "format": "number",
                            "src-name": "expire"
                        },
                        "insert-always": {
                            "type": "number",
                            "format": "flag",
                            "description": "Insert persist cookie to every reponse",
                            "src-name": "insert-always"
                        },
                        "cookie-name": {
                            "type": "string",
                            "format": "string-rlx",
                            "minLength": "1",
                            "maxLength": "63",
                            "alias": "cookie-name",
                            "default": "sto-id",
                            "description": "Set cookie name (Cookie name, default \"sto-id\")",
                            "src-name": "name"
                        },
                        "path": {
                            "type": "string",
                            "format": "string-rlx",
                            "minLength": "1",
                            "maxLength": "31",
                            "default": "/",
                            "description": "Set cookie path (Cookie path, default is \"/\")",
                            "src-name": "path"
                        },
                        "pass-thru": {
                            "type": "number",
                            "format": "flag",
                            "description": "Pass thru mode - Server sends the persist cookie",
                            "src-name": "pass-thru"
                        },
                        "secure": {
                            "type": "number",
                            "format": "flag",
                            "description": "Enable secure attribute",
                            "src-name": "secure"
                        },
                        "httponly": {
                            "type": "number",
                            "format": "flag",
                            "description": "Enable HttpOnly attribute",
                            "src-name": "httponly"
                        },
                        "match-type": {
                            "type": "number",
                            "format": "flag",
                            "description": "Persist for server, default is port",
                            "src-name": "match-type"
                        },
                        "server": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "description": "Persist to the same server, default is port",
                            "src-name": "server"
                        },
                        "server-service-group": {
                            "type": "number",
                            "format": "flag",
                            "condition": "server",
                            "link-next-fwd": "scan-all-members",
                            "description": "Persist to the same server and within the same service group",
                            "alias": "server-service-group",
                            "src-name": "service-group"
                        },
                        "scan-all-members": {
                            "type": "number",
                            "format": "flag",
                            "condition": "server",
                            "description": "Persist within the same server SCAN",
                            "src-name": "scan-all-members"
                        },
                        "service-group": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "m-exclusion": "server",
                            "description": "Persist within the same service group",
                            "src-name": "service-group"
                        }
                    },
                    "type": "object"
                },
                "destination-ip-list": {
                    "obj-name": "destination-ip",
                    "obj-help": "Destination IP persistence",
                    "obj-lineage": "cmroot.slb.template.persist",
                    "obj-occurences": "multi",
                    "obj-json-suffix": "-list",
                    "obj-indexing": "none",
                    "obj-module-prompt": "destination ip persist",
                    "obj-module-dont-display-value-in-prompt": true,
                    "obj-lineage-full": "slb.template.persist.destination-ip",
                    "axapi": "/axapi/v3/slb/template/persist/destination-ip/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "format": "string-rlx",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "127",
                            "description": "Destination IP persistence template name",
                            "src-name": "name"
                        },
                        "dont-honor-conn-rules": {
                            "type": "number",
                            "format": "flag",
                            "description": "Do not observe connection rate rules",
                            "src-name": "dont-honor-conn-rules"
                        },
                        "hash-persist": {
                            "type": "number",
                            "format": "flag",
                            "description": "Use hash value of destination IP address",
                            "src-name": "hash-persist"
                        },
                        "match-type": {
                            "type": "number",
                            "format": "flag",
                            "description": "Persistence type",
                            "src-name": "match-type"
                        },
                        "server": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "link-next-fwd": "scan-all-members",
                            "description": "Persist to the same server, default is port",
                            "src-name": "server"
                        },
                        "service-group": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "link-next-fwd": "scan-all-members",
                            "m-exclusion": "server",
                            "description": "Persist within the same service group",
                            "src-name": "service-group"
                        },
                        "scan-all-members": {
                            "type": "number",
                            "format": "flag",
                            "condition": "server",
                            "description": "Persist with SCAN of all members",
                            "src-name": "scan-all-members"
                        },
                        "timeout": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "2000",
                            "default": "5",
                            "description": "Persistence timeout (in minutes)",
                            "format": "number",
                            "src-name": "timeout"
                        },
                        "netmask": {
                            "type": "ipv4-netmask",
                            "default": "255.255.255.255",
                            "description": "IP subnet mask (IP subnet mask)",
                            "format": "ipv4-netmask",
                            "src-name": "netmask"
                        },
                        "netmask6": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "128",
                            "default": "128",
                            "description": "IPV6 subnet mask (IPv6 subnet mask)",
                            "format": "number",
                            "src-name": "netmask6"
                        }
                    },
                    "type": "object"
                },
                "source-ip-list": {
                    "obj-name": "source-ip",
                    "obj-help": "Source IP persistence",
                    "obj-lineage": "cmroot.slb.template.persist",
                    "obj-occurences": "multi",
                    "obj-json-suffix": "-list",
                    "obj-indexing": "none",
                    "obj-module-prompt": "source ip persist",
                    "obj-module-dont-display-value-in-prompt": true,
                    "obj-lineage-full": "slb.template.persist.source-ip",
                    "axapi": "/axapi/v3/slb/template/persist/source-ip/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "format": "string-rlx",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "127",
                            "description": "Source IP persistence template name",
                            "src-name": "name"
                        },
                        "dont-honor-conn-rules": {
                            "type": "number",
                            "format": "flag",
                            "description": "Do not observe connection rate rules",
                            "src-name": "dont-honor-conn-rules"
                        },
                        "enforce-higher-priority": {
                            "type": "number",
                            "format": "flag",
                            "description": "Enforce to use high priority node if available",
                            "src-name": "enforce-higher-priority"
                        },
                        "hash-persist": {
                            "type": "number",
                            "format": "flag",
                            "description": "Use hash value of source IP address",
                            "src-name": "hash-persist"
                        },
                        "incl-dst-ip": {
                            "type": "number",
                            "format": "flag",
                            "description": "Include destination IP on the persist",
                            "src-name": "incl-dst-ip"
                        },
                        "incl-sport": {
                            "type": "number",
                            "format": "flag",
                            "description": "Include source port on the persist",
                            "src-name": "incl-sport"
                        },
                        "timeout": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "2000",
                            "default": "5",
                            "description": "Persistence timeout (in minutes)",
                            "format": "number",
                            "src-name": "timeout"
                        },
                        "netmask": {
                            "type": "ipv4-netmask",
                            "default": "255.255.255.255",
                            "description": "IP subnet mask (IP subnet mask)",
                            "format": "ipv4-netmask",
                            "src-name": "netmask"
                        },
                        "netmask6": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "128",
                            "default": "128",
                            "description": "IPV6 subnet mask (IPv6 subnet mask)",
                            "format": "number",
                            "src-name": "netmask6"
                        },
                        "match-type": {
                            "type": "number",
                            "format": "flag",
                            "description": "Persistence type",
                            "src-name": "match-type"
                        },
                        "server": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "link-next-fwd": "scan-all-members",
                            "description": "Persist to the same server, default is port",
                            "src-name": "server"
                        },
                        "service-group": {
                            "type": "number",
                            "format": "flag",
                            "condition": "match-type",
                            "link-next-fwd": "scan-all-members",
                            "m-exclusion": "server",
                            "description": "Persist within the same service group",
                            "src-name": "service-group"
                        },
                        "scan-all-members": {
                            "type": "number",
                            "format": "flag",
                            "condition": "server",
                            "description": "Persist with SCAN of all members",
                            "src-name": "scan-all-members"
                        }
                    },
                    "type": "object"
                },
                "ssl-sid-list": {
                    "obj-name": "ssl-sid",
                    "obj-help": "SSL session ID  persistence",
                    "obj-lineage": "cmroot.slb.template.persist",
                    "obj-occurences": "multi",
                    "obj-json-suffix": "-list",
                    "obj-indexing": "none",
                    "obj-module-prompt": "ssl session id persist",
                    "obj-module-dont-display-value-in-prompt": true,
                    "obj-lineage-full": "slb.template.persist.ssl-sid",
                    "axapi": "/axapi/v3/slb/template/persist/ssl-sid/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "format": "string-rlx",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "127",
                            "description": "SSL session ID persistence template name",
                            "src-name": "name"
                        },
                        "dont-honor-conn-rules": {
                            "type": "number",
                            "format": "flag",
                            "description": "Do not observe connection rate rules",
                            "src-name": "dont-honor-conn-rules"
                        },
                        "timeout": {
                            "type": "number",
                            "minimum": "1",
                            "maximum": "2000",
                            "default": "5",
                            "description": "Persistence timeout (in minutes)",
                            "format": "number",
                            "src-name": "timeout"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "policy-list": {
            "obj-name": "policy",
            "obj-help": "Policy config",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "policy",
            "obj-disp-after": "slb.service-group",
            "obj-stats-oid": "2044",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.policy",
            "axapi": "/axapi/v3/slb/template/policy/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Policy template name",
                    "src-name": "name"
                },
                "bw-list": {
                    "type": "dummy",
                    "description": "Blacklist/whitelist",
                    "format": "dummy",
                    "src-name": "bw-list"
                },
                "bw-list-name": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "bw-list",
                    "alias": "bw-list-name",
                    "description": "Specify a blacklist/whitelist name (Specify a blacklist/whitelist name)",
                    "src-name": "name"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "127",
                    "default": "5",
                    "condition": "bw-list",
                    "description": "Define timeout value of PBSLB dynamic entry (Timeout value (minute, default is 5))",
                    "format": "number",
                    "src-name": "timeout"
                },
                "use-destination-ip": {
                    "type": "number",
                    "format": "flag",
                    "condition": "bw-list",
                    "description": "Use destination IP to match the policy",
                    "src-name": "use-destination-ip"
                },
                "over-limit": {
                    "type": "number",
                    "format": "flag",
                    "condition": "bw-list",
                    "description": "Specify operation in case over limit",
                    "src-name": "over-limit"
                },
                "over-limit-reset": {
                    "type": "number",
                    "format": "flag",
                    "description": "Reset the connection when it exceeds limit",
                    "alias": "over-limit-reset",
                    "src-name": "reset"
                },
                "over-limit-lockup": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "127",
                    "description": "Don't accept any new connection for certain time (Lockup duration (minute))",
                    "alias": "over-limit-lockup",
                    "format": "number",
                    "src-name": "lockup"
                },
                "over-limit-logging": {
                    "type": "number",
                    "format": "flag",
                    "description": "Log a message",
                    "alias": "over-limit-logging",
                    "src-name": "logging"
                },
                "interval": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "255",
                    "description": "Log interval (minute)",
                    "format": "number",
                    "src-name": "interval"
                },
                "bw-list-id": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "id": {
                                "type": "number",
                                "multi-field-key": true,
                                "minimum": "0",
                                "maximum": "1023",
                                "condition": "bw-list",
                                "maxItems": "1024",
                                "description": "Specify id that maps to service group (The id number)",
                                "format": "number",
                                "src-name": "id"
                            }
                        },
                        {
                            "service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "id",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "description": "Specify a service group (Specify the service group name)",
                                "src-name": "service-group"
                            }
                        },
                        {
                            "pbslb-logging": {
                                "type": "number",
                                "format": "flag",
                                "condition": "service-group",
                                "description": "Configure PBSLB logging",
                                "alias": "pbslb-logging",
                                "src-name": "logging"
                            }
                        },
                        {
                            "pbslb-interval": {
                                "type": "number",
                                "default": "3",
                                "minimum": "0",
                                "maximum": "60",
                                "condition": "pbslb-logging",
                                "link-next-fwd": "fail",
                                "description": "Specify logging interval in minutes",
                                "alias": "pbslb-interval",
                                "format": "number",
                                "src-name": "interval"
                            }
                        },
                        {
                            "fail": {
                                "type": "number",
                                "format": "flag",
                                "condition": "pbslb-logging",
                                "description": "Only log unsuccessful connections",
                                "src-name": "fail"
                            }
                        },
                        {
                            "bw-list-action": {
                                "type": "string",
                                "condition": "id",
                                "m-exclusion": "service-group",
                                "enum": [
                                    "drop",
                                    "reset"
                                ],
                                "enumMap": [
                                    {
                                        "drop": "\"drop the packet"
                                    },
                                    {
                                        "reset": "\"Send reset back"
                                    }
                                ],
                                "description": "'drop': \"drop the packet;'reset': \"Send reset back;",
                                "format": "enum",
                                "src-name": "bw-list-action"
                            }
                        },
                        {
                            "logging-drp-rst": {
                                "type": "number",
                                "format": "flag",
                                "condition": "bw-list-action",
                                "alias": "logging-drp-rst",
                                "description": "Configure PBSLB logging",
                                "src-name": "logging"
                            }
                        },
                        {
                            "action-interval": {
                                "type": "number",
                                "default": "3",
                                "alias": "action-interval",
                                "minimum": "0",
                                "maximum": "60",
                                "condition": "logging-drp-rst",
                                "description": "Specify logging interval in minute (default is 3)",
                                "format": "number",
                                "src-name": "interval"
                            }
                        }
                    ],
                    "src-name": "bw-list-id"
                },
                "geo-location": {
                    "type": "dummy",
                    "plat-neg-list": "fireeye",
                    "description": "Geo-location Config",
                    "format": "dummy",
                    "src-name": "geo-location"
                },
                "overlap": {
                    "type": "number",
                    "format": "flag",
                    "condition": "geo-location",
                    "description": "Use overlap mode for geo-location to do longest match",
                    "src-name": "overlap"
                },
                "share": {
                    "type": "number",
                    "format": "flag",
                    "condition": "geo-location",
                    "description": "Share counters between virtual ports and virtual servers",
                    "src-name": "share"
                },
                "full-domain-tree": {
                    "type": "number",
                    "format": "flag",
                    "condition": "geo-location",
                    "description": "Share counters between geo-location and sub regions",
                    "src-name": "full-domain-tree"
                },
                "class-list": {
                    "obj-name": "class-list",
                    "obj-help": "Configure classification list",
                    "obj-lineage": "cmroot.slb.template.policy",
                    "obj-occurences": "single",
                    "obj-indexing": "none",
                    "obj-lineage-full": "slb.template.policy.class-list",
                    "axapi": "/axapi/v3/slb/template/policy/{name}/class-list/{name}",
                    "properties": {
                        "name": {
                            "type": "string",
                            "format": "string-rlx",
                            "object-key": true,
                            "minLength": "1",
                            "maxLength": "63",
                            "description": "Class list name or geo-location-class-list name",
                            "src-name": "name"
                        },
                        "client-ip": {
                            "type": "dummy",
                            "description": "Set Client IP address, by default source IP address is used",
                            "format": "dummy",
                            "src-name": "client-ip"
                        },
                        "client-ip-l3-dest": {
                            "type": "number",
                            "format": "flag",
                            "condition": "client-ip",
                            "description": "Use destination IP as client IP address",
                            "alias": "client-ip-l3-dest",
                            "src-name": "l3-dest"
                        },
                        "client-ip-l7-header": {
                            "type": "number",
                            "format": "flag",
                            "condition": "client-ip",
                            "m-exclusion": "client-ip-l3-dest",
                            "alias": "client-ip-l7-header",
                            "description": "Use extract client IP address from L7 header",
                            "src-name": "l7-header"
                        },
                        "header-name": {
                            "type": "string",
                            "minLength": "1",
                            "maxLength": "63",
                            "condition": "client-ip-l7-header",
                            "description": "Specify L7 header name",
                            "format": "string",
                            "src-name": "header-name"
                        },
                        "lid-list": {
                            "obj-name": "lid",
                            "obj-help": "Limit ID",
                            "obj-lineage": "cmroot.slb.template.policy.class-list",
                            "obj-occurences": "multi",
                            "obj-json-suffix": "-list",
                            "obj-indexing": "number",
                            "obj-lineage-full": "slb.template.policy.class-list.lid",
                            "axapi": "/axapi/v3/slb/template/policy/{name}/class-list/{name}/lid/{lidnum}",
                            "properties": {
                                "lidnum": {
                                    "type": "number",
                                    "object-key": true,
                                    "alias": "lidnum",
                                    "minimum": "1",
                                    "maximum": "31",
                                    "description": "Specify a limit ID",
                                    "format": "number",
                                    "src-name": "lid"
                                },
                                "conn-limit": {
                                    "type": "number",
                                    "minimum": "0",
                                    "maximum": "1048575",
                                    "description": "Connection limit (Connection limit)",
                                    "format": "number",
                                    "src-name": "conn-limit"
                                },
                                "conn-rate-limit": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "2147483647",
                                    "description": "Specify connection rate limit (Connection rate limit)",
                                    "format": "number",
                                    "src-name": "conn-rate-limit"
                                },
                                "conn-per": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "65535",
                                    "condition": "conn-rate-limit",
                                    "alias": "conn-per",
                                    "description": "Per (Specify interval in number of 100ms)",
                                    "format": "number",
                                    "src-name": "per"
                                },
                                "request-limit": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "1048575",
                                    "description": "Request limit (Specify request limit)",
                                    "format": "number",
                                    "src-name": "request-limit"
                                },
                                "request-rate-limit": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "4294967295",
                                    "description": "Request rate limit (Specify request rate limit)",
                                    "format": "number",
                                    "src-name": "request-rate-limit"
                                },
                                "request-per": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "65535",
                                    "condition": "request-rate-limit",
                                    "alias": "request-per",
                                    "description": "Per (Specify interval in number of 100ms)",
                                    "format": "number",
                                    "src-name": "per"
                                },
                                "bw-rate-limit": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "2147483647",
                                    "description": "Specify bandwidth rate limit (Bandwidth rate limit in bytes)",
                                    "format": "number",
                                    "src-name": "bw-rate-limit"
                                },
                                "bw-per": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "65535",
                                    "condition": "bw-rate-limit",
                                    "alias": "bw-per",
                                    "description": "Per (Specify interval in number of 100ms)",
                                    "format": "number",
                                    "src-name": "per"
                                },
                                "over-limit-action": {
                                    "type": "number",
                                    "format": "flag",
                                    "description": "Set action when exceeds limit",
                                    "src-name": "over-limit-action"
                                },
                                "action-value": {
                                    "type": "string",
                                    "condition": "over-limit-action",
                                    "enum": [
                                        "forward",
                                        "reset"
                                    ],
                                    "enumMap": [
                                        {
                                            "forward": "\"Forward the traffic even it exceeds limit"
                                        },
                                        {
                                            "reset": "\"Reset the connection when it exceeds limit"
                                        }
                                    ],
                                    "description": "'forward': \"Forward the traffic even it exceeds limit;'reset': \"Reset the connection when it exceeds limit;",
                                    "link-next-fwd": "lockout",
                                    "format": "enum",
                                    "src-name": "action-value"
                                },
                                "lockout": {
                                    "type": "number",
                                    "condition": "over-limit-action",
                                    "minimum": "1",
                                    "maximum": "1023",
                                    "disabled": "forward",
                                    "link-next-fwd": "log",
                                    "description": "Don't accept any new connection for certain time (Lockout duration in minutes)",
                                    "value-not-allowed-in-no": true,
                                    "format": "number",
                                    "src-name": "lockout"
                                },
                                "log": {
                                    "type": "number",
                                    "format": "flag",
                                    "condition": "over-limit-action",
                                    "description": "Log a message",
                                    "src-name": "log"
                                },
                                "interval": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "255",
                                    "condition": "log",
                                    "description": "Specify log interval in minutes, by default system will log every over limit instance",
                                    "format": "number",
                                    "src-name": "interval"
                                },
                                "direct-action": {
                                    "type": "number",
                                    "format": "flag",
                                    "alias": "direct-action",
                                    "description": "Set action when match the lid",
                                    "src-name": "action"
                                },
                                "direct-service-group": {
                                    "type": "string",
                                    "format": "long-string-rlx",
                                    "minLength": "1",
                                    "maxLength": "127",
                                    "condition": "direct-action",
                                    "alias": "direct-service-group",
                                    "obj-lineage-full": "slb.service-group",
                                    "$ref": "/axapi/v3/slb/service-group",
                                    "description": "Specify a service group (Specify the service group name)",
                                    "src-name": "service-group"
                                },
                                "direct-pbslb-logging": {
                                    "type": "number",
                                    "format": "flag",
                                    "condition": "direct-service-group",
                                    "description": "Configure PBSLB logging",
                                    "alias": "direct-pbslb-logging",
                                    "src-name": "logging"
                                },
                                "direct-pbslb-interval": {
                                    "type": "number",
                                    "default": "3",
                                    "minimum": "0",
                                    "maximum": "60",
                                    "condition": "direct-pbslb-logging",
                                    "link-next-fwd": "direct-fail",
                                    "description": "Specify logging interval in minutes",
                                    "alias": "direct-pbslb-interval",
                                    "format": "number",
                                    "src-name": "interval"
                                },
                                "direct-fail": {
                                    "type": "number",
                                    "format": "flag",
                                    "condition": "direct-pbslb-logging",
                                    "description": "Only log unsuccessful connectionsi",
                                    "alias": "direct-fail",
                                    "src-name": "fail"
                                },
                                "direct-action-value": {
                                    "type": "string",
                                    "condition": "direct-action",
                                    "m-exclusion": "direct-service-group",
                                    "enum": [
                                        "drop",
                                        "reset"
                                    ],
                                    "enumMap": [
                                        {
                                            "drop": "\"drop the packet"
                                        },
                                        {
                                            "reset": "\"Send reset back"
                                        }
                                    ],
                                    "description": "'drop': \"drop the packet;'reset': \"Send reset back;",
                                    "format": "enum",
                                    "src-name": "direct-action-value"
                                },
                                "direct-logging-drp-rst": {
                                    "type": "number",
                                    "format": "flag",
                                    "condition": "direct-action-value",
                                    "alias": "direct-logging-drp-rst",
                                    "description": "Configure PBSLB logging",
                                    "src-name": "logging"
                                },
                                "direct-action-interval": {
                                    "type": "number",
                                    "default": "3",
                                    "alias": "direct-action-interval",
                                    "minimum": "0",
                                    "maximum": "60",
                                    "condition": "direct-logging-drp-rst",
                                    "description": "Specify logging interval in minute (default is 3)",
                                    "format": "number",
                                    "src-name": "interval"
                                },
                                "response-code-rate-limit": {
                                    "type": "array",
                                    "array-start": true,
                                    "array-multi": true,
                                    "description": "Server response code rate limit(only support SMTP now)",
                                    "maxItems": "5",
                                    "properties": [
                                        {
                                            "code-range-start": {
                                                "type": "number",
                                                "condition": "response-code-rate-limit",
                                                "multi-field-key": true,
                                                "minimum": "100",
                                                "maximum": "600",
                                                "description": "server response code range start",
                                                "format": "number",
                                                "src-name": "code-range-start"
                                            }
                                        },
                                        {
                                            "code-range-end": {
                                                "type": "number",
                                                "condition": "code-range-start",
                                                "minimum": "100",
                                                "maximum": "600",
                                                "description": "server response code range end",
                                                "alias": "code-range-end",
                                                "format": "number",
                                                "src-name": "-"
                                            }
                                        },
                                        {
                                            "threshold": {
                                                "type": "number",
                                                "condition": "code-range-end",
                                                "minimum": "1",
                                                "maximum": "15",
                                                "description": "the times of getting the response code",
                                                "format": "number",
                                                "src-name": "threshold"
                                            }
                                        },
                                        {
                                            "period": {
                                                "type": "number",
                                                "condition": "threshold",
                                                "minimum": "1",
                                                "maximum": "127",
                                                "description": "seconds",
                                                "alias": "period",
                                                "format": "number",
                                                "src-name": "per"
                                            }
                                        }
                                    ],
                                    "src-name": "response-code-rate-limit"
                                },
                                "dns64": {
                                    "type": "object",
                                    "array-start": true,
                                    "description": "Apply DNS64",
                                    "feat-license": "cgnv6",
                                    "properties": {
                                        "disable": {
                                            "type": "number",
                                            "format": "flag",
                                            "condition": "dns64",
                                            "description": "Disable",
                                            "src-name": "disable"
                                        },
                                        "exclusive-answer": {
                                            "type": "number",
                                            "format": "flag",
                                            "condition": "dns64",
                                            "description": "Exclusive Answer in DNS Response",
                                            "src-name": "exclusive-answer"
                                        },
                                        "prefix": {
                                            "type": "ipv6-address-plen",
                                            "condition": "dns64",
                                            "description": "IPv6 prefix",
                                            "format": "ipv6-address-plen",
                                            "src-name": "prefix"
                                        }
                                    },
                                    "src-name": "dns64"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "forward-policy": {
                    "obj-name": "forward-policy",
                    "obj-help": "Forward Policy commands",
                    "obj-lineage": "cmroot.slb.template.policy",
                    "obj-occurences": "single",
                    "obj-indexing": "none",
                    "obj-module": true,
                    "obj-module-prompt": "forward-policy",
                    "obj-lineage-full": "slb.template.policy.forward-policy",
                    "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy",
                    "properties": {
                        "no-client-conn-reuse": {
                            "type": "number",
                            "format": "flag",
                            "description": "Inspects only first request of a connection",
                            "src-name": "no-client-conn-reuse"
                        },
                        "filtering": {
                            "type": "array",
                            "array-start": true,
                            "array-multi": true,
                            "properties": [
                                {
                                    "ssli-url-filtering": {
                                        "type": "string",
                                        "maxItems": "4",
                                        "description": "'bypassed-sni-disable': \"Disable SNI filtering for bypassed URL's(enabled by default);'intercepted-sni-enable': \"Enable SNI filtering for intercepted URL's(disabled by default);'intercepted-http-disable': \"Disable HTTP(host/URL) filtering for intercepted URL's(enabled by default);'no-sni-allow': \"Allow connection if SNI filtering is enabled and SNI header is not present(Drop by default);",
                                        "enum": [
                                            "bypassed-sni-disable",
                                            "intercepted-sni-enable",
                                            "intercepted-http-disable",
                                            "no-sni-allow"
                                        ],
                                        "enumMap": [
                                            {
                                                "bypassed-sni-disable": "\"Disable SNI filtering for bypassed URL's(enabled by default)"
                                            },
                                            {
                                                "intercepted-sni-enable": "\"Enable SNI filtering for intercepted URL's(disabled by default)"
                                            },
                                            {
                                                "intercepted-http-disable": "\"Disable HTTP(host/URL) filtering for intercepted URL's(enabled by default)"
                                            },
                                            {
                                                "no-sni-allow": "\"Allow connection if SNI filtering is enabled and SNI header is not present(Drop by default)"
                                            }
                                        ],
                                        "format": "enum",
                                        "src-name": "ssli-url-filtering"
                                    }
                                }
                            ],
                            "src-name": "filtering"
                        },
                        "action-list": {
                            "obj-name": "action",
                            "obj-help": "action list",
                            "obj-lineage": "cmroot.slb.template.policy.forward-policy",
                            "obj-occurences": "multi",
                            "obj-json-suffix": "-list",
                            "obj-indexing": "string",
                            "obj-module-prompt": "action",
                            "obj-stats-oid": "2048",
                            "obj-module-dont-display-value-in-prompt": true,
                            "obj-lineage-full": "slb.template.policy.forward-policy.action",
                            "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/action/{name}",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "object-key": true,
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "description": "Action policy name",
                                    "format": "string",
                                    "src-name": "name"
                                },
                                "action1": {
                                    "type": "string",
                                    "enum": [
                                        "forward-to-internet",
                                        "forward-to-service-group",
                                        "forward-to-proxy",
                                        "drop"
                                    ],
                                    "enumMap": [
                                        {
                                            "forward-to-internet": "\"Forward request to Internet"
                                        },
                                        {
                                            "forward-to-service-group": "\"Forward request to service group"
                                        },
                                        {
                                            "forward-to-proxy": "\"Forward request to HTTP proxy server"
                                        },
                                        {
                                            "drop": "\"Drop request"
                                        }
                                    ],
                                    "description": "'forward-to-internet': \"Forward request to Internet;'forward-to-service-group': \"Forward request to service group;'forward-to-proxy': \"Forward request to HTTP proxy server;'drop': \"Drop request;",
                                    "format": "enum",
                                    "src-name": "action1"
                                },
                                "fake-sg": {
                                    "type": "string",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "enabled": "forward-to-internet",
                                    "description": "service group to forward the packets to Internet",
                                    "format": "string",
                                    "src-name": "fake-sg"
                                },
                                "real-sg": {
                                    "type": "string",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "enabled": "forward-to-service-group/forward-to-proxy",
                                    "description": "service group to forward the packets",
                                    "format": "string",
                                    "src-name": "real-sg"
                                },
                                "forward-snat": {
                                    "type": "string",
                                    "format": "string-rlx",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "alias": "forward-snat",
                                    "disabled": "drop",
                                    "description": "Source NAT pool or pool group",
                                    "src-name": "snat"
                                },
                                "fall-back": {
                                    "type": "string",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "alias": "fall-back",
                                    "enabled": "forward-to-internet",
                                    "description": "Fallback service group for Internet",
                                    "format": "string",
                                    "src-name": "fallback"
                                },
                                "fall-back-snat": {
                                    "type": "string",
                                    "format": "string-rlx",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "alias": "fall-back-snat",
                                    "enabled": "forward-to-internet",
                                    "description": "Source NAT pool or pool group for fallback server",
                                    "src-name": "snat"
                                },
                                "proxy-chaining": {
                                    "type": "number",
                                    "format": "flag",
                                    "alias": "proxy-chaining",
                                    "disabled": "{action1 in (forward-to-proxy)}",
                                    "hide-help": true,
                                    "description": "Enable proxy chaining feature",
                                    "src-name": "proxy-chaining"
                                },
                                "log": {
                                    "type": "number",
                                    "format": "flag",
                                    "description": "enable logging",
                                    "src-name": "log"
                                },
                                "drop-message": {
                                    "type": "string",
                                    "format": "long-string-rlx",
                                    "minLength": "1",
                                    "maxLength": "1023",
                                    "description": "drop-message sent to the client as webpage(html tags are included and quotation marks are required for white spaces)",
                                    "src-name": "drop-message"
                                },
                                "drop-redirect-url": {
                                    "type": "string",
                                    "format": "long-string-rlx",
                                    "minLength": "1",
                                    "maxLength": "1023",
                                    "m-exclusion": "drop-message",
                                    "description": "Specify URL to which client request is redirected upon being dropped",
                                    "src-name": "drop-redirect-url"
                                },
                                "http-status-code": {
                                    "type": "string",
                                    "condition": "drop-redirect-url",
                                    "description": "'301': \"Moved permanently;'302': \"Found;",
                                    "enum": [
                                        "301",
                                        "302"
                                    ],
                                    "enumMap": [
                                        {
                                            "301": "\"Moved permanently"
                                        },
                                        {
                                            "302": "\"Found"
                                        }
                                    ],
                                    "default": "302",
                                    "format": "enum",
                                    "src-name": "http-status-code"
                                }
                            },
                            "type": "object"
                        },
                        "source-list": {
                            "obj-name": "source",
                            "obj-help": "proxy source list",
                            "obj-lineage": "cmroot.slb.template.policy.forward-policy",
                            "obj-occurences": "multi",
                            "obj-json-suffix": "-list",
                            "obj-indexing": "string",
                            "obj-module-prompt": "source",
                            "obj-stats-oid": "2049",
                            "obj-module-dont-display-value-in-prompt": true,
                            "obj-lineage-full": "slb.template.policy.forward-policy.source",
                            "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/source/{name}",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "object-key": true,
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "description": "source destination match rule name",
                                    "format": "string",
                                    "src-name": "name"
                                },
                                "match-class-list": {
                                    "type": "string",
                                    "minLength": "1",
                                    "maxLength": "63",
                                    "description": "Class List Name",
                                    "format": "string",
                                    "src-name": "match-class-list"
                                },
                                "match-any": {
                                    "type": "number",
                                    "format": "flag",
                                    "description": "Match any source",
                                    "m-exclusion": "match-class-list",
                                    "src-name": "match-any"
                                },
                                "match-authorize-policy": {
                                    "type": "string",
                                    "obj-lineage-full": "aam.authorization.policy",
                                    "$ref": "/axapi/v3/aam/authorization/policy",
                                    "description": "Authorize-policy for user and group based policy",
                                    "format": "string",
                                    "src-name": "match-authorize-policy"
                                },
                                "priority": {
                                    "type": "number",
                                    "minimum": "1",
                                    "maximum": "1024",
                                    "description": "Priority of the source(higher the number higher the priority, default 0)",
                                    "format": "number",
                                    "src-name": "priority"
                                },
                                "destination": {
                                    "obj-name": "destination",
                                    "obj-help": "proxy destination match rule",
                                    "obj-lineage": "cmroot.slb.template.policy.forward-policy.source",
                                    "obj-occurences": "intermediate",
                                    "obj-module-prompt": "dest",
                                    "obj-module-dont-display-value-in-prompt": true,
                                    "obj-lineage-full": "slb.template.policy.forward-policy.source.destination",
                                    "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/source/{name}/destination",
                                    "properties": {
                                        "class-list-list": {
                                            "obj-name": "class-list",
                                            "obj-help": "Configure class-list for destination matching",
                                            "obj-lineage": "cmroot.slb.template.policy.forward-policy.source.destination",
                                            "obj-occurences": "multi",
                                            "obj-json-suffix": "-list",
                                            "obj-order-by": "priority(priority)",
                                            "obj-module-prompt": "clist",
                                            "obj-stats-oid": "2045",
                                            "obj-module-dont-display-value-in-prompt": true,
                                            "obj-lineage-full": "slb.template.policy.forward-policy.source.destination.class-list",
                                            "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/source/{name}/destination/class-list/{dest-class-list}",
                                            "properties": {
                                                "dest-class-list": {
                                                    "type": "string",
                                                    "alias": "dest-class-list",
                                                    "minLength": "1",
                                                    "maxLength": "63",
                                                    "object-key": true,
                                                    "description": "Destination Class List Name",
                                                    "format": "string",
                                                    "src-name": "name"
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "minLength": "1",
                                                    "maxLength": "63",
                                                    "condition": "dest-class-list",
                                                    "description": "Action to be performed",
                                                    "format": "string",
                                                    "src-name": "action"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "condition": "action",
                                                    "enum": [
                                                        "host",
                                                        "url",
                                                        "ip"
                                                    ],
                                                    "enumMap": [
                                                        {
                                                            "host": "\"Match hostname"
                                                        },
                                                        {
                                                            "url": "\"Match URL"
                                                        },
                                                        {
                                                            "ip": "\"Match destination IP address"
                                                        }
                                                    ],
                                                    "description": "'host': \"Match hostname;'url': \"Match URL;'ip': \"Match destination IP address;",
                                                    "format": "enum",
                                                    "src-name": "type"
                                                },
                                                "priority": {
                                                    "type": "number",
                                                    "minimum": "1",
                                                    "maximum": "1024",
                                                    "condition": "type",
                                                    "description": "Priority value of the action(higher the number higher the priority)",
                                                    "format": "number",
                                                    "src-name": "priority"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "web-category-list-list": {
                                            "obj-name": "web-category-list",
                                            "obj-help": "Configure web-category category-list for destination matching",
                                            "obj-lineage": "cmroot.slb.template.policy.forward-policy.source.destination",
                                            "obj-occurences": "multi",
                                            "obj-json-suffix": "-list",
                                            "obj-indexing": "string",
                                            "obj-module-prompt": "cat-list",
                                            "obj-stats-oid": "2046",
                                            "obj-module-dont-display-value-in-prompt": true,
                                            "obj-lineage-full": "slb.template.policy.forward-policy.source.destination.web-category-list",
                                            "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/source/{name}/destination/web-category-list/{web-category-list}",
                                            "properties": {
                                                "web-category-list": {
                                                    "type": "string",
                                                    "format": "string-rlx",
                                                    "alias": "web-category-list",
                                                    "minLength": "1",
                                                    "maxLength": "63",
                                                    "object-key": true,
                                                    "obj-lineage-full": "web-category.category-list",
                                                    "$ref": "/axapi/v3/web-category/category-list",
                                                    "description": "Destination Class List Name",
                                                    "src-name": "name"
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "minLength": "1",
                                                    "maxLength": "63",
                                                    "condition": "web-category-list",
                                                    "description": "Action to be performed",
                                                    "format": "string",
                                                    "src-name": "action"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "condition": "action",
                                                    "enum": [
                                                        "host",
                                                        "url"
                                                    ],
                                                    "enumMap": [
                                                        {
                                                            "host": "\"Match hostname"
                                                        },
                                                        {
                                                            "url": "\"match URL"
                                                        }
                                                    ],
                                                    "description": "'host': \"Match hostname;'url': \"match URL;",
                                                    "format": "enum",
                                                    "src-name": "type"
                                                },
                                                "priority": {
                                                    "type": "number",
                                                    "minimum": "1",
                                                    "maximum": "1024",
                                                    "condition": "type",
                                                    "description": "Priority value of the action(higher the number higher the priority)",
                                                    "format": "number",
                                                    "src-name": "priority"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "any": {
                                            "obj-name": "any",
                                            "obj-help": "Default destination match rule",
                                            "obj-lineage": "cmroot.slb.template.policy.forward-policy.source.destination",
                                            "obj-occurences": "single",
                                            "obj-module-prompt": "any",
                                            "obj-stats-oid": "2047",
                                            "obj-module-dont-display-value-in-prompt": true,
                                            "obj-lineage-full": "slb.template.policy.forward-policy.source.destination.any",
                                            "axapi": "/axapi/v3/slb/template/policy/{name}/forward-policy/source/{name}/destination/any",
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "minLength": "1",
                                                    "maxLength": "63",
                                                    "mandatory-in-api": true,
                                                    "description": "Action to be performed",
                                                    "format": "string",
                                                    "src-name": "action"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "port-list": {
            "obj-name": "port",
            "obj-help": "Port template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "rport",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.port",
            "axapi": "/axapi/v3/slb/template/port/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Port template name",
                    "src-name": "name"
                },
                "conn-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "8000000",
                    "default": "8000000",
                    "description": "Connection limit (Connection limit)",
                    "format": "number",
                    "src-name": "conn-limit"
                },
                "resume": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "condition": "conn-limit",
                    "link-next-fwd": "conn-limit-no-logging",
                    "description": "Resume accepting new connection after connection number drops below threshold (Connection resume threshold)",
                    "format": "number",
                    "src-name": "resume"
                },
                "conn-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-limit-no-logging",
                    "src-name": "no-logging"
                },
                "conn-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Connection rate limit (Connection rate limit)",
                    "format": "number",
                    "src-name": "conn-rate-limit"
                },
                "rate-interval": {
                    "type": "string",
                    "alias": "rate-interval",
                    "condition": "conn-rate-limit",
                    "description": "'100ms': \"Use 100 ms as sampling interval;'second': \"Use 1 second as sampling interval;",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Use 100 ms as sampling interval"
                        },
                        {
                            "second": "\"Use 1 second as sampling interval"
                        }
                    ],
                    "link-next-fwd": "conn-rate-limit-no-logging",
                    "default": "second",
                    "format": "enum",
                    "src-name": "per"
                },
                "conn-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-rate-limit-no-logging",
                    "src-name": "no-logging"
                },
                "request-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Request rate limit (Request rate limit)",
                    "format": "number",
                    "src-name": "request-rate-limit"
                },
                "request-rate-interval": {
                    "type": "string",
                    "alias": "request-rate-interval",
                    "condition": "request-rate-limit",
                    "description": "'100ms': \"Use 100 ms as sampling interval;'second': \"Use 1 second as sampling interval;",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Use 100 ms as sampling interval"
                        },
                        {
                            "second": "\"Use 1 second as sampling interval"
                        }
                    ],
                    "link-next-fwd": "reset",
                    "default": "second",
                    "format": "enum",
                    "src-name": "per"
                },
                "reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "request-rate-limit",
                    "link-next-fwd": "request-rate-no-logging",
                    "description": "Send client reset when connection rate over limit",
                    "src-name": "reset"
                },
                "request-rate-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "request-rate-limit",
                    "alias": "request-rate-no-logging",
                    "description": "Do not log connection over limit event",
                    "src-name": "no-logging"
                },
                "dest-nat": {
                    "type": "number",
                    "format": "flag",
                    "description": "Destination NAT",
                    "src-name": "dest-nat"
                },
                "down-grace-period": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "86400",
                    "description": "Port down grace period (Down grace period)",
                    "format": "number",
                    "src-name": "down-grace-period"
                },
                "del-session-on-server-down": {
                    "type": "number",
                    "format": "flag",
                    "description": "Delete session if the server/port goes down (either disabled/hm down)",
                    "src-name": "del-session-on-server-down"
                },
                "dscp": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "63",
                    "description": "Differentiated Services Code Point (DSCP to Real Server IP Mapping Value)",
                    "format": "number",
                    "src-name": "dscp"
                },
                "dynamic-member-priority": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16",
                    "description": "Set dynamic member's priority (Initial priority (default is 16))",
                    "default": "16",
                    "format": "number",
                    "src-name": "dynamic-member-priority"
                },
                "decrement": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "7",
                    "condition": "dynamic-member-priority",
                    "description": "Decrease after every round of DNS query (default is 0)",
                    "default": "0",
                    "format": "number",
                    "src-name": "decrement"
                },
                "extended-stats": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable extended statistics on real server port",
                    "src-name": "extended-stats"
                },
                "no-ssl": {
                    "type": "number",
                    "format": "flag",
                    "description": "No SSL",
                    "src-name": "no-ssl"
                },
                "stats-data-action": {
                    "type": "string",
                    "enum": [
                        "stats-data-enable",
                        "stats-data-disable"
                    ],
                    "enumMap": [
                        {
                            "stats-data-enable": "\"Enable statistical data collection for real server port"
                        },
                        {
                            "stats-data-disable": "\"Disable statistical data collection for real server port"
                        }
                    ],
                    "description": "'stats-data-enable': \"Enable statistical data collection for real server port;'stats-data-disable': \"Disable statistical data collection for real server port;",
                    "not-allowed-in-no": true,
                    "default": "stats-data-enable",
                    "format": "enum",
                    "src-name": "stats-data-action"
                },
                "health-check": {
                    "type": "string",
                    "description": "Health Check Monitor (Health monitor name)",
                    "minLength": "1",
                    "maxLength": "63",
                    "obj-lineage-full": "health.monitor",
                    "$ref": "/axapi/v3/health/monitor",
                    "format": "string",
                    "src-name": "health-check"
                },
                "health-check-disable": {
                    "type": "number",
                    "format": "flag",
                    "m-exclusion": "health-check",
                    "description": "Disable configured health check configuration",
                    "src-name": "health-check-disable"
                },
                "inband-health-check": {
                    "type": "number",
                    "format": "flag",
                    "description": "Use inband traffic to detect port's health status",
                    "src-name": "inband-health-check"
                },
                "retry": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "7",
                    "condition": "inband-health-check",
                    "link-next-fwd": "reassign",
                    "description": "Maximum retry times before reassign this connection to another server/port (default is 2) (The maximum retry number)",
                    "default": "2",
                    "format": "number",
                    "src-name": "retry"
                },
                "reassign": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "255",
                    "condition": "inband-health-check",
                    "link-next-fwd": "down-timer",
                    "description": "Maximum reassign times before declear the server/port down (default is 25) (The maximum reassign number)",
                    "default": "25",
                    "format": "number",
                    "src-name": "reassign"
                },
                "down-timer": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "255",
                    "condition": "inband-health-check",
                    "link-next-fwd": "resel-on-reset",
                    "description": "The timer to bring the marked down server/port to up (default is 0, never bring up) (The timer to bring up server (in second, default is 0))",
                    "default": "0",
                    "format": "number",
                    "src-name": "down-timer"
                },
                "resel-on-reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "inband-health-check",
                    "description": "When receiving reset from server, do the server/port reselection (default is 0, don't do reselection)",
                    "src-name": "resel-on-reset"
                },
                "source-nat": {
                    "type": "string",
                    "format": "string-rlx",
                    "description": "Source NAT (IP NAT Pool or pool group name)",
                    "obj-lineage-full": "ip.nat.pool, ipv6.nat.pool, ip.nat.pool-group, ipv6.nat.pool-group",
                    "$ref": "/axapi/v3/ip/nat/pool, ipv6/nat/pool, ip/nat/pool-group, ipv6/nat/pool-group",
                    "src-name": "source-nat"
                },
                "weight": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1000",
                    "description": "Weight (port weight)",
                    "default": "1",
                    "format": "number",
                    "src-name": "weight"
                },
                "slow-start": {
                    "type": "number",
                    "format": "flag",
                    "description": "Slowly ramp up the connection number after port is up",
                    "src-name": "slow-start"
                },
                "initial-slow-start": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4095",
                    "condition": "slow-start",
                    "link-next-fwd": "add",
                    "description": "Initial slow start connection limit (default 128) (Initial slow start connection limit)",
                    "alias": "initial-slow-start",
                    "default": "128",
                    "format": "number",
                    "src-name": "from"
                },
                "add": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4095",
                    "condition": "slow-start",
                    "link-next-fwd": "every",
                    "description": "Slow start connection limit add by a number every interval (Add by this number every interval)",
                    "format": "number",
                    "src-name": "add"
                },
                "times": {
                    "type": "number",
                    "minimum": "2",
                    "maximum": "10",
                    "condition": "slow-start",
                    "m-exclusion": "add",
                    "link-next-fwd": "every",
                    "description": "Slow start connection limit multiply by a number every interval (default 2) (Multiply by this number every interval)",
                    "default": "2",
                    "format": "number",
                    "src-name": "times"
                },
                "every": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "condition": "slow-start",
                    "link-next-fwd": "till",
                    "description": "Slow start connection limit increment interval (default 10) (Slow start connection limit increment interval)",
                    "default": "10",
                    "format": "number",
                    "src-name": "every"
                },
                "till": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "condition": "slow-start",
                    "description": "Slow start ends when slow start connection limit reaches a number (default 4096) (Slow start ends when connection limit reaches this number)",
                    "default": "4096",
                    "format": "number",
                    "src-name": "till"
                },
                "bw-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16777216",
                    "description": "Configure bandwidth rate limit on real server port (Bandwidth rate limit in Kbps)",
                    "format": "number",
                    "src-name": "bw-rate-limit"
                },
                "bw-rate-limit-resume": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16777216",
                    "condition": "bw-rate-limit",
                    "link-next-fwd": "bw-rate-limit-duration",
                    "description": "Resume server selection after bandwidth drops below this threshold (in Kbps) (Bandwidth rate limit resume threshold (in Kbps))",
                    "alias": "bw-rate-limit-resume",
                    "format": "number",
                    "src-name": "resume"
                },
                "bw-rate-limit-duration": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "250",
                    "condition": "bw-rate-limit-resume",
                    "link-next-fwd": "bw-rate-limit-no-logging",
                    "description": "Duration in seconds the observed rate needs to honor (Duration in seconds)",
                    "alias": "bw-rate-limit-duration",
                    "format": "number",
                    "src-name": "duration"
                },
                "bw-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "bw-rate-limit-duration",
                    "description": "Do not log bandwidth rate limit related state transitions",
                    "alias": "bw-rate-limit-no-logging",
                    "src-name": "no-logging"
                }
            },
            "type": "object"
        },
        "server-list": {
            "obj-name": "server",
            "obj-help": "Server template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "string",
            "obj-module-prompt": "rserver",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.server",
            "axapi": "/axapi/v3/slb/template/server/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Server template name",
                    "src-name": "name"
                },
                "conn-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "8000000",
                    "default": "8000000",
                    "description": "Connection limit (Connection limit)",
                    "format": "number",
                    "src-name": "conn-limit"
                },
                "resume": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "condition": "conn-limit",
                    "link-next-fwd": "conn-limit-no-logging",
                    "description": "Resume accepting new connection after connection number drops below threshold (Connection resume threshold)",
                    "format": "number",
                    "src-name": "resume"
                },
                "conn-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-limit-no-logging",
                    "src-name": "no-logging"
                },
                "conn-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Connection rate limit (Connection rate limit)",
                    "format": "number",
                    "src-name": "conn-rate-limit"
                },
                "rate-interval": {
                    "type": "string",
                    "alias": "rate-interval",
                    "condition": "conn-rate-limit",
                    "description": "'100ms': \"Use 100 ms as sampling interval;'second': \"Use 1 second as sampling interval;",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Use 100 ms as sampling interval"
                        },
                        {
                            "second": "\"Use 1 second as sampling interval"
                        }
                    ],
                    "link-next-fwd": "conn-rate-limit-no-logging",
                    "default": "second",
                    "format": "enum",
                    "src-name": "per"
                },
                "conn-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-rate-limit-no-logging",
                    "src-name": "no-logging"
                },
                "dns-query-interval": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1440",
                    "default": "10",
                    "description": "The interval to query DNS server for the hostname (DNS query interval (in minute, default is 10))",
                    "format": "number",
                    "src-name": "dns-query-interval"
                },
                "dynamic-server-prefix": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "3",
                    "description": "Prefix of dynamic server (Prefix of dynamic server (default is \"DRS\"))",
                    "default": "DRS",
                    "format": "string",
                    "src-name": "dynamic-server-prefix"
                },
                "extended-stats": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable extended statistics on real server",
                    "src-name": "extended-stats"
                },
                "log-selection-failure": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable real-time logging for server selection failure event",
                    "src-name": "log-selection-failure"
                },
                "health-check": {
                    "type": "string",
                    "description": "Health Check Monitor (Health monitor name)",
                    "minLength": "1",
                    "maxLength": "63",
                    "obj-lineage-full": "health.monitor",
                    "$ref": "/axapi/v3/health/monitor",
                    "format": "string",
                    "src-name": "health-check"
                },
                "health-check-disable": {
                    "type": "number",
                    "format": "flag",
                    "m-exclusion": "health-check",
                    "description": "Disable configured health check configuration",
                    "src-name": "health-check-disable"
                },
                "max-dynamic-server": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1023",
                    "description": "Maximum dynamic server number (Maximum dynamic server number (default is 255))",
                    "default": "255",
                    "format": "number",
                    "src-name": "max-dynamic-server"
                },
                "min-ttl-ratio": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "15",
                    "description": "Minimum TTL to DNS query interval ratio (Minimum TTL ratio (default is 2))",
                    "default": "2",
                    "format": "number",
                    "src-name": "min-ttl-ratio"
                },
                "weight": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1000",
                    "description": "Weight for the Real Servers (Connection Weight)",
                    "format": "number",
                    "src-name": "weight"
                },
                "spoofing-cache": {
                    "type": "number",
                    "format": "flag",
                    "description": "Servers under the template are spoofing cache",
                    "src-name": "spoofing-cache"
                },
                "stats-data-action": {
                    "type": "string",
                    "enum": [
                        "stats-data-enable",
                        "stats-data-disable"
                    ],
                    "enumMap": [
                        {
                            "stats-data-enable": "\"Enable statistical data collection for real server"
                        },
                        {
                            "stats-data-disable": "\"Disable statistical data collection for real server"
                        }
                    ],
                    "description": "'stats-data-enable': \"Enable statistical data collection for real server;'stats-data-disable': \"Disable statistical data collection for real server;",
                    "not-allowed-in-no": true,
                    "default": "stats-data-enable",
                    "format": "enum",
                    "src-name": "stats-data-action"
                },
                "slow-start": {
                    "type": "number",
                    "format": "flag",
                    "description": "Slowly ramp up the connection number after server is up",
                    "src-name": "slow-start"
                },
                "initial-slow-start": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4095",
                    "condition": "slow-start",
                    "link-next-fwd": "add",
                    "description": "Initial slow start connection limit (default 128) (Initial slow start connection limit)",
                    "default": "128",
                    "alias": "initial-slow-start",
                    "format": "number",
                    "src-name": "from"
                },
                "add": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "4095",
                    "condition": "slow-start",
                    "link-next-fwd": "every",
                    "description": "Slow start connection limit add by a number every interval (Add by this number every interval)",
                    "format": "number",
                    "src-name": "add"
                },
                "times": {
                    "type": "number",
                    "minimum": "2",
                    "maximum": "10",
                    "m-exclusion": "add",
                    "condition": "slow-start",
                    "link-next-fwd": "every",
                    "description": "Slow start connection limit multiply by a number every interval (default 2) (Multiply by this number every interval)",
                    "default": "2",
                    "format": "number",
                    "src-name": "times"
                },
                "every": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "condition": "slow-start",
                    "link-next-fwd": "till",
                    "description": "Slow start connection limit increment interval (default 10) (Slow start connection limit increment interval)",
                    "default": "10",
                    "format": "number",
                    "src-name": "every"
                },
                "till": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "condition": "slow-start",
                    "description": "Slow start ends when slow start connection limit reaches a number (default 4096) (Slow start ends when connection limit reaches this number)",
                    "default": "4096",
                    "format": "number",
                    "src-name": "till"
                },
                "bw-rate-limit-acct": {
                    "type": "string",
                    "description": "'to-server-only': \"Only account for traffic sent to server;'from-server-only': \"Only account for traffic received from server;'all': \"Account for all traffic sent to and received from server;",
                    "enum": [
                        "to-server-only",
                        "from-server-only",
                        "all"
                    ],
                    "enumMap": [
                        {
                            "to-server-only": "\"Only account for traffic sent to server"
                        },
                        {
                            "from-server-only": "\"Only account for traffic received from server"
                        },
                        {
                            "all": "\"Account for all traffic sent to and received from server"
                        }
                    ],
                    "default": "all",
                    "format": "enum",
                    "src-name": "bw-rate-limit-acct"
                },
                "bw-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16777216",
                    "description": "Configure bandwidth rate limit on real server (Bandwidth rate limit in Kbps)",
                    "format": "number",
                    "src-name": "bw-rate-limit"
                },
                "bw-rate-limit-resume": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16777216",
                    "condition": "bw-rate-limit",
                    "link-next-fwd": "bw-rate-limit-duration",
                    "description": "Resume server selection after bandwidth drops below this threshold (in Kbps) (Bandwidth rate limit resume threshold (in Kbps))",
                    "alias": "bw-rate-limit-resume",
                    "format": "number",
                    "src-name": "resume"
                },
                "bw-rate-limit-duration": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "250",
                    "condition": "bw-rate-limit-resume",
                    "link-next-fwd": "bw-rate-limit-no-logging",
                    "description": "Duration in seconds the observed rate needs to honor (Duration in seconds)",
                    "alias": "bw-rate-limit-duration",
                    "format": "number",
                    "src-name": "duration"
                },
                "bw-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "bw-rate-limit-duration",
                    "description": "Do not log bandwidth rate limit related state transitions",
                    "alias": "bw-rate-limit-no-logging",
                    "src-name": "no-logging"
                }
            },
            "type": "object"
        },
        "server-ssl-list": {
            "obj-name": "server-ssl",
            "obj-help": "Server Side SSL Template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "server ssl",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.server-ssl",
            "axapi": "/axapi/v3/slb/template/server-ssl/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Server SSL Template Name",
                    "src-name": "name"
                },
                "ca-certs": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "CA Certificate",
                    "properties": [
                        {
                            "ca-cert": {
                                "type": "string",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "245",
                                "maxItems": "128",
                                "description": "Specify CA certificate (CA Certificate)",
                                "format": "string",
                                "src-name": "ca-cert"
                            }
                        },
                        {
                            "server-ocsp": {
                                "type": "dummy",
                                "condition": "ca-cert",
                                "alias": "server-ocsp",
                                "description": "Specify ocsp authentication server(s) for client certificate verification",
                                "format": "dummy",
                                "src-name": "ocsp"
                            }
                        },
                        {
                            "server-ocsp-srvr": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "server-ocsp",
                                "alias": "server-ocsp-srvr",
                                "obj-lineage-full": "aam.authentication.server.ocsp",
                                "$ref": "/axapi/v3/aam/authentication/server/ocsp",
                                "description": "Specify authentication server",
                                "src-name": "server"
                            }
                        },
                        {
                            "server-ocsp-sg": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "server-ocsp",
                                "alias": "server-ocsp-sg",
                                "obj-lineage-full": "aam.authentication.service-group",
                                "$ref": "/axapi/v3/aam/authentication/service-group",
                                "description": "Specify service-group (Service group name)",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "ca-certs"
                },
                "crl-certs": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "crl": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "255",
                                "maxItems": "128",
                                "description": "Certificate Revocation Lists (Certificate Revocation Lists file name)",
                                "format": "string",
                                "src-name": "crl"
                            }
                        }
                    ],
                    "src-name": "crl-certs"
                },
                "cert": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "description": "Specify Client certificate (Certificate Name)",
                    "format": "string",
                    "src-name": "cert"
                },
                "cipher": {
                    "type": "dummy",
                    "description": "Specify SSL cipher suite, default is enable all",
                    "format": "dummy",
                    "src-name": "cipher"
                },
                "cipher-without-prio-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "cipher-wo-prio": {
                                "type": "enum",
                                "multi-field-key": true,
                                "enum": [
                                    "SSL3_RSA_DES_192_CBC3_SHA",
                                    "SSL3_RSA_DES_40_CBC_SHA",
                                    "SSL3_RSA_DES_64_CBC_SHA",
                                    "SSL3_RSA_RC4_128_MD5",
                                    "SSL3_RSA_RC4_128_SHA",
                                    "SSL3_RSA_RC4_40_MD5",
                                    "TLS1_RSA_AES_128_SHA",
                                    "TLS1_RSA_AES_256_SHA",
                                    "TLS1_RSA_EXPORT1024_RC4_56_MD5",
                                    "TLS1_RSA_EXPORT1024_RC4_56_SHA",
                                    "TLS1_RSA_AES_128_SHA256",
                                    "TLS1_RSA_AES_256_SHA256",
                                    "TLS1_DHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_DHE_RSA_AES_128_SHA",
                                    "TLS1_DHE_RSA_AES_128_SHA256",
                                    "TLS1_DHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_DHE_RSA_AES_256_SHA",
                                    "TLS1_DHE_RSA_AES_256_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA",
                                    "TLS1_ECDHE_ECDSA_AES_128_SHA256",
                                    "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_GCM_SHA256",
                                    "TLS1_ECDHE_RSA_AES_128_SHA",
                                    "TLS1_ECDHE_RSA_AES_128_SHA256",
                                    "TLS1_ECDHE_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA",
                                    "TLS1_RSA_AES_128_GCM_SHA256",
                                    "TLS1_RSA_AES_256_GCM_SHA384",
                                    "TLS1_ECDHE_RSA_AES_256_SHA384",
                                    "TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                ],
                                "enumMap": [
                                    {
                                        "SSL3_RSA_DES_192_CBC3_SHA": "\"SSL3_RSA_DES_192_CBC3_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_40_CBC_SHA": "\"SSL3_RSA_DES_40_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_DES_64_CBC_SHA": "\"SSL3_RSA_DES_64_CBC_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_MD5": "\"SSL3_RSA_RC4_128_MD5"
                                    },
                                    {
                                        "SSL3_RSA_RC4_128_SHA": "\"SSL3_RSA_RC4_128_SHA"
                                    },
                                    {
                                        "SSL3_RSA_RC4_40_MD5": "\"SSL3_RSA_RC4_40_MD5"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA": "\"TLS1_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA": "\"TLS1_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_MD5": "\"TLS1_RSA_EXPORT1024_RC4_56_MD5"
                                    },
                                    {
                                        "TLS1_RSA_EXPORT1024_RC4_56_SHA": "\"TLS1_RSA_EXPORT1024_RC4_56_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_SHA256": "\"TLS1_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_SHA256": "\"TLS1_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_GCM_SHA256": "\"TLS1_DHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA": "\"TLS1_DHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_128_SHA256": "\"TLS1_DHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_GCM_SHA384": "\"TLS1_DHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA": "\"TLS1_DHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_DHE_RSA_AES_256_SHA256": "\"TLS1_DHE_RSA_AES_256_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA": "\"TLS1_ECDHE_ECDSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_128_SHA256": "\"TLS1_ECDHE_ECDSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA": "\"TLS1_ECDHE_ECDSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_GCM_SHA256": "\"TLS1_ECDHE_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA": "\"TLS1_ECDHE_RSA_AES_128_SHA"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_128_SHA256": "\"TLS1_ECDHE_RSA_AES_128_SHA256"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_GCM_SHA384": "\"TLS1_ECDHE_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA": "\"TLS1_ECDHE_RSA_AES_256_SHA"
                                    },
                                    {
                                        "TLS1_RSA_AES_128_GCM_SHA256": "\"TLS1_RSA_AES_128_GCM_SHA256"
                                    },
                                    {
                                        "TLS1_RSA_AES_256_GCM_SHA384": "\"TLS1_RSA_AES_256_GCM_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_RSA_AES_256_SHA384": "\"TLS1_ECDHE_RSA_AES_256_SHA384"
                                    },
                                    {
                                        "TLS1_ECDHE_ECDSA_AES_256_SHA384": "\"TLS1_ECDHE_ECDSA_AES_256_SHA384"
                                    }
                                ],
                                "description": "'SSL3_RSA_DES_192_CBC3_SHA': \"SSL3_RSA_DES_192_CBC3_SHA;'SSL3_RSA_DES_40_CBC_SHA': \"SSL3_RSA_DES_40_CBC_SHA;'SSL3_RSA_DES_64_CBC_SHA': \"SSL3_RSA_DES_64_CBC_SHA;'SSL3_RSA_RC4_128_MD5': \"SSL3_RSA_RC4_128_MD5;'SSL3_RSA_RC4_128_SHA': \"SSL3_RSA_RC4_128_SHA;'SSL3_RSA_RC4_40_MD5': \"SSL3_RSA_RC4_40_MD5;'TLS1_RSA_AES_128_SHA': \"TLS1_RSA_AES_128_SHA;'TLS1_RSA_AES_256_SHA': \"TLS1_RSA_AES_256_SHA;'TLS1_RSA_EXPORT1024_RC4_56_MD5': \"TLS1_RSA_EXPORT1024_RC4_56_MD5;'TLS1_RSA_EXPORT1024_RC4_56_SHA': \"TLS1_RSA_EXPORT1024_RC4_56_SHA;'TLS1_RSA_AES_128_SHA256': \"TLS1_RSA_AES_128_SHA256;'TLS1_RSA_AES_256_SHA256': \"TLS1_RSA_AES_256_SHA256;'TLS1_DHE_RSA_AES_128_GCM_SHA256': \"TLS1_DHE_RSA_AES_128_GCM_SHA256;'TLS1_DHE_RSA_AES_128_SHA': \"TLS1_DHE_RSA_AES_128_SHA;'TLS1_DHE_RSA_AES_128_SHA256': \"TLS1_DHE_RSA_AES_128_SHA256;'TLS1_DHE_RSA_AES_256_GCM_SHA384': \"TLS1_DHE_RSA_AES_256_GCM_SHA384;'TLS1_DHE_RSA_AES_256_SHA': \"TLS1_DHE_RSA_AES_256_SHA;'TLS1_DHE_RSA_AES_256_SHA256': \"TLS1_DHE_RSA_AES_256_SHA256;'TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_GCM_SHA256;'TLS1_ECDHE_ECDSA_AES_128_SHA': \"TLS1_ECDHE_ECDSA_AES_128_SHA;'TLS1_ECDHE_ECDSA_AES_128_SHA256': \"TLS1_ECDHE_ECDSA_AES_128_SHA256;'TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_GCM_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA': \"TLS1_ECDHE_ECDSA_AES_256_SHA;'TLS1_ECDHE_RSA_AES_128_GCM_SHA256': \"TLS1_ECDHE_RSA_AES_128_GCM_SHA256;'TLS1_ECDHE_RSA_AES_128_SHA': \"TLS1_ECDHE_RSA_AES_128_SHA;'TLS1_ECDHE_RSA_AES_128_SHA256': \"TLS1_ECDHE_RSA_AES_128_SHA256;'TLS1_ECDHE_RSA_AES_256_GCM_SHA384': \"TLS1_ECDHE_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA': \"TLS1_ECDHE_RSA_AES_256_SHA;'TLS1_RSA_AES_128_GCM_SHA256': \"TLS1_RSA_AES_128_GCM_SHA256;'TLS1_RSA_AES_256_GCM_SHA384': \"TLS1_RSA_AES_256_GCM_SHA384;'TLS1_ECDHE_RSA_AES_256_SHA384': \"TLS1_ECDHE_RSA_AES_256_SHA384;'TLS1_ECDHE_ECDSA_AES_256_SHA384': \"TLS1_ECDHE_ECDSA_AES_256_SHA384;",
                                "maxItems": "32",
                                "condition": "cipher",
                                "format": "enum",
                                "src-name": "cipher-wo-prio"
                            }
                        }
                    ],
                    "src-name": "cipher-without-prio-list"
                },
                "dh-param": {
                    "type": "dummy",
                    "description": "Specify Diffie Hellman Parameter",
                    "format": "dummy",
                    "src-name": "dh-param"
                },
                "dh-type": {
                    "type": "enum",
                    "condition": "dh-param",
                    "enum": [
                        "1024",
                        "1024-dsa",
                        "2048"
                    ],
                    "enumMap": [
                        {
                            "1024": "\"1024"
                        },
                        {
                            "1024-dsa": "\"1024-dsa"
                        },
                        {
                            "2048": "\"2048"
                        }
                    ],
                    "description": "'1024': \"1024;'1024-dsa': \"1024-dsa;'2048': \"2048;",
                    "format": "enum",
                    "src-name": "dh-type"
                },
                "ec-name": {
                    "type": "dummy",
                    "description": "Specify Elliptic Curve Name",
                    "format": "dummy",
                    "src-name": "ec-name"
                },
                "ec-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "ec": {
                                "type": "enum",
                                "multi-field-key": true,
                                "condition": "ec-name",
                                "enum": [
                                    "secp256r1",
                                    "secp384r1"
                                ],
                                "enumMap": [
                                    {
                                        "secp256r1": "\"X9_62_prime256v1"
                                    },
                                    {
                                        "secp384r1": "\"secp384r1"
                                    }
                                ],
                                "description": "'secp256r1': \"X9_62_prime256v1;'secp384r1': \"secp384r1;",
                                "maxItems": "2",
                                "format": "enum",
                                "src-name": "ec"
                            }
                        }
                    ],
                    "src-name": "ec-list"
                },
                "enable-tls-alert-logging": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable TLS alert logging",
                    "src-name": "enable-tls-alert-logging"
                },
                "alert-type": {
                    "type": "string",
                    "enum": [
                        "fatal"
                    ],
                    "enumMap": [
                        {
                            "fatal": "\"Log fatal alerts"
                        }
                    ],
                    "description": "'fatal': \"Log fatal alerts;",
                    "condition": "enable-tls-alert-logging",
                    "format": "enum",
                    "src-name": "alert-type"
                },
                "close-notify": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send close notification when terminate connection",
                    "src-name": "close-notify"
                },
                "forward-proxy-enable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable SSL forward proxy",
                    "feat-license": "ssli",
                    "src-name": "forward-proxy-enable"
                },
                "session-ticket-enable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable server side session ticket support",
                    "src-name": "session-ticket-enable"
                },
                "version": {
                    "type": "number",
                    "minimum": "30",
                    "maximum": "33",
                    "description": "TLS/SSL version, default is the highest number supported (TLS/SSL version: 30-SSLv3.0, 31-TLSv1.0, 32-TLSv1.1 and 33-TLSv1.2)",
                    "default": "33",
                    "format": "number",
                    "src-name": "version"
                },
                "dgversion": {
                    "type": "number",
                    "minimum": "30",
                    "maximum": "33",
                    "condition": "version",
                    "description": "Lower TLS/SSL version can be downgraded",
                    "default": "31",
                    "format": "number",
                    "src-name": "dgversion"
                },
                "server-certificate-error": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Specify actions for server certificate errors. Disallow error by default",
                    "properties": [
                        {
                            "error-type": {
                                "type": "enum",
                                "multi-field-key": true,
                                "maxItems": "4",
                                "condition": "server-certificate-error",
                                "enum": [
                                    "email",
                                    "ignore",
                                    "logging",
                                    "trap"
                                ],
                                "enumMap": [
                                    {
                                        "email": "\"Notify the error via email"
                                    },
                                    {
                                        "ignore": "\"Ignore the error, which mean the connection can continue"
                                    },
                                    {
                                        "logging": "\"Log the error"
                                    },
                                    {
                                        "trap": "\"Notify the error by SNMP trap"
                                    }
                                ],
                                "description": "'email': \"Notify the error via email;'ignore': \"Ignore the error, which mean the connection can continue;'logging': \"Log the error;'trap': \"Notify the error by SNMP trap;",
                                "format": "enum",
                                "src-name": "error-type"
                            }
                        }
                    ],
                    "src-name": "server-certificate-error"
                },
                "key": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "245",
                    "description": "Client private-key (Key Name)",
                    "format": "string",
                    "src-name": "key"
                },
                "pass-phrase": {
                    "type": "dummy",
                    "condition": "key",
                    "description": "Password Phrase",
                    "format": "dummy",
                    "src-name": "pass-phrase"
                },
                "passphrase": {
                    "type": "string",
                    "format": "password",
                    "condition": "pass-phrase",
                    "description": "Password Phrase",
                    "src-name": "passphrase"
                },
                "encrypted": {
                    "type": "encrypted",
                    "format": "encrypted",
                    "condition": "pass-phrase",
                    "description": "Do NOT use this option manually. (This is an A10 reserved keyword.) (The ENCRYPTED password string)",
                    "src-name": "encrypted"
                },
                "ocsp-stapling": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable ocsp-stapling support",
                    "src-name": "ocsp-stapling"
                },
                "use-client-sni": {
                    "type": "number",
                    "format": "flag",
                    "description": "use client SNI",
                    "src-name": "use-client-sni"
                },
                "renegotiation-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable SSL renegotiation",
                    "src-name": "renegotiation-disable"
                },
                "session-cache-size": {
                    "type": "number",
                    "minimum": "0",
                    "maximum": "128",
                    "description": "Session Cache Size (Specify 0 to disable Session ID reuse.)",
                    "format": "number",
                    "src-name": "session-cache-size"
                },
                "session-cache-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "7200",
                    "description": "Session Cache Timeout (Timeout value, in seconds)",
                    "format": "number",
                    "src-name": "session-cache-timeout"
                },
                "template": {
                    "type": "dummy",
                    "description": "Template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "cipher-template": {
                    "type": "string",
                    "format": "name",
                    "m-exclusion": "cipher-wo-prio",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "alias": "cipher-template",
                    "obj-lineage-full": "slb.template.cipher",
                    "$ref": "/axapi/v3/slb/template/cipher",
                    "description": "Cipher Template (Cipher Config Name)",
                    "src-name": "cipher"
                }
            },
            "type": "object"
        },
        "sip-list": {
            "obj-name": "sip",
            "obj-help": "SIP Template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "sip",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.sip",
            "axapi": "/axapi/v3/slb/template/sip/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "SIP Template Name",
                    "src-name": "name"
                },
                "alg-source-nat": {
                    "type": "number",
                    "format": "flag",
                    "description": "Translate source IP to NAT IP in SIP message when source NAT is used",
                    "src-name": "alg-source-nat"
                },
                "alg-dest-nat": {
                    "type": "number",
                    "format": "flag",
                    "description": "Translate VIP to real server IP in SIP message when destination NAT is used",
                    "src-name": "alg-dest-nat"
                },
                "call-id-persist-disable": {
                    "type": "number",
                    "format": "flag",
                    "description": "Disable call-ID persistence",
                    "src-name": "call-id-persist-disable"
                },
                "client-keep-alive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Respond client keep-alive packet directly instead of forwarding to server",
                    "src-name": "client-keep-alive"
                },
                "pstn-gw": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "configure pstn gw host name for tel: uri translate to sip: uri (Hostname String, default is \"pstn\")",
                    "default": "\"pstn\"",
                    "src-name": "pstn-gw"
                },
                "client-request-header": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Modify the toppest header from client request",
                    "maxItems": "8",
                    "properties": [
                        {
                            "client-request-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "client-request-header",
                                "description": "Erase a SIP header (Header Name)",
                                "alias": "client-request-header-erase",
                                "src-name": "erase"
                            }
                        },
                        {
                            "client-request-erase-all": {
                                "type": "number",
                                "format": "flag",
                                "condition": "client-request-header-erase",
                                "description": "Erase all headers",
                                "alias": "client-request-erase-all",
                                "src-name": "all"
                            }
                        },
                        {
                            "client-request-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "condition": "client-request-header",
                                "description": "Insert a SIP header (Header Content (Format: \"name: value\"))",
                                "alias": "client-request-header-insert",
                                "src-name": "insert"
                            }
                        },
                        {
                            "insert-condition-client-request": {
                                "type": "string",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "client-request-header-insert",
                                "alias": "insert-condition-client-request",
                                "format": "enum",
                                "src-name": "insert-condition"
                            }
                        }
                    ],
                    "src-name": "client-request-header"
                },
                "client-response-header": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Modify the toppest header from client response",
                    "maxItems": "8",
                    "properties": [
                        {
                            "client-response-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "client-response-header",
                                "description": "Erase a SIP header (Header Name)",
                                "alias": "client-response-header-erase",
                                "src-name": "erase"
                            }
                        },
                        {
                            "client-response-erase-all": {
                                "type": "number",
                                "format": "flag",
                                "condition": "client-response-header-erase",
                                "description": "Erase all headers",
                                "alias": "client-response-erase-all",
                                "src-name": "all"
                            }
                        },
                        {
                            "client-response-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "condition": "client-response-header",
                                "description": "Insert a SIP header (Header Content (Format: \"name: value\"))",
                                "alias": "client-response-header-insert",
                                "src-name": "insert"
                            }
                        },
                        {
                            "insert-condition-client-response": {
                                "type": "string",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "client-response-header-insert",
                                "alias": "insert-condition-client-response",
                                "format": "enum",
                                "src-name": "insert-condition"
                            }
                        }
                    ],
                    "src-name": "client-response-header"
                },
                "exclude-translation": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Exclude all translations in SIP message",
                    "maxItems": "6",
                    "properties": [
                        {
                            "translation-value": {
                                "type": "string",
                                "condition": "exclude-translation",
                                "multi-field-key": true,
                                "enum": [
                                    "start-line",
                                    "header",
                                    "body"
                                ],
                                "enumMap": [
                                    {
                                        "start-line": "\"SIP request line or status line"
                                    },
                                    {
                                        "header": "\"SIP message headers"
                                    },
                                    {
                                        "body": "\"SIP message body"
                                    }
                                ],
                                "description": "'start-line': \"SIP request line or status line;'header': \"SIP message headers;'body': \"SIP message body;",
                                "format": "enum",
                                "src-name": "translation-value"
                            }
                        },
                        {
                            "header-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "disabled": "start-line,body",
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "translation-value",
                                "description": "SIP header name",
                                "src-name": "header-string"
                            }
                        }
                    ],
                    "src-name": "exclude-translation"
                },
                "failed-client-selection": {
                    "type": "number",
                    "format": "flag",
                    "description": "Define action when select client fail",
                    "src-name": "failed-client-selection"
                },
                "drop-when-client-fail": {
                    "type": "number",
                    "format": "flag",
                    "condition": "failed-client-selection",
                    "description": "Drop current SIP message when select client fail",
                    "alias": "drop-when-client-fail",
                    "src-name": "drop"
                },
                "failed-client-selection-message": {
                    "type": "string",
                    "format": "string-rlx",
                    "m-exclusion": "drop-when-client-fail",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "failed-client-selection",
                    "description": "Send SIP message (includs status code) to server when select client fail(Format: 3 digits(1XX~6XX) space reason)",
                    "alias": "failed-client-selection-message",
                    "src-name": "message"
                },
                "failed-server-selection": {
                    "type": "number",
                    "format": "flag",
                    "description": "Define action when select server fail",
                    "src-name": "failed-server-selection"
                },
                "drop-when-server-fail": {
                    "type": "number",
                    "format": "flag",
                    "condition": "failed-server-selection",
                    "description": "Drop current SIP message when select server fail",
                    "alias": "drop-when-server-fail",
                    "src-name": "drop"
                },
                "failed-server-selection-message": {
                    "type": "string",
                    "format": "string-rlx",
                    "m-exclusion": "drop-when-server-fail",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "failed-server-selection",
                    "description": "Send SIP message (includs status code) to client when select server fail(Format: 3 digits(1XX~6XX) space reason)",
                    "alias": "failed-server-selection-message",
                    "src-name": "message"
                },
                "insert-client-ip": {
                    "type": "number",
                    "format": "flag",
                    "description": "Insert Client IP address into SIP header",
                    "src-name": "insert-client-ip"
                },
                "keep-server-ip-if-match-acl": {
                    "type": "number",
                    "format": "flag",
                    "description": "Use Real Server IP for addresses matching the ACL for a Call-Id",
                    "src-name": "keep-server-ip-if-match-acl"
                },
                "acl-id": {
                    "type": "number",
                    "minimum": "100",
                    "maximum": "199",
                    "description": "ACL id",
                    "condition": "keep-server-ip-if-match-acl",
                    "obj-lineage-full": "access-list.standard,access-list.extended",
                    "$ref": "/axapi/v3/access-list/standard,access-list/extended",
                    "format": "number",
                    "src-name": "acl-id"
                },
                "acl-name-key": {
                    "type": "dummy",
                    "description": "Access List name",
                    "condition": "keep-server-ip-if-match-acl",
                    "alias": "acl-name-key",
                    "format": "dummy",
                    "src-name": "name"
                },
                "acl-name-value": {
                    "type": "string",
                    "m-exclusion": "acl-id",
                    "minLength": "1",
                    "maxLength": "16",
                    "description": "IPv4 Access List Name",
                    "condition": "acl-name-key",
                    "obj-lineage-full": "ip.access-list",
                    "$ref": "/axapi/v3/ip/access-list",
                    "format": "string",
                    "src-name": "acl-name-value"
                },
                "registrar": {
                    "type": "dummy",
                    "description": "Registrar server configuration",
                    "format": "dummy",
                    "src-name": "registrar"
                },
                "service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "registrar",
                    "description": "service group name (Name)",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "src-name": "service-group"
                },
                "server-keep-alive": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send server keep-alive packet for every persist connection when enable conn-reuse",
                    "src-name": "server-keep-alive"
                },
                "interval": {
                    "type": "number",
                    "condition": "server-keep-alive",
                    "default": "30",
                    "minimum": "5",
                    "maximum": "300",
                    "description": "The interval of keep-alive packet for each persist connection (second)",
                    "format": "number",
                    "src-name": "interval"
                },
                "server-request-header": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Modify the toppest header from server request",
                    "maxItems": "8",
                    "properties": [
                        {
                            "server-request-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "server-request-header",
                                "description": "Erase a SIP header (Header Name)",
                                "alias": "server-request-header-erase",
                                "src-name": "erase"
                            }
                        },
                        {
                            "server-request-erase-all": {
                                "type": "number",
                                "format": "flag",
                                "condition": "server-request-header-erase",
                                "description": "Erase all headers",
                                "alias": "server-request-erase-all",
                                "src-name": "all"
                            }
                        },
                        {
                            "server-request-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "multi-field-key": true,
                                "condition": "server-request-header",
                                "description": "Insert a SIP header (Header Content (Format: \"name: value\"))",
                                "alias": "server-request-header-insert",
                                "src-name": "insert"
                            }
                        },
                        {
                            "insert-condition-server-request": {
                                "type": "string",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "server-request-header-insert",
                                "alias": "insert-condition-server-request",
                                "format": "enum",
                                "src-name": "insert-condition"
                            }
                        }
                    ],
                    "src-name": "server-request-header"
                },
                "server-response-header": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Modify the toppest header from server response",
                    "maxItems": "8",
                    "properties": [
                        {
                            "server-response-header-erase": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "63",
                                "condition": "server-response-header",
                                "description": "Erase a SIP header (Header Name)",
                                "alias": "server-response-header-erase",
                                "src-name": "erase"
                            }
                        },
                        {
                            "server-response-erase-all": {
                                "type": "number",
                                "format": "flag",
                                "condition": "server-response-header-erase",
                                "description": "Erase all headers",
                                "alias": "server-response-erase-all",
                                "src-name": "all"
                            }
                        },
                        {
                            "server-response-header-insert": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "multi-field-key": true,
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "server-response-header",
                                "description": "Insert a SIP header (Header Content (Format: \"name: value\"))",
                                "alias": "server-response-header-insert",
                                "src-name": "insert"
                            }
                        },
                        {
                            "insert-condition-server-response": {
                                "type": "string",
                                "enum": [
                                    "insert-if-not-exist",
                                    "insert-always"
                                ],
                                "enumMap": [
                                    {
                                        "insert-if-not-exist": "\"Only insert the header when it does not exist"
                                    },
                                    {
                                        "insert-always": "\"Always insert the header even when there is a header with the same name"
                                    }
                                ],
                                "description": "'insert-if-not-exist': \"Only insert the header when it does not exist;'insert-always': \"Always insert the header even when there is a header with the same name;",
                                "condition": "server-response-header-insert",
                                "alias": "insert-condition-server-response",
                                "format": "enum",
                                "src-name": "insert-condition"
                            }
                        }
                    ],
                    "src-name": "server-response-header"
                },
                "smp-call-id-rtp-session": {
                    "type": "number",
                    "format": "flag",
                    "description": "Create the across cpu call-id rtp session",
                    "src-name": "smp-call-id-rtp-session"
                },
                "server-selection-per-request": {
                    "type": "number",
                    "format": "flag",
                    "description": "Force server selection on every SIP request",
                    "src-name": "server-selection-per-request"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "250",
                    "description": "Time in minutes SIP timeout value (default 30 minutes) (in minutes)",
                    "default": "30",
                    "format": "number",
                    "src-name": "timeout"
                },
                "dialog-aware": {
                    "type": "number",
                    "format": "flag",
                    "description": "Permit system processes dialog session",
                    "src-name": "dialog-aware"
                }
            },
            "type": "object"
        },
        "smtp-list": {
            "obj-name": "smtp",
            "obj-help": "SMTP",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "smtp",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.smtp",
            "axapi": "/axapi/v3/slb/template/smtp/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "SMTP Template Name",
                    "src-name": "name"
                },
                "server-domain": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "31",
                    "description": "Config the domain of the email servers (Server's domain, default is \"mail-server-domain\")",
                    "default": "\"mail-server-domain\"",
                    "src-name": "server-domain"
                },
                "service-ready-msg": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Set SMTP service ready message (SMTP service ready message, default is \"ESMTP mail service ready\")",
                    "default": "\"ESMTP mail service ready\"",
                    "src-name": "service-ready-msg"
                },
                "starttls": {
                    "type": "dummy",
                    "description": "STARTTLS requiremen",
                    "format": "dummy",
                    "src-name": "starttls"
                },
                "client": {
                    "type": "dummy",
                    "condition": "starttls",
                    "description": "client side STARTTLS",
                    "format": "dummy",
                    "src-name": "client"
                },
                "server": {
                    "type": "dummy",
                    "condition": "starttls",
                    "description": "server side STARTTLS",
                    "format": "dummy",
                    "src-name": "server"
                },
                "client-starttls-type": {
                    "type": "string",
                    "enum": [
                        "optional",
                        "enforced"
                    ],
                    "enumMap": [
                        {
                            "optional": "\"STARTTLS is optional requirement"
                        },
                        {
                            "enforced": "\"Must issue STARTTLS command before mail transaction"
                        }
                    ],
                    "description": "STARTTLS requirement 'optional': \"STARTTLS is optional requirement;'enforced': \"Must issue STARTTLS command before mail transaction;",
                    "condition": "client",
                    "format": "enum",
                    "src-name": "client-starttls-type"
                },
                "server-starttls-type": {
                    "type": "string",
                    "enum": [
                        "optional",
                        "enforced"
                    ],
                    "enumMap": [
                        {
                            "optional": "\"STARTTLS is optional requirement"
                        },
                        {
                            "enforced": "\"Must issue STARTTLS command before mail transaction"
                        }
                    ],
                    "description": "STARTTLS requirement 'optional': \"STARTTLS is optional requirement;'enforced': \"Must issue STARTTLS command before mail transaction;",
                    "condition": "server",
                    "format": "enum",
                    "src-name": "server-starttls-type"
                },
                "command-disable": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Disable some SMTP commands for security reasons",
                    "properties": [
                        {
                            "disable-type": {
                                "type": "enum",
                                "multi-field-key": true,
                                "maxItems": "3",
                                "condition": "command-disable",
                                "enum": [
                                    "expn",
                                    "turn",
                                    "vrfy"
                                ],
                                "enumMap": [
                                    {
                                        "expn": "\"Disable SMTP EXPN commands"
                                    },
                                    {
                                        "turn": "\"Disable SMTP TURN commands"
                                    },
                                    {
                                        "vrfy": "\"Disable SMTP VRFY commands"
                                    }
                                ],
                                "description": "'expn': \"Disable SMTP EXPN commands;'turn': \"Disable SMTP TURN commands;'vrfy': \"Disable SMTP VRFY commands;",
                                "format": "enum",
                                "src-name": "disable-type"
                            }
                        }
                    ],
                    "src-name": "command-disable"
                },
                "client-domain-switching": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "description": "Use client domain to select email server",
                    "properties": [
                        {
                            "switching-type": {
                                "type": "string",
                                "condition": "client-domain-switching",
                                "enum": [
                                    "contains",
                                    "ends-with",
                                    "starts-with"
                                ],
                                "enumMap": [
                                    {
                                        "contains": "\"Specify domain name string if domain contains another string"
                                    },
                                    {
                                        "ends-with": "\"Specify domain name string if domain ends with another string"
                                    },
                                    {
                                        "starts-with": "\"Specify domain string if domain starts with another string"
                                    }
                                ],
                                "description": "'contains': \"Specify domain name string if domain contains another string;'ends-with': \"Specify domain name string if domain ends with another string;'starts-with': \"Specify domain string if domain starts with another string;",
                                "maxItems": "16",
                                "multi-field-key": true,
                                "format": "enum",
                                "src-name": "switching-type"
                            }
                        },
                        {
                            "match-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "31",
                                "condition": "switching-type",
                                "multi-field-key": true,
                                "description": "Domain name string",
                                "src-name": "match-string"
                            }
                        },
                        {
                            "service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "match-string",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "description": "Select service group (Service group name)",
                                "maxItems": "16",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "client-domain-switching"
                }
            },
            "type": "object"
        },
        "tcp-list": {
            "obj-name": "tcp",
            "obj-help": "L4 TCP switch config",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "l4 tcp",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.tcp",
            "axapi": "/axapi/v3/slb/template/tcp/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Fast TCP Template Name",
                    "src-name": "name"
                },
                "idle-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2097151",
                    "description": "Idle Timeout value (Interval of 60 seconds), default 120 seconds (idle timeout in second, default 120)",
                    "default": "120",
                    "round-off": "(60,30,60)",
                    "format": "number",
                    "src-name": "idle-timeout"
                },
                "half-open-idle-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "description": "TCP Half Open Idle Timeout (sec), default off (half open idle timeout in second, default off)",
                    "format": "number",
                    "src-name": "half-open-idle-timeout"
                },
                "half-close-idle-timeout": {
                    "type": "number",
                    "minimum": "60",
                    "maximum": "120",
                    "description": "TCP Half Close Idle Timeout (sec), default off (half close idle timeout in second, default off)",
                    "format": "number",
                    "src-name": "half-close-idle-timeout"
                },
                "initial-window-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "description": "Set the initial window size (number)",
                    "format": "number",
                    "src-name": "initial-window-size"
                },
                "force-delete-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "description": "The maximum time that a session can stay in the system before being delete (number (second))",
                    "format": "number",
                    "src-name": "force-delete-timeout"
                },
                "force-delete-timeout-100ms": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "m-exclusion": "force-delete-timeout",
                    "link-next-fwd": "alive-if-active",
                    "description": "The maximum time that a session can stay in the system before being delete (number in 100ms)",
                    "format": "number",
                    "src-name": "force-delete-timeout-100ms"
                },
                "alive-if-active": {
                    "type": "number",
                    "format": "flag",
                    "condition": "force-delete-timeout",
                    "description": "keep connection alive if active traffic",
                    "src-name": "alive-if-active"
                },
                "qos": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "63",
                    "description": "QOS level (number)",
                    "format": "number",
                    "src-name": "qos"
                },
                "insert-client-ip": {
                    "type": "number",
                    "format": "flag",
                    "default": "0",
                    "description": "Insert client ip into TCP option",
                    "src-name": "insert-client-ip"
                },
                "lan-fast-ack": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable fast TCP ack on LAN",
                    "src-name": "lan-fast-ack"
                },
                "reset-fwd": {
                    "type": "number",
                    "format": "flag",
                    "description": "send reset to server if error happens",
                    "src-name": "reset-fwd"
                },
                "reset-rev": {
                    "type": "number",
                    "format": "flag",
                    "description": "send reset to client if error happens",
                    "src-name": "reset-rev"
                },
                "disable": {
                    "type": "number",
                    "format": "flag",
                    "condition": "reset-rev",
                    "description": "send reset to client when server is disabled",
                    "src-name": "disable"
                },
                "down": {
                    "type": "number",
                    "format": "flag",
                    "condition": "reset-rev",
                    "m-exclusion": "disable",
                    "description": "send reset to client when server is down",
                    "src-name": "down"
                },
                "del-session-on-server-down": {
                    "type": "number",
                    "format": "flag",
                    "description": "Delete session if the server/port goes down (either disabled/hm down)",
                    "src-name": "del-session-on-server-down"
                }
            },
            "type": "object"
        },
        "tcp-proxy-list": {
            "obj-name": "tcp-proxy",
            "obj-help": "TCP Proxy",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "tcp proxy",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.tcp-proxy",
            "axapi": "/axapi/v3/slb/template/tcp-proxy/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "TCP Proxy Template Name",
                    "src-name": "name"
                },
                "ack-aggressiveness": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ],
                    "enumMap": [
                        {
                            "low": "\"Delayed ACK"
                        },
                        {
                            "medium": "\"Delayed ACK, with ACK on each packet with PUSH flag"
                        },
                        {
                            "high": "\"ACK on each packet"
                        }
                    ],
                    "description": "The level of aggressiveness when generating ACKs 'low': \"Delayed ACK;'medium': \"Delayed ACK, with ACK on each packet with PUSH flag;'high': \"ACK on each packet;",
                    "default": "low",
                    "format": "enum",
                    "src-name": "ack-aggressiveness"
                },
                "backend-wscale": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "14",
                    "description": "The TCP window scale used for the server side, default is off (number)",
                    "format": "number",
                    "src-name": "backend-wscale"
                },
                "dynamic-buffer-allocation": {
                    "type": "number",
                    "format": "flag",
                    "description": "Optimally adjust the transmit and receive buffer sizes of TCP proxy while keeping their sum constant",
                    "src-name": "dynamic-buffer-allocation"
                },
                "fin-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "default": "5",
                    "description": "FIN timeout (sec), default is 5 (number)",
                    "format": "number",
                    "src-name": "fin-timeout"
                },
                "force-delete-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "description": "The maximum time that a session can stay in the system before being deleted, default is off (number (second))",
                    "format": "number",
                    "src-name": "force-delete-timeout"
                },
                "force-delete-timeout-100ms": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "m-exclusion": "force-delete-timeout",
                    "link-next-fwd": "alive-if-active",
                    "description": "The maximum time that a session can stay in the system before being deleted, default is off (number in 100ms)",
                    "format": "number",
                    "src-name": "force-delete-timeout-100ms"
                },
                "alive-if-active": {
                    "type": "number",
                    "format": "flag",
                    "condition": "force-delete-timeout",
                    "description": "keep connection alive if active traffic",
                    "src-name": "alive-if-active"
                },
                "idle-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2097151",
                    "default": "600",
                    "description": "Idle Timeout (Interval of 60 seconds), default is 600 (idle timeout in second, default 600)",
                    "round-off": "(60,30,60)",
                    "format": "number",
                    "src-name": "idle-timeout"
                },
                "server-down-action": {
                    "type": "string",
                    "enum": [
                        "FIN",
                        "RST"
                    ],
                    "enumMap": [
                        {
                            "FIN": "\"FIN Connection"
                        },
                        {
                            "RST": "\"Reset Connection"
                        }
                    ],
                    "description": "Server down connection delete action 'FIN': \"FIN Connection;'RST': \"Reset Connection;",
                    "format": "enum",
                    "src-name": "server-down-action"
                },
                "half-open-idle-timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "description": "TCP Half Open Idle Timeout (sec), default is off (number)",
                    "format": "number",
                    "src-name": "half-open-idle-timeout"
                },
                "half-close-idle-timeout": {
                    "type": "number",
                    "minimum": "60",
                    "maximum": "120",
                    "description": "TCP Half Close Idle Timeout (sec), default is off (number)",
                    "format": "number",
                    "src-name": "half-close-idle-timeout"
                },
                "init-cwnd": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "15",
                    "description": "The initial congestion control window size (packets), default is 10 (number)",
                    "default": "10",
                    "format": "number",
                    "src-name": "init-cwnd"
                },
                "initial-window-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "description": "Set the initial window size, default is off (number)",
                    "format": "number",
                    "src-name": "initial-window-size"
                },
                "keepalive-interval": {
                    "type": "number",
                    "minimum": "60",
                    "maximum": "12000",
                    "description": "Interval between keepalive probes (sec), default is off (number)",
                    "format": "number",
                    "src-name": "keepalive-interval"
                },
                "keepalive-probes": {
                    "type": "number",
                    "minimum": "2",
                    "maximum": "10",
                    "description": "Number of keepalive probes sent, default is off (number)",
                    "format": "number",
                    "src-name": "keepalive-probes"
                },
                "mss": {
                    "type": "number",
                    "minimum": "128",
                    "maximum": "1460",
                    "description": "Responding MSS to use if client MSS is large, default is off (number)",
                    "default": "1460",
                    "format": "number",
                    "src-name": "mss"
                },
                "nagle": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable Nagle Algorithm",
                    "src-name": "nagle"
                },
                "qos": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "63",
                    "description": "QOS level (number)",
                    "format": "number",
                    "src-name": "qos"
                },
                "receive-buffer": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2147483647",
                    "description": "TCP Receive Buffer (default 200k) (number)",
                    "default": "200000",
                    "format": "number",
                    "src-name": "receive-buffer"
                },
                "reno": {
                    "type": "number",
                    "format": "flag",
                    "description": "Enable Reno Congestion Control Algorithm",
                    "src-name": "reno"
                },
                "transmit-buffer": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "2147483647",
                    "description": "TCP Transmit Buffer (default 200k) (number)",
                    "default": "200000",
                    "format": "number",
                    "src-name": "transmit-buffer"
                },
                "reset-fwd": {
                    "type": "number",
                    "format": "flag",
                    "description": "send reset to server if error happens",
                    "src-name": "reset-fwd"
                },
                "reset-rev": {
                    "type": "number",
                    "format": "flag",
                    "description": "send reset to client if error happens",
                    "src-name": "reset-rev"
                },
                "disable": {
                    "type": "number",
                    "format": "flag",
                    "condition": "reset-rev",
                    "description": "send reset to client when server is disabled",
                    "src-name": "disable"
                },
                "down": {
                    "type": "number",
                    "format": "flag",
                    "condition": "reset-rev",
                    "m-exclusion": "disable",
                    "description": "send reset to client when server is down",
                    "src-name": "down"
                },
                "del-session-on-server-down": {
                    "type": "number",
                    "format": "flag",
                    "description": "Delete session if the server/port goes down (either disabled/hm down)",
                    "src-name": "del-session-on-server-down"
                },
                "retransmit-retries": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "20",
                    "default": "5",
                    "description": "Number of Retries for Retransmit, default is 5 (number)",
                    "format": "number",
                    "src-name": "retransmit-retries"
                },
                "insert-client-ip": {
                    "type": "number",
                    "format": "flag",
                    "description": "Insert client ip into TCP option",
                    "default": "0",
                    "src-name": "insert-client-ip"
                },
                "syn-retries": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "20",
                    "default": "5",
                    "description": "SYN Retry Numbers, default is 5 (number)",
                    "format": "number",
                    "src-name": "syn-retries"
                },
                "timewait": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "60",
                    "default": "5",
                    "description": "Timewait Threshold (sec), default 5 (number)",
                    "format": "number",
                    "src-name": "timewait"
                },
                "disable-tcp-timestamps": {
                    "type": "number",
                    "format": "flag",
                    "hide-help": true,
                    "description": "disable TCP Timestamps Option",
                    "src-name": "disable-tcp-timestamps"
                },
                "disable-window-scale": {
                    "type": "number",
                    "format": "flag",
                    "hide-help": true,
                    "description": "disable TCP Window-Scale Option",
                    "src-name": "disable-window-scale"
                },
                "disable-sack": {
                    "type": "number",
                    "format": "flag",
                    "hide-help": true,
                    "description": "disable Selective Ack Option",
                    "src-name": "disable-sack"
                }
            },
            "type": "object"
        },
        "udp-list": {
            "obj-name": "udp",
            "obj-help": "L4 UDP switch config",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "l4 udp",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.udp",
            "axapi": "/axapi/v3/slb/template/udp/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Fast UDP Template Name",
                    "src-name": "name"
                },
                "idle-timeout": {
                    "type": "number",
                    "default": "120",
                    "minimum": "1",
                    "maximum": "2097151",
                    "description": "Idle Timeout value (Interval of 60 seconds), default 120 seconds (idle timeout in second, default 120)",
                    "round-off": "(60,30,60)",
                    "format": "number",
                    "src-name": "idle-timeout"
                },
                "qos": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "63",
                    "description": "QOS level (number)",
                    "format": "number",
                    "src-name": "qos"
                },
                "stateless-conn-timeout": {
                    "type": "number",
                    "minimum": "5",
                    "maximum": "120",
                    "description": "Stateless Current Connection Timeout value (5 - 120 seconds) (idle timeout in second, default 120)",
                    "default": "120",
                    "format": "number",
                    "src-name": "stateless-conn-timeout"
                },
                "aging": {
                    "type": "dummy",
                    "description": "Aging Control",
                    "format": "dummy",
                    "src-name": "aging"
                },
                "immediate": {
                    "type": "number",
                    "format": "flag",
                    "condition": "aging",
                    "description": "Immediate Removal after Transaction",
                    "src-name": "immediate"
                },
                "short": {
                    "type": "number",
                    "format": "flag",
                    "condition": "aging",
                    "m-exclusion": "immediate",
                    "description": "Short lived session",
                    "src-name": "short"
                },
                "age": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "31",
                    "condition": "short",
                    "description": "age",
                    "format": "number",
                    "src-name": "age"
                },
                "re-select-if-server-down": {
                    "type": "number",
                    "format": "flag",
                    "description": "re-select another server if service port is down",
                    "src-name": "re-select-if-server-down"
                }
            },
            "type": "object"
        },
        "virtual-port-list": {
            "obj-name": "virtual-port",
            "obj-help": "Virtual port template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "vport",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.virtual-port",
            "axapi": "/axapi/v3/slb/template/virtual-port/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Virtual port template name",
                    "src-name": "name"
                },
                "aflow": {
                    "type": "number",
                    "format": "flag",
                    "description": "Use aFlow to eliminate the traffic surge",
                    "src-name": "aflow"
                },
                "allow-syn-otherflags": {
                    "type": "number",
                    "format": "flag",
                    "description": "Allow initial SYN packet with other flags",
                    "src-name": "allow-syn-otherflags"
                },
                "conn-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "8000000",
                    "default": "8000000",
                    "description": "Connection limit (Connection limit)",
                    "format": "number",
                    "src-name": "conn-limit"
                },
                "conn-limit-reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "link-next-fwd": "conn-limit-no-logging",
                    "description": "Send client reset when connection over limit",
                    "alias": "conn-limit-reset",
                    "src-name": "reset"
                },
                "conn-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-limit-no-logging",
                    "src-name": "no-logging"
                },
                "conn-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Connection rate limit (Connection rate limit)",
                    "format": "number",
                    "src-name": "conn-rate-limit"
                },
                "rate-interval": {
                    "type": "string",
                    "alias": "rate-interval",
                    "condition": "conn-rate-limit",
                    "description": "'100ms': \"Use 100 ms as sampling interval;'second': \"Use 1 second as sampling interval;",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Use 100 ms as sampling interval"
                        },
                        {
                            "second": "\"Use 1 second as sampling interval"
                        }
                    ],
                    "link-next-fwd": "conn-rate-limit-reset",
                    "default": "second",
                    "format": "enum",
                    "src-name": "per"
                },
                "conn-rate-limit-reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "link-next-fwd": "conn-rate-limit-no-logging",
                    "description": "Send client reset when connection rate over limit",
                    "alias": "conn-rate-limit-reset",
                    "src-name": "reset"
                },
                "conn-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-rate-limit-no-logging",
                    "src-name": "no-logging"
                },
                "pkt-rate-limit": {
                    "type": "dummy",
                    "description": "Source port packet rate limit",
                    "format": "dummy",
                    "src-name": "pkt-rate-limit"
                },
                "rate": {
                    "type": "number",
                    "condition": "pkt-rate-type",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Source IP and port rate limit (Packet rate limit)",
                    "format": "number",
                    "src-name": "rate"
                },
                "pkt-rate-interval": {
                    "type": "string",
                    "condition": "rate",
                    "alias": "pkt-rate-interval",
                    "description": "'100ms': \"Source IP and port rate limit per 100ms;'second': \"Source IP and port rate limit per second (default);",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Source IP and port rate limit per 100ms"
                        },
                        {
                            "second": "\"Source IP and port rate limit per second (default)"
                        }
                    ],
                    "default": "second",
                    "link-next-fwd": "pkt-rate-limit-reset",
                    "format": "enum",
                    "src-name": "per"
                },
                "pkt-rate-limit-reset": {
                    "type": "number",
                    "condition": "rate",
                    "minimum": "0",
                    "maximum": "1048575",
                    "default": "0",
                    "description": "send client-side reset (reset after packet limit)",
                    "alias": "pkt-rate-limit-reset",
                    "link-next-fwd": "log-options",
                    "format": "number",
                    "src-name": "reset"
                },
                "log-options": {
                    "type": "string",
                    "condition": "rate",
                    "enum": [
                        "no-logging",
                        "no-repeat-logging"
                    ],
                    "enumMap": [
                        {
                            "no-logging": "\"Do not log over limit event"
                        },
                        {
                            "no-repeat-logging": "\"log once for over limit event. Default is log once per minute"
                        }
                    ],
                    "description": "'no-logging': \"Do not log over limit event;'no-repeat-logging': \"log once for over limit event. Default is log once per minute;",
                    "link-next-fwd": "when-rr-enable",
                    "format": "enum",
                    "src-name": "log-options"
                },
                "when-rr-enable": {
                    "type": "number",
                    "format": "flag",
                    "condition": "rate",
                    "link-next-rev": "log-options",
                    "description": "Only do rate limit if CPU RR triggered",
                    "src-name": "when-rr-enable"
                },
                "allow-vip-to-rport-mapping": {
                    "type": "number",
                    "format": "flag",
                    "description": "Allow mapping of VIP to real port",
                    "src-name": "allow-vip-to-rport-mapping"
                },
                "dscp": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "63",
                    "description": "Differentiated Services Code Point (DSCP to Real Server IP Mapping Value)",
                    "format": "number",
                    "src-name": "dscp"
                },
                "drop-unknown-conn": {
                    "type": "number",
                    "format": "flag",
                    "description": "Drop conection if receives TCP packet without SYN or RST flag and it does not belong to any existing connections",
                    "src-name": "drop-unknown-conn"
                },
                "reset-unknown-conn": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send reset back if receives TCP packet without SYN or RST flag and it does not belong to any existing connections",
                    "src-name": "reset-unknown-conn"
                },
                "reset-l7-on-failover": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send reset to L7 client and server connection upon a failover",
                    "src-name": "reset-l7-on-failover"
                },
                "ignore-tcp-msl": {
                    "type": "number",
                    "format": "flag",
                    "description": "reclaim TCP resource immediately without MSL",
                    "src-name": "ignore-tcp-msl"
                },
                "snat-msl": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1800",
                    "description": "Source NAT MSL (Source NAT MSL value)",
                    "format": "number",
                    "src-name": "snat-msl"
                },
                "snat-port-preserve": {
                    "type": "number",
                    "format": "flag",
                    "description": "Source NAT Port Preservation",
                    "src-name": "snat-port-preserve"
                },
                "non-syn-initiation": {
                    "type": "number",
                    "format": "flag",
                    "description": "Allow initial TCP packet to be non-SYN",
                    "src-name": "non-syn-initiation"
                }
            },
            "type": "object"
        },
        "virtual-server-list": {
            "obj-name": "virtual-server",
            "obj-help": "Virtual server template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "vserver",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.virtual-server",
            "axapi": "/axapi/v3/slb/template/virtual-server/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "default": "default",
                    "description": "Virtual server template name",
                    "src-name": "name"
                },
                "conn-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "8000000",
                    "default": "8000000",
                    "description": "Connection limit (Connection limit)",
                    "format": "number",
                    "src-name": "conn-limit"
                },
                "conn-limit-reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "link-next-fwd": "conn-limit-no-logging",
                    "alias": "conn-limit-reset",
                    "description": "Send client reset when connection over limit",
                    "src-name": "reset"
                },
                "conn-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-limit-no-logging",
                    "src-name": "no-logging"
                },
                "conn-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "1048575",
                    "description": "Connection rate limit (Connection rate limit)",
                    "format": "number",
                    "src-name": "conn-rate-limit"
                },
                "rate-interval": {
                    "type": "string",
                    "alias": "rate-interval",
                    "condition": "conn-rate-limit",
                    "description": "'100ms': \"Use 100 ms as sampling interval;'second': \"Use 1 second as sampling interval;",
                    "enum": [
                        "100ms",
                        "second"
                    ],
                    "enumMap": [
                        {
                            "100ms": "\"Use 100 ms as sampling interval"
                        },
                        {
                            "second": "\"Use 1 second as sampling interval"
                        }
                    ],
                    "link-next-fwd": "conn-rate-limit-reset",
                    "default": "second",
                    "format": "enum",
                    "src-name": "per"
                },
                "conn-rate-limit-reset": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "link-next-fwd": "conn-rate-limit-no-logging",
                    "description": "Send client reset when connection rate over limit",
                    "alias": "conn-rate-limit-reset",
                    "src-name": "reset"
                },
                "conn-rate-limit-no-logging": {
                    "type": "number",
                    "format": "flag",
                    "condition": "conn-rate-limit",
                    "description": "Do not log connection over limit event",
                    "alias": "conn-rate-limit-no-logging",
                    "src-name": "no-logging"
                },
                "icmp-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "description": "ICMP rate limit (Normal rate limit. If exceeds this limit, drop the ICMP packet that goes over the limit)",
                    "format": "number",
                    "src-name": "icmp-rate-limit"
                },
                "icmp-lockup": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "condition": "icmp-rate-limit",
                    "description": "Enter lockup state when ICMP rate exceeds lockup rate limit (Maximum rate limit. If exceeds this limit, drop all ICMP packet for a time period)",
                    "alias": "icmp-lockup",
                    "format": "number",
                    "src-name": "lockup"
                },
                "icmp-lockup-period": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16383",
                    "condition": "icmp-lockup",
                    "description": "Lockup period (second)",
                    "alias": "icmp-lockup-period",
                    "format": "number",
                    "src-name": "lockup-period"
                },
                "icmpv6-rate-limit": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "description": "ICMPv6 rate limit (Normal rate limit. If exceeds this limit, drop the ICMP packet that goes over the limit)",
                    "format": "number",
                    "src-name": "icmpv6-rate-limit"
                },
                "icmpv6-lockup": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65535",
                    "condition": "icmpv6-rate-limit",
                    "description": "Enter lockup state when ICMP rate exceeds lockup rate limit (Maximum rate limit. If exceeds this limit, drop all ICMP packet for a time period)",
                    "alias": "icmpv6-lockup",
                    "format": "number",
                    "src-name": "lockup"
                },
                "icmpv6-lockup-period": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "16383",
                    "condition": "icmpv6-lockup",
                    "description": "Lockup period (second)",
                    "alias": "icmpv6-lockup-period",
                    "format": "number",
                    "src-name": "lockup-period"
                },
                "subnet-gratuitous-arp": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send gratuitous ARP for every IP in the subnet virtual server",
                    "src-name": "subnet-gratuitous-arp"
                }
            },
            "type": "object"
        },
        "dblb-list": {
            "obj-name": "dblb",
            "obj-help": "DBLB template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "dblb",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.dblb",
            "axapi": "/axapi/v3/slb/template/dblb/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "DBLB template name",
                    "src-name": "name"
                },
                "class-list": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Specify user/password string class list (Class list name)",
                    "format": "string",
                    "src-name": "class-list"
                },
                "server-version": {
                    "type": "string",
                    "enum": [
                        "MSSQL2008",
                        "MSSQL2012",
                        "MySQL"
                    ],
                    "enumMap": [
                        {
                            "MSSQL2008": "\"MSSQL server 2008 or 2008 R2"
                        },
                        {
                            "MSSQL2012": "\"MSSQL server 2012"
                        },
                        {
                            "MySQL": "\"MySQL server (any version)"
                        }
                    ],
                    "description": "Specify server version 'MSSQL2008': \"MSSQL server 2008 or 2008 R2;'MSSQL2012': \"MSSQL server 2012;'MySQL': \"MySQL server (any version);",
                    "format": "enum",
                    "src-name": "server-version"
                },
                "calc-sha1": {
                    "obj-name": "calc-sha1",
                    "obj-help": "Calculate sha1 value of a cleartext password",
                    "obj-lineage": "cmroot.slb.template.dblb",
                    "obj-head-node-options": "<operation>",
                    "obj-occurences": "single",
                    "obj-indexing": "none",
                    "obj-module-dont-display-value-in-prompt": true,
                    "obj-vcs-device-spec": true,
                    "obj-lineage-full": "slb.template.dblb.calc-sha1",
                    "axapi": "/axapi/v3/slb/template/dblb/{name}/calc-sha1",
                    "properties": {
                        "sha1-value": {
                            "type": "string",
                            "minLength": "1",
                            "maxLength": "63",
                            "description": "Cleartext password",
                            "format": "string",
                            "src-name": "sha1-value"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "external-service-list": {
            "obj-name": "external-service",
            "obj-help": "External service template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "external-service",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.external-service",
            "axapi": "/axapi/v3/slb/template/external-service/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "External Service Template Name",
                    "src-name": "name"
                },
                "bypass-ip-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "bypass-ip": {
                                "type": "ipv4-address",
                                "multi-field-key": true,
                                "description": "ip address to bypass external service (IP address)",
                                "maxItems": "20",
                                "format": "ipv4-address",
                                "src-name": "bypass-ip"
                            }
                        },
                        {
                            "mask": {
                                "type": "ipv4-netmask",
                                "multi-field-key": true,
                                "condition": "bypass-ip",
                                "description": "IP prefix mask (IP prefix mask)",
                                "format": "ipv4-netmask",
                                "src-name": "mask"
                            }
                        }
                    ],
                    "src-name": "bypass-ip-cfg"
                },
                "request-header-forward-list": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "request-header-forward": {
                                "type": "string",
                                "format": "string-rlx",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "maxItems": "16",
                                "case-insensitive": true,
                                "description": "Request header to be forwarded to external service (Header Name)",
                                "src-name": "request-header-forward"
                            }
                        }
                    ],
                    "src-name": "request-header-forward-list"
                },
                "failure-action": {
                    "type": "string",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "Action to take after failure, default is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "default": "continue",
                    "format": "enum",
                    "src-name": "failure-action"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "200",
                    "default": "5",
                    "description": "Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5 (1000ms))",
                    "format": "number",
                    "src-name": "timeout"
                },
                "action": {
                    "type": "string",
                    "condition": "timeout",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "action to take after timeout: default action is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "default": "continue",
                    "format": "enum",
                    "src-name": "action"
                },
                "service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Bind a Service Group to the template (Service Group Name)",
                    "src-name": "service-group"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "skyfire-icap",
                        "url-filter"
                    ],
                    "enumMap": [
                        {
                            "skyfire-icap": "\"Skyfire ICAP service"
                        },
                        {
                            "url-filter": "\"URL filtering service"
                        }
                    ],
                    "description": "Service type 'skyfire-icap': \"Skyfire ICAP service;'url-filter': \"URL filtering service;",
                    "default": "url-filter",
                    "format": "enum",
                    "src-name": "type"
                },
                "template": {
                    "type": "dummy",
                    "description": "Apply a tcp-proxy or persist template to this template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "tcp-proxy": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "TCP proxy template (TCP proxy template name)",
                    "obj-lineage-full": "slb.template.tcp-proxy",
                    "$ref": "/axapi/v3/slb/template/tcp-proxy",
                    "format": "string",
                    "src-name": "tcp-proxy"
                },
                "persist": {
                    "type": "dummy",
                    "condition": "template",
                    "description": "Persistence templates",
                    "format": "dummy",
                    "src-name": "persist"
                },
                "source-ip": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "persist",
                    "obj-lineage-full": "slb.template.persist.source-ip",
                    "$ref": "/axapi/v3/slb/template/persist/source-ip",
                    "description": "Source IP persistence template (Source IP persistence template name)",
                    "format": "string",
                    "src-name": "source-ip"
                }
            },
            "type": "object"
        },
        "fix-list": {
            "obj-name": "fix",
            "obj-help": "FIX template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "fix",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-disp-after": "slb.service-group",
            "obj-lineage-full": "slb.template.fix",
            "axapi": "/axapi/v3/slb/template/fix/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "FIX Template Name",
                    "src-name": "name"
                },
                "insert-client-ip": {
                    "type": "number",
                    "format": "flag",
                    "description": "Insert client ip to tag 11447",
                    "src-name": "insert-client-ip"
                },
                "tag-switching": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "maxItems": "127",
                    "description": "tag-switching Select service group based on tag value",
                    "properties": [
                        {
                            "switching-type": {
                                "type": "string",
                                "condition": "tag-switching",
                                "enum": [
                                    "sender-comp-id",
                                    "target-comp-id"
                                ],
                                "enumMap": [
                                    {
                                        "sender-comp-id": "\"Select service group based on SenderCompID"
                                    },
                                    {
                                        "target-comp-id": "\"Select service group based on TargetCompID"
                                    }
                                ],
                                "description": "'sender-comp-id': \"Select service group based on SenderCompID;'target-comp-id': \"Select service group based on TargetCompID;",
                                "format": "enum",
                                "src-name": "switching-type"
                            }
                        },
                        {
                            "equals": {
                                "type": "string",
                                "minLength": "1",
                                "maxLength": "63",
                                "multi-field-key": true,
                                "condition": "switching-type",
                                "description": "Equals (Tag String)",
                                "format": "string",
                                "src-name": "equals"
                            }
                        },
                        {
                            "service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "condition": "equals",
                                "description": "Create a Service Group comprising Servers (Service Group Name)",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "src-name": "service-group"
                            }
                        }
                    ],
                    "src-name": "tag-switching"
                }
            },
            "type": "object"
        },
        "http-policy-list": {
            "obj-name": "http-policy",
            "obj-help": "http-policy template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "http-policy",
            "obj-disp-after": "waf.template",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.http-policy",
            "axapi": "/axapi/v3/slb/template/http-policy/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "http-policy template name",
                    "src-name": "name"
                },
                "cookie-name": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "name of cookie to match (Cookie Name)",
                    "src-name": "cookie-name"
                },
                "http-policy-match": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "type": {
                                "type": "string",
                                "multi-field-key": true,
                                "enum": [
                                    "cookie",
                                    "host",
                                    "url"
                                ],
                                "enumMap": [
                                    {
                                        "cookie": "\"cookie value match"
                                    },
                                    {
                                        "host": "\"hostname match"
                                    },
                                    {
                                        "url": "\"URL match"
                                    }
                                ],
                                "description": "'cookie': \"cookie value match;'host': \"hostname match;'url': \"URL match;",
                                "maxItems": "64",
                                "format": "enum",
                                "src-name": "type"
                            }
                        },
                        {
                            "match-type": {
                                "type": "string",
                                "multi-field-key": true,
                                "enum": [
                                    "contains",
                                    "ends-with",
                                    "equals",
                                    "starts-with"
                                ],
                                "enumMap": [
                                    {
                                        "contains": "\"Select service group if URL string contains another string"
                                    },
                                    {
                                        "ends-with": "\"Select service group if URL string ends with another string"
                                    },
                                    {
                                        "equals": "\"Select service group if URL string equals another string"
                                    },
                                    {
                                        "starts-with": "\"Select service group if URL string starts with another string"
                                    }
                                ],
                                "description": "'contains': \"Select service group if URL string contains another string;'ends-with': \"Select service group if URL string ends with another string;'equals': \"Select service group if URL string equals another string;'starts-with': \"Select service group if URL string starts with another string;",
                                "maxItems": "64",
                                "format": "enum",
                                "src-name": "match-type"
                            }
                        },
                        {
                            "match-string": {
                                "type": "string",
                                "format": "string-rlx",
                                "multi-field-key": true,
                                "description": "URL String",
                                "maxItems": "64",
                                "src-name": "match-string"
                            }
                        },
                        {
                            "service-group": {
                                "type": "string",
                                "format": "long-string",
                                "minLength": "1",
                                "maxLength": "127",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "description": "Service Group to be used (Service Group Name)",
                                "src-name": "service-group"
                            }
                        },
                        {
                            "template": {
                                "type": "string",
                                "plat-neg-list": "fireeye",
                                "enum": [
                                    "waf"
                                ],
                                "enumMap": [
                                    {
                                        "waf": "waf"
                                    }
                                ],
                                "description": "WAF template to be used 'undefined': undefined; (WAF template to be used)",
                                "format": "enum",
                                "src-name": "template"
                            }
                        },
                        {
                            "template-name": {
                                "type": "string",
                                "format": "string-rlx",
                                "plat-neg-list": "fireeye",
                                "minLength": "1",
                                "maxLength": "63",
                                "description": "WAF template to be used (Template Name)",
                                "obj-lineage-full": "waf.template",
                                "$ref": "/axapi/v3/waf/template",
                                "src-name": "template-name"
                            }
                        }
                    ],
                    "src-name": "http-policy-match"
                },
                "geo-location-match": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "geo-location": {
                                "type": "string",
                                "multi-field-key": true,
                                "maxItems": "64",
                                "description": "Geolocation name",
                                "format": "string",
                                "src-name": "geo-location"
                            }
                        },
                        {
                            "geo-location-service-group": {
                                "type": "string",
                                "format": "long-string-rlx",
                                "minLength": "1",
                                "maxLength": "127",
                                "obj-lineage-full": "slb.service-group",
                                "$ref": "/axapi/v3/slb/service-group",
                                "description": "Service Group to be used (Service Group Name)",
                                "alias": "geo-location-service-group",
                                "src-name": "service-group"
                            }
                        },
                        {
                            "geo-location-template": {
                                "type": "string",
                                "plat-neg-list": "fireeye",
                                "enum": [
                                    "waf"
                                ],
                                "enumMap": [
                                    {
                                        "waf": "waf"
                                    }
                                ],
                                "description": "WAF template to be used 'undefined': undefined; (WAF template to be used)",
                                "alias": "geo-location-template",
                                "format": "enum",
                                "src-name": "template"
                            }
                        },
                        {
                            "geo-location-template-name": {
                                "type": "string",
                                "format": "string-rlx",
                                "plat-neg-list": "fireeye",
                                "minLength": "1",
                                "maxLength": "127",
                                "description": "WAF template to be used (Template Name)",
                                "obj-lineage-full": "waf.template",
                                "$ref": "/axapi/v3/waf/template",
                                "alias": "geo-location-template-name",
                                "src-name": "template-name"
                            }
                        }
                    ],
                    "src-name": "geo-location-match"
                }
            },
            "type": "object"
        },
        "monitor-list": {
            "obj-name": "monitor",
            "obj-help": "Monitor template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "monitor",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.monitor",
            "axapi": "/axapi/v3/slb/template/monitor/{id}",
            "properties": {
                "id": {
                    "type": "number",
                    "object-key": true,
                    "minimum": "1",
                    "maximum": "16",
                    "description": "Monitor template ID Number",
                    "format": "number",
                    "src-name": "id"
                },
                "action": {
                    "type": "dummy",
                    "description": "Actions to be performed when any of the monitor condition is met",
                    "format": "dummy",
                    "src-name": "action"
                },
                "clear-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "clear": {
                                "type": "dummy",
                                "maxItems": "16",
                                "condition": "action",
                                "description": "Clear or Reset Functions",
                                "format": "dummy",
                                "src-name": "clear"
                            }
                        },
                        {
                            "sessions": {
                                "type": "string",
                                "condition": "clear",
                                "enum": [
                                    "all",
                                    "sequence"
                                ],
                                "enumMap": [
                                    {
                                        "all": "\"Clear all sessions"
                                    },
                                    {
                                        "sequence": "\"Sequence number"
                                    }
                                ],
                                "description": "Clear SLB Sessions 'all': \"Clear all sessions;'sequence': \"Sequence number;",
                                "format": "enum",
                                "src-name": "sessions"
                            }
                        },
                        {
                            "clear-all-sequence": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "disabled": "sequence",
                                "multi-field-key": true,
                                "condition": "sessions",
                                "alias": "clear-all-sequence",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        },
                        {
                            "clear-sequence": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "disabled": "all",
                                "multi-field-key": true,
                                "condition": "sessions",
                                "alias": "clear-sequence",
                                "description": "Specify the port physical port number",
                                "format": "number",
                                "src-name": "sequence-number"
                            }
                        }
                    ],
                    "src-name": "clear-cfg"
                },
                "link-disable-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "link-disable": {
                                "type": "dummy",
                                "maxItems": "16",
                                "condition": "action",
                                "description": "Specift the interface(s) to be disabled",
                                "format": "dummy",
                                "src-name": "link-disable"
                            }
                        },
                        {
                            "diseth": {
                                "type": "number",
                                "format": "interface",
                                "condition": "link-disable",
                                "alias": "diseth",
                                "description": "Specify the physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "dis-sequence": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "diseth",
                                "alias": "dis-sequence",
                                "description": "Sequence number (Specify the physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        }
                    ],
                    "src-name": "link-disable-cfg"
                },
                "link-enable-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "link-enable": {
                                "type": "dummy",
                                "maxItems": "16",
                                "condition": "action",
                                "description": "Specify the interface(s) to be enabled",
                                "format": "dummy",
                                "src-name": "link-enable"
                            }
                        },
                        {
                            "enaeth": {
                                "type": "number",
                                "format": "interface",
                                "condition": "link-enable",
                                "alias": "enaeth",
                                "description": "Specify the physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "ena-sequence": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "enaeth",
                                "alias": "ena-sequence",
                                "description": "Sequence number (Specify the physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        }
                    ],
                    "src-name": "link-enable-cfg"
                },
                "monitor-relation": {
                    "type": "string",
                    "enum": [
                        "monitor-and",
                        "monitor-or"
                    ],
                    "enumMap": [
                        {
                            "monitor-and": "\"Configures the monitors in current template to work with AND logic"
                        },
                        {
                            "monitor-or": "\"Configures the monitors in current template to work with OR logic"
                        }
                    ],
                    "description": "'monitor-and': \"Configures the monitors in current template to work with AND logic;'monitor-or': \"Configures the monitors in current template to work with OR logic;",
                    "default": "monitor-and",
                    "format": "enum",
                    "src-name": "monitor-relation"
                },
                "monitor": {
                    "type": "dummy",
                    "description": "Events to monitor",
                    "format": "dummy",
                    "src-name": "monitor"
                },
                "link-up-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "link-up": {
                                "type": "dummy",
                                "maxItems": "16",
                                "condition": "monitor",
                                "description": "Specify the interface(s) to monitor for link-up event",
                                "format": "dummy",
                                "src-name": "link-up"
                            }
                        },
                        {
                            "linkup-ethernet1": {
                                "type": "number",
                                "format": "interface",
                                "condition": "link-up",
                                "alias": "linkup-ethernet1",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-up-sequence1": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkup-ethernet1",
                                "alias": "link-up-sequence1",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        },
                        {
                            "linkup-ethernet2": {
                                "type": "number",
                                "format": "interface",
                                "condition": "linkup-ethernet1",
                                "alias": "linkup-ethernet2",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-up-sequence2": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkup-ethernet2",
                                "alias": "link-up-sequence2",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        },
                        {
                            "linkup-ethernet3": {
                                "type": "number",
                                "format": "interface",
                                "condition": "linkup-ethernet2",
                                "alias": "linkup-ethernet3",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-up-sequence3": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkup-ethernet3",
                                "alias": "link-up-sequence3",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        }
                    ],
                    "src-name": "link-up-cfg"
                },
                "link-down-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "link-down": {
                                "type": "dummy",
                                "maxItems": "16",
                                "condition": "monitor",
                                "description": "Specify the interface(s) to monitor for link-down event",
                                "format": "dummy",
                                "src-name": "link-down"
                            }
                        },
                        {
                            "linkdown-ethernet1": {
                                "type": "number",
                                "format": "interface",
                                "condition": "link-down",
                                "alias": "linkdown-ethernet1",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-down-sequence1": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkdown-ethernet1",
                                "alias": "link-down-sequence1",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        },
                        {
                            "linkdown-ethernet2": {
                                "type": "number",
                                "format": "interface",
                                "condition": "linkdown-ethernet1",
                                "alias": "linkdown-ethernet2",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-down-sequence2": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkdown-ethernet2",
                                "alias": "link-down-sequence2",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        },
                        {
                            "linkdown-ethernet3": {
                                "type": "number",
                                "format": "interface",
                                "condition": "linkdown-ethernet2",
                                "alias": "linkdown-ethernet3",
                                "description": "Specify the port physical port number (Ethernet interface number)",
                                "src-name": "eth"
                            }
                        },
                        {
                            "link-down-sequence3": {
                                "type": "number",
                                "minimum": "1",
                                "maximum": "16",
                                "multi-field-key": true,
                                "condition": "linkdown-ethernet3",
                                "alias": "link-down-sequence3",
                                "description": "Sequence number (Specify the port physical port number)",
                                "format": "number",
                                "src-name": "sequence"
                            }
                        }
                    ],
                    "src-name": "link-down-cfg"
                }
            },
            "type": "object"
        },
        "reqmod-icap-list": {
            "obj-name": "reqmod-icap",
            "obj-help": "REQMOD ICAP template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-head-node-options": "<plat-neg-list",
            "obj-module-prompt": "reqmod-icap",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.reqmod-icap",
            "axapi": "/axapi/v3/slb/template/reqmod-icap/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Reqmod ICAP Template Name",
                    "src-name": "name"
                },
                "allowed-http-methods": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "255",
                    "description": "List of allowed HTTP methods. Default is \"Allow All\". (List of HTTP methods allowed (default \"Allow All\"))",
                    "src-name": "allowed-http-methods"
                },
                "include-protocol-in-uri": {
                    "type": "number",
                    "format": "flag",
                    "default": "0",
                    "description": "Include protocol and port in HTTP URI",
                    "src-name": "include-protocol-in-uri"
                },
                "fail-close": {
                    "type": "number",
                    "format": "flag",
                    "default": "0",
                    "description": "When template sg is down mark vport down",
                    "src-name": "fail-close"
                },
                "bypass-ip-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "bypass-ip": {
                                "type": "ipv4-address",
                                "multi-field-key": true,
                                "description": "ip address to bypass reqmod-icap service (IP address)",
                                "hide-help": true,
                                "maxItems": "20",
                                "format": "ipv4-address",
                                "src-name": "bypass-ip"
                            }
                        },
                        {
                            "mask": {
                                "type": "ipv4-netmask",
                                "multi-field-key": true,
                                "condition": "bypass-ip",
                                "description": "IP prefix mask (IP prefix mask)",
                                "format": "ipv4-netmask",
                                "src-name": "mask"
                            }
                        }
                    ],
                    "src-name": "bypass-ip-cfg"
                },
                "failure-action": {
                    "type": "string",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "Action to take after failure, default is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "hide-help": true,
                    "default": "continue",
                    "format": "enum",
                    "src-name": "failure-action"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "200",
                    "default": "5",
                    "hide-help": true,
                    "description": "Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5 (1000ms))",
                    "format": "number",
                    "src-name": "timeout"
                },
                "action": {
                    "type": "string",
                    "condition": "timeout",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "action to take after timeout: default action is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "default": "continue",
                    "format": "enum",
                    "src-name": "action"
                },
                "min-payload-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65536",
                    "default": "4096",
                    "description": "min-payload-size value 1 - 65536, default is 4096 (1 - 65536, default is 4096)",
                    "format": "number",
                    "src-name": "min-payload-size"
                },
                "preview": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "32768",
                    "default": "32768",
                    "description": "Preview value 1 - 32768, default is 32768 (1 - 32768, default is 32768)",
                    "format": "number",
                    "src-name": "preview"
                },
                "service-url": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "255",
                    "description": "URL to send to ICAP server (Service URL Name)",
                    "src-name": "service-url"
                },
                "service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Bind a Service Group to the template (Service Group Name)",
                    "src-name": "service-group"
                },
                "template": {
                    "type": "dummy",
                    "description": "Apply a tcp-proxy/persist/logging/server-ssl template to this template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "tcp-proxy": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "TCP proxy template (TCP proxy template name)",
                    "obj-lineage-full": "slb.template.tcp-proxy",
                    "$ref": "/axapi/v3/slb/template/tcp-proxy",
                    "format": "string",
                    "src-name": "tcp-proxy"
                },
                "logging": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "logging template (Logging template name)",
                    "obj-lineage-full": "slb.template.logging",
                    "$ref": "/axapi/v3/slb/template/logging",
                    "format": "string",
                    "src-name": "logging"
                },
                "server-ssl": {
                    "type": "string",
                    "format": "name",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "Server SSL template (Server SSL template name)",
                    "obj-lineage-full": "slb.template.server-ssl",
                    "$ref": "/axapi/v3/slb/template/server-ssl",
                    "src-name": "server-ssl"
                },
                "persist": {
                    "type": "dummy",
                    "condition": "template",
                    "description": "Persistence templates",
                    "format": "dummy",
                    "src-name": "persist"
                },
                "source-ip": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "persist",
                    "obj-lineage-full": "slb.template.persist.source-ip",
                    "$ref": "/axapi/v3/slb/template/persist/source-ip",
                    "description": "Source IP persistence template (Source IP persistence template name)",
                    "format": "string",
                    "src-name": "source-ip"
                }
            },
            "type": "object"
        },
        "respmod-icap-list": {
            "obj-name": "respmod-icap",
            "obj-help": "RESPMOD ICAP template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "respmod-icap",
            "obj-disp-after": "slb.service-group",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-head-node-options": "<plat-neg-list",
            "obj-lineage-full": "slb.template.respmod-icap",
            "axapi": "/axapi/v3/slb/template/respmod-icap/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Reqmod ICAP Template Name",
                    "src-name": "name"
                },
                "include-protocol-in-uri": {
                    "type": "number",
                    "format": "flag",
                    "default": "0",
                    "description": "Include protocol and port in HTTP URI",
                    "src-name": "include-protocol-in-uri"
                },
                "fail-close": {
                    "type": "number",
                    "format": "flag",
                    "default": "0",
                    "description": "When template sg is down mark vport down",
                    "src-name": "fail-close"
                },
                "bypass-ip-cfg": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "bypass-ip": {
                                "type": "ipv4-address",
                                "multi-field-key": true,
                                "hide-help": true,
                                "description": "ip address to bypass respmod-icap service (IP address)",
                                "maxItems": "20",
                                "format": "ipv4-address",
                                "src-name": "bypass-ip"
                            }
                        },
                        {
                            "mask": {
                                "type": "ipv4-netmask",
                                "multi-field-key": true,
                                "condition": "bypass-ip",
                                "description": "IP prefix mask (IP prefix mask)",
                                "format": "ipv4-netmask",
                                "src-name": "mask"
                            }
                        }
                    ],
                    "src-name": "bypass-ip-cfg"
                },
                "failure-action": {
                    "type": "string",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "Action to take after failure, default is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "hide-help": true,
                    "default": "continue",
                    "format": "enum",
                    "src-name": "failure-action"
                },
                "timeout": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "200",
                    "default": "5",
                    "hide-help": true,
                    "description": "Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5 (1000ms))",
                    "format": "number",
                    "src-name": "timeout"
                },
                "action": {
                    "type": "string",
                    "condition": "timeout",
                    "enum": [
                        "continue",
                        "drop",
                        "reset"
                    ],
                    "enumMap": [
                        {
                            "continue": "\"Continue"
                        },
                        {
                            "drop": "\"Drop"
                        },
                        {
                            "reset": "\"Reset"
                        }
                    ],
                    "description": "action to take after timeout: default action is continue 'continue': \"Continue;'drop': \"Drop;'reset': \"Reset;",
                    "default": "continue",
                    "format": "enum",
                    "src-name": "action"
                },
                "min-payload-size": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "65536",
                    "default": "4096",
                    "description": "min-payload-size value 1 - 65536, default is 4096 (1 - 65536, default is 4096)",
                    "format": "number",
                    "src-name": "min-payload-size"
                },
                "preview": {
                    "type": "number",
                    "minimum": "1",
                    "maximum": "32768",
                    "default": "32768",
                    "description": "Preview value 1 - 32768, default is 32768 (1 - 32768, default is 32768)",
                    "format": "number",
                    "src-name": "preview"
                },
                "service-url": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "255",
                    "description": "URL to send to ICAP server (Service URL Name)",
                    "src-name": "service-url"
                },
                "service-group": {
                    "type": "string",
                    "format": "long-string-rlx",
                    "minLength": "1",
                    "maxLength": "127",
                    "obj-lineage-full": "slb.service-group",
                    "$ref": "/axapi/v3/slb/service-group",
                    "description": "Bind a Service Group to the template (Service Group Name)",
                    "src-name": "service-group"
                },
                "template": {
                    "type": "dummy",
                    "description": "Apply a tcp-proxy/persist/logging/server-ssl template to this template",
                    "format": "dummy",
                    "src-name": "template"
                },
                "tcp-proxy": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "TCP proxy template (TCP proxy template name)",
                    "obj-lineage-full": "slb.template.tcp-proxy",
                    "$ref": "/axapi/v3/slb/template/tcp-proxy",
                    "format": "string",
                    "src-name": "tcp-proxy"
                },
                "logging": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "logging template (Logging template name)",
                    "obj-lineage-full": "slb.template.logging",
                    "$ref": "/axapi/v3/slb/template/logging",
                    "format": "string",
                    "src-name": "logging"
                },
                "server-ssl": {
                    "type": "string",
                    "format": "name",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "template",
                    "description": "Server SSL template (Server SSL template name)",
                    "obj-lineage-full": "slb.template.server-ssl",
                    "$ref": "/axapi/v3/slb/template/server-ssl",
                    "src-name": "server-ssl"
                },
                "persist": {
                    "type": "dummy",
                    "condition": "template",
                    "description": "Persistence templates",
                    "format": "dummy",
                    "src-name": "persist"
                },
                "source-ip": {
                    "type": "string",
                    "minLength": "1",
                    "maxLength": "127",
                    "condition": "persist",
                    "obj-lineage-full": "slb.template.persist.source-ip",
                    "$ref": "/axapi/v3/slb/template/persist/source-ip",
                    "description": "Source IP persistence template (Source IP persistence template name)",
                    "format": "string",
                    "src-name": "source-ip"
                }
            },
            "type": "object"
        },
        "smpp-list": {
            "obj-name": "smpp",
            "obj-help": "SMPP template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "smpp",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.smpp",
            "axapi": "/axapi/v3/slb/template/smpp/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "SMPP Template Name",
                    "src-name": "name"
                },
                "client-enquire-link": {
                    "type": "number",
                    "format": "flag",
                    "description": "Respond client ENQUIRE_LINK packet directly instead of forwarding to server",
                    "src-name": "client-enquire-link"
                },
                "server-enquire-link": {
                    "type": "number",
                    "format": "flag",
                    "description": "Send server ENQUIRE_LINK packet for every persist connection when enable conn-reuse",
                    "src-name": "server-enquire-link"
                },
                "server-enquire-link-val": {
                    "type": "number",
                    "minimum": "5",
                    "maximum": "300",
                    "condition": "server-enquire-link",
                    "description": "Set interval of keep-alive packet for each persistent connection (second, default is 30)",
                    "default": "30",
                    "format": "number",
                    "src-name": "server-enquire-link-val"
                },
                "user": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "description": "Configure the user to bind (The name used to bind)",
                    "src-name": "user"
                },
                "password": {
                    "type": "string",
                    "format": "string-rlx",
                    "minLength": "1",
                    "maxLength": "63",
                    "condition": "user",
                    "description": "Configure the password used to bind (The password used to bind)",
                    "src-name": "password"
                },
                "server-selection-per-request": {
                    "type": "number",
                    "format": "flag",
                    "description": "Force server selection on every SMPP request when enable conn-reuse",
                    "src-name": "server-selection-per-request"
                }
            },
            "type": "object"
        },
        "dynamic-service-list": {
            "obj-name": "dynamic-service",
            "obj-help": "Dynamic service template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "dynamic-service",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.dynamic-service",
            "axapi": "/axapi/v3/slb/template/dynamic-service/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "Dynamic Service Template Name",
                    "src-name": "name"
                },
                "dns-server": {
                    "type": "array",
                    "array-start": true,
                    "array-multi": true,
                    "properties": [
                        {
                            "dns": {
                                "type": "dummy",
                                "description": "Specify DNS Option",
                                "format": "dummy",
                                "src-name": "dns"
                            }
                        },
                        {
                            "server": {
                                "type": "dummy",
                                "description": "DNS Server",
                                "condition": "dns",
                                "format": "dummy",
                                "src-name": "server"
                            }
                        },
                        {
                            "ipv4-dns-server": {
                                "type": "ipv4-address",
                                "description": "DNS Server IPv4 Address",
                                "condition": "server",
                                "multi-field-key": true,
                                "maxItems": "2",
                                "format": "ipv4-address",
                                "src-name": "ipv4-dns-server"
                            }
                        },
                        {
                            "ipv6-dns-server": {
                                "type": "ipv6-address",
                                "description": "DNS Server IPv6 Address",
                                "condition": "server",
                                "multi-field-key": true,
                                "maxItems": "2",
                                "format": "ipv6-address",
                                "src-name": "ipv6-dns-server"
                            }
                        }
                    ],
                    "src-name": "dns-server"
                }
            },
            "type": "object"
        },
        "ssli-list": {
            "obj-name": "ssli",
            "obj-help": "SSL insight template",
            "obj-lineage": "cmroot.slb.template",
            "obj-occurences": "multi",
            "obj-json-suffix": "-list",
            "obj-indexing": "none",
            "obj-module-prompt": "ssli",
            "obj-module-dont-display-value-in-prompt": true,
            "obj-lineage-full": "slb.template.ssli",
            "axapi": "/axapi/v3/slb/template/ssli/{name}",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string-rlx",
                    "object-key": true,
                    "minLength": "1",
                    "maxLength": "127",
                    "description": "SSLi Template Name",
                    "src-name": "name"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http",
                        "xmpp",
                        "smtp",
                        "pop"
                    ],
                    "enumMap": [
                        {
                            "http": "\"HTTP service"
                        },
                        {
                            "xmpp": "\"XMPP service"
                        },
                        {
                            "smtp": "\"SMTP service"
                        },
                        {
                            "pop": "\"POP service"
                        }
                    ],
                    "description": "SSL insight protocol type 'http': \"HTTP service;'xmpp': \"XMPP service;'smtp': \"SMTP service;'pop': \"POP service;",
                    "default": "http",
                    "format": "enum",
                    "src-name": "type"
                }
            },
            "type": "object"
        }
    }
}